/* Generated by re2c 1.1.1 */
#line 1 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
// A Bison parser, made by GNU Bison 3.0.4.

// Skeleton implementation for Bison LALR(1) parsers in C++

// Copyright (C) 2002-2015 Free Software Foundation, Inc.

// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

// As a special exception, you may create a larger work that contains
// part or all of the Bison parser skeleton and distribute that work
// under terms of your choice, so long as that work isn't itself a
// parser generator using the skeleton or a modified version thereof
// as a parser skeleton.  Alternatively, if you modify or redistribute
// the parser skeleton itself, you may (at your option) remove this
// special exception, which will cause the skeleton and the resulting
// Bison output files to be licensed under the GNU General Public
// License without this special exception.

// This special exception was added by the Free Software Foundation in
// version 2.2 of Bison.


// First part of user declarations.

#line 37 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:404

# ifndef YY_NULLPTR
#  if defined __cplusplus && 201103L <= __cplusplus
#   define YY_NULLPTR nullptr
#  else
#   define YY_NULLPTR 0
#  endif
# endif

// //                    "%code requires" blocks.
#line 10 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:408

    #include "fast_ber/compiler/CompilerTypes.hpp"

#line 52 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:408

# include <cassert>
# include <cstdlib> // std::abort
# include <iostream>
# include <stdexcept>
# include <string>
# include <vector>
#include <typeinfo>
#ifndef YYASSERT
# include <cassert>
# define YYASSERT assert
#endif


#ifndef YY_ATTRIBUTE
# if (defined __GNUC__                                               \
      && (2 < __GNUC__ || (__GNUC__ == 2 && 96 <= __GNUC_MINOR__)))  \
     || defined __SUNPRO_C && 0x5110 <= __SUNPRO_C
#  define YY_ATTRIBUTE(Spec) __attribute__(Spec)
# else
#  define YY_ATTRIBUTE(Spec) /* empty */
# endif
#endif

#ifndef YY_ATTRIBUTE_PURE
# define YY_ATTRIBUTE_PURE   YY_ATTRIBUTE ((__pure__))
#endif

#ifndef YY_ATTRIBUTE_UNUSED
# define YY_ATTRIBUTE_UNUSED YY_ATTRIBUTE ((__unused__))
#endif

#if !defined _Noreturn \
     && (!defined __STDC_VERSION__ || __STDC_VERSION__ < 201112)
# if defined _MSC_VER && 1200 <= _MSC_VER
#  define _Noreturn __declspec (noreturn)
# else
#  define _Noreturn YY_ATTRIBUTE ((__noreturn__))
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(E) ((void) (E))
#else
# define YYUSE(E) /* empty */
#endif

#if defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN \
    _Pragma ("GCC diagnostic push") \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")\
    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
# define YY_IGNORE_MAYBE_UNINITIALIZED_END \
    _Pragma ("GCC diagnostic pop")
#else
# define YY_INITIAL_VALUE(Value) Value
#endif
#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_END
#endif
#ifndef YY_INITIAL_VALUE
# define YY_INITIAL_VALUE(Value) /* Nothing. */
#endif

/* Debug traces.  */
#ifndef YYDEBUG
# define YYDEBUG 1
#endif


namespace yy {
#line 127 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:408

  template <class T, class S = std::vector<T> >
  class stack
  {
  public:
    // Hide our reversed order.
    typedef typename S::reverse_iterator iterator;
    typedef typename S::const_reverse_iterator const_iterator;

    stack ()
      : seq_ ()
    {
      seq_.reserve (200);
    }

    stack (unsigned int n)
      : seq_ (n)
    {}

    inline
    T&
    operator[] (unsigned int i)
    {
      return seq_[seq_.size () - 1 - i];
    }

    inline
    const T&
    operator[] (unsigned int i) const
    {
      return seq_[seq_.size () - 1 - i];
    }

    /// Steal the contents of \a t.
    ///
    /// Close to move-semantics.
    inline
    void
    push (T& t)
    {
      seq_.push_back (T());
      operator[](0).move (t);
    }

    inline
    void
    pop (unsigned int n = 1)
    {
      for (; n; --n)
        seq_.pop_back ();
    }

    void
    clear ()
    {
      seq_.clear ();
    }

    inline
    typename S::size_type
    size () const
    {
      return seq_.size ();
    }

    inline
    const_iterator
    begin () const
    {
      return seq_.rbegin ();
    }

    inline
    const_iterator
    end () const
    {
      return seq_.rend ();
    }

  private:
    stack (const stack&);
    stack& operator= (const stack&);
    /// The wrapped container.
    S seq_;
  };

  /// Present a slice of the top of a stack.
  template <class T, class S = stack<T> >
  class slice
  {
  public:
    slice (const S& stack, unsigned int range)
      : stack_ (stack)
      , range_ (range)
    {}

    inline
    const T&
    operator [] (unsigned int i) const
    {
      return stack_[range_ - i];
    }

  private:
    const S& stack_;
    unsigned int range_;
  };

  /// Abstract a position.
  class position
  {
  public:
    /// Construct a position.
    explicit position (std::string* f = YY_NULLPTR,
                       unsigned int l = 1u,
                       unsigned int c = 1u)
      : filename (f)
      , line (l)
      , column (c)
    {
    }


    /// Initialization.
    void initialize (std::string* fn = YY_NULLPTR,
                     unsigned int l = 1u,
                     unsigned int c = 1u)
    {
      filename = fn;
      line = l;
      column = c;
    }

    /** \name Line and Column related manipulators
     ** \{ */
    /// (line related) Advance to the COUNT next lines.
    void lines (int count = 1)
    {
      if (count)
        {
          column = 1u;
          line = add_ (line, count, 1);
        }
    }

    /// (column related) Advance to the COUNT next columns.
    void columns (int count = 1)
    {
      column = add_ (column, count, 1);
    }
    /** \} */

    /// File name to which this position refers.
    std::string* filename;
    /// Current line number.
    unsigned int line;
    /// Current column number.
    unsigned int column;

  private:
    /// Compute max(min, lhs+rhs) (provided min <= lhs).
    static unsigned int add_ (unsigned int lhs, int rhs, unsigned int min)
    {
      return (0 < rhs || -static_cast<unsigned int>(rhs) < lhs
              ? rhs + lhs
              : min);
    }
  };

  /// Add \a width columns, in place.
  inline position&
  operator+= (position& res, int width)
  {
    res.columns (width);
    return res;
  }

  /// Add \a width columns.
  inline position
  operator+ (position res, int width)
  {
    return res += width;
  }

  /// Subtract \a width columns, in place.
  inline position&
  operator-= (position& res, int width)
  {
    return res += -width;
  }

  /// Subtract \a width columns.
  inline position
  operator- (position res, int width)
  {
    return res -= width;
  }

  /// Compare two position objects.
  inline bool
  operator== (const position& pos1, const position& pos2)
  {
    return (pos1.line == pos2.line
            && pos1.column == pos2.column
            && (pos1.filename == pos2.filename
                || (pos1.filename && pos2.filename
                    && *pos1.filename == *pos2.filename)));
  }

  /// Compare two position objects.
  inline bool
  operator!= (const position& pos1, const position& pos2)
  {
    return !(pos1 == pos2);
  }

  /** \brief Intercept output stream redirection.
   ** \param ostr the destination output stream
   ** \param pos a reference to the position to redirect
   */
  template <typename YYChar>
  inline std::basic_ostream<YYChar>&
  operator<< (std::basic_ostream<YYChar>& ostr, const position& pos)
  {
    if (pos.filename)
      ostr << *pos.filename << ':';
    return ostr << pos.line << '.' << pos.column;
  }

  /// Abstract a location.
  class location
  {
  public:

    /// Construct a location from \a b to \a e.
    location (const position& b, const position& e)
      : begin (b)
      , end (e)
    {
    }

    /// Construct a 0-width location in \a p.
    explicit location (const position& p = position ())
      : begin (p)
      , end (p)
    {
    }

    /// Construct a 0-width location in \a f, \a l, \a c.
    explicit location (std::string* f,
                       unsigned int l = 1u,
                       unsigned int c = 1u)
      : begin (f, l, c)
      , end (f, l, c)
    {
    }


    /// Initialization.
    void initialize (std::string* f = YY_NULLPTR,
                     unsigned int l = 1u,
                     unsigned int c = 1u)
    {
      begin.initialize (f, l, c);
      end = begin;
    }

    /** \name Line and Column related manipulators
     ** \{ */
  public:
    /// Reset initial location to final location.
    void step ()
    {
      begin = end;
    }

    /// Extend the current location to the COUNT next columns.
    void columns (int count = 1)
    {
      end += count;
    }

    /// Extend the current location to the COUNT next lines.
    void lines (int count = 1)
    {
      end.lines (count);
    }
    /** \} */


  public:
    /// Beginning of the located region.
    position begin;
    /// End of the located region.
    position end;
  };

  /// Join two locations, in place.
  inline location& operator+= (location& res, const location& end)
  {
    res.end = end.end;
    return res;
  }

  /// Join two locations.
  inline location operator+ (location res, const location& end)
  {
    return res += end;
  }

  /// Add \a width columns to the end position, in place.
  inline location& operator+= (location& res, int width)
  {
    res.columns (width);
    return res;
  }

  /// Add \a width columns to the end position.
  inline location operator+ (location res, int width)
  {
    return res += width;
  }

  /// Subtract \a width columns to the end position, in place.
  inline location& operator-= (location& res, int width)
  {
    return res += -width;
  }

  /// Subtract \a width columns to the end position.
  inline location operator- (location res, int width)
  {
    return res -= width;
  }

  /// Compare two location objects.
  inline bool
  operator== (const location& loc1, const location& loc2)
  {
    return loc1.begin == loc2.begin && loc1.end == loc2.end;
  }

  /// Compare two location objects.
  inline bool
  operator!= (const location& loc1, const location& loc2)
  {
    return !(loc1 == loc2);
  }

  /** \brief Intercept output stream redirection.
   ** \param ostr the destination output stream
   ** \param loc a reference to the location to redirect
   **
   ** Avoid duplicate information.
   */
  template <typename YYChar>
  inline std::basic_ostream<YYChar>&
  operator<< (std::basic_ostream<YYChar>& ostr, const location& loc)
  {
    unsigned int end_col = 0 < loc.end.column ? loc.end.column - 1 : 0;
    ostr << loc.begin;
    if (loc.end.filename
        && (!loc.begin.filename
            || *loc.begin.filename != *loc.end.filename))
      ostr << '-' << loc.end.filename << ':' << loc.end.line << '.' << end_col;
    else if (loc.begin.line < loc.end.line)
      ostr << '-' << loc.end.line << '.' << end_col;
    else if (loc.begin.column < end_col)
      ostr << '-' << end_col;
    return ostr;
  }


  /// A char[S] buffer to store and retrieve objects.
  ///
  /// Sort of a variant, but does not keep track of the nature
  /// of the stored data, since that knowledge is available
  /// via the current state.
  template <size_t S>
  struct variant
  {
    /// Type of *this.
    typedef variant<S> self_type;

    /// Empty construction.
    variant ()
      : yytypeid_ (YY_NULLPTR)
    {}

    /// Construct and fill.
    template <typename T>
    variant (const T& t)
      : yytypeid_ (&typeid (T))
    {
      YYASSERT (sizeof (T) <= S);
      new (yyas_<T> ()) T (t);
    }

    /// Destruction, allowed only if empty.
    ~variant ()
    {
      YYASSERT (!yytypeid_);
    }

    /// Instantiate an empty \a T in here.
    template <typename T>
    T&
    build ()
    {
      YYASSERT (!yytypeid_);
      YYASSERT (sizeof (T) <= S);
      yytypeid_ = & typeid (T);
      return *new (yyas_<T> ()) T;
    }

    /// Instantiate a \a T in here from \a t.
    template <typename T>
    T&
    build (const T& t)
    {
      YYASSERT (!yytypeid_);
      YYASSERT (sizeof (T) <= S);
      yytypeid_ = & typeid (T);
      return *new (yyas_<T> ()) T (t);
    }

    /// Accessor to a built \a T.
    template <typename T>
    T&
    as ()
    {
      YYASSERT (*yytypeid_ == typeid (T));
      YYASSERT (sizeof (T) <= S);
      return *yyas_<T> ();
    }

    /// Const accessor to a built \a T (for %printer).
    template <typename T>
    const T&
    as () const
    {
      YYASSERT (*yytypeid_ == typeid (T));
      YYASSERT (sizeof (T) <= S);
      return *yyas_<T> ();
    }

    /// Swap the content with \a other, of same type.
    ///
    /// Both variants must be built beforehand, because swapping the actual
    /// data requires reading it (with as()), and this is not possible on
    /// unconstructed variants: it would require some dynamic testing, which
    /// should not be the variant's responsability.
    /// Swapping between built and (possibly) non-built is done with
    /// variant::move ().
    template <typename T>
    void
    swap (self_type& other)
    {
      YYASSERT (yytypeid_);
      YYASSERT (*yytypeid_ == *other.yytypeid_);
      std::swap (as<T> (), other.as<T> ());
    }

    /// Move the content of \a other to this.
    ///
    /// Destroys \a other.
    template <typename T>
    void
    move (self_type& other)
    {
      build<T> ();
      swap<T> (other);
      other.destroy<T> ();
    }

    /// Copy the content of \a other to this.
    template <typename T>
    void
    copy (const self_type& other)
    {
      build<T> (other.as<T> ());
    }

    /// Destroy the stored \a T.
    template <typename T>
    void
    destroy ()
    {
      as<T> ().~T ();
      yytypeid_ = YY_NULLPTR;
    }

  private:
    /// Prohibit blind copies.
    self_type& operator=(const self_type&);
    variant (const self_type&);

    /// Accessor to raw memory as \a T.
    template <typename T>
    T*
    yyas_ ()
    {
      void *yyp = yybuffer_.yyraw;
      return static_cast<T*> (yyp);
     }

    /// Const accessor to raw memory as \a T.
    template <typename T>
    const T*
    yyas_ () const
    {
      const void *yyp = yybuffer_.yyraw;
      return static_cast<const T*> (yyp);
     }

    union
    {
      /// Strongest alignment constraints.
      long double yyalign_me;
      /// A buffer large enough to store any of the semantic values.
      char yyraw[S];
    } yybuffer_;

    /// Whether the content is built: if defined, the name of the stored type.
    const std::type_info *yytypeid_;
  };


  /// A Bison parser.
  class asn1_parser
  {
  public:
#ifndef YYSTYPE
    /// An auxiliary type to compute the largest semantic type.
    union union_type
    {
      // ParameterizedAssignment
      // ParameterizedTypeAssignment
      // ParameterizedValueAssignment
      // ParameterizedValueSetTypeAssignment
      // ParameterizedObjectClassAssignment
      // ParameterizedObjectAssignment
      // ParameterizedObjectSetAssignment
      // Assignment
      // TypeAssignment
      // ValueAssignment
      char dummy1[sizeof(Assignment)];

      // BuiltinType
      char dummy2[sizeof(BuiltinType)];

      // ChoiceType
      char dummy3[sizeof(ChoiceType)];

      // Class
      char dummy4[sizeof(Class)];

      // ComponentType
      char dummy5[sizeof(ComponentType)];

      // ComponentTypeLists
      // RootComponentTypeList
      // ComponentTypeList
      char dummy6[sizeof(ComponentTypeList)];

      // DefinedType
      // ParameterizedType
      char dummy7[sizeof(DefinedType)];

      // DefinedValue
      char dummy8[sizeof(DefinedValue)];

      // EnumeratedType
      // Enumerations
      // Enumeration
      char dummy9[sizeof(EnumeratedType)];

      // EnumerationItem
      char dummy10[sizeof(EnumerationValue)];

      // SymbolsFromModule
      char dummy11[sizeof(Import)];

      // ModuleBody
      char dummy12[sizeof(Module)];

      // NamedNumber
      char dummy13[sizeof(NamedNumber)];

      // NamedType
      char dummy14[sizeof(NamedType)];

      // ObjIdComponents
      // NameForm
      // NumberForm
      // NameAndNumberForm
      char dummy15[sizeof(ObjectIdComponentValue)];

      // PrefixedType
      char dummy16[sizeof(PrefixedType)];

      // SequenceOfType
      char dummy17[sizeof(SequenceOfType)];

      // SequenceType
      char dummy18[sizeof(SequenceType)];

      // SetOfType
      char dummy19[sizeof(SetOfType)];

      // SetType
      char dummy20[sizeof(SetType)];

      // Tag
      char dummy21[sizeof(Tag)];

      // TaggedType
      char dummy22[sizeof(TaggedType)];

      // TagDefault
      char dummy23[sizeof(TaggingMode)];

      // ActualParameter
      // Type
      char dummy24[sizeof(Type)];

      // Value
      char dummy25[sizeof(Value)];

      // realnumber
      char dummy26[sizeof(double)];

      // ClassNumber
      char dummy27[sizeof(int)];

      // number
      // SignedNumber
      char dummy28[sizeof(long long)];

      // ParameterList
      // ParameterSeries
      char dummy29[sizeof(std::set<std::string>)];

      // bstring
      // xmlbstring
      // hstring
      // xmlhstring
      // cstring
      // xmlcstring
      // simplestring
      // xmltstring
      // typefieldreference
      // valuefieldreference
      // GENERIC_IDENTIFIER_UPPERCASE
      // GENERIC_IDENTIFIER_LOWERCASE
      // Parameter
      // SimpleDefinedType
      // ModuleIdentifier
      // GlobalModuleReference
      // Symbol
      // Reference
      // typereference
      // identifier
      // valuereference
      // modulereference
      // objectclassreference
      // word
      char dummy30[sizeof(std::string)];

      // AssignmentList
      char dummy31[sizeof(std::vector<Assignment>)];

      // Exports
      char dummy32[sizeof(std::vector<Export>)];

      // Imports
      // SymbolsImported
      // SymbolsFromModuleList
      char dummy33[sizeof(std::vector<Import>)];

      // AlternativeTypeLists
      // RootAlternativeTypeList
      // AlternativeTypeList
      char dummy34[sizeof(std::vector<NamedType>)];

      // ObjectIdentifierValue
      // ObjIdComponentsList
      char dummy35[sizeof(std::vector<ObjectIdComponentValue>)];

      // ActualParameterList
      char dummy36[sizeof(std::vector<Type>)];

      // SequenceOfValues
      char dummy37[sizeof(std::vector<Value>)];

      // SymbolList
      char dummy38[sizeof(std::vector<std::string>)];
};

    /// Symbol semantic values.
    typedef variant<sizeof(union_type)> semantic_type;
#else
    typedef YYSTYPE semantic_type;
#endif
    /// Symbol locations.
    typedef location location_type;

    /// Syntax errors thrown from user actions.
    struct syntax_error : std::runtime_error
    {
      syntax_error (const location_type& l, const std::string& m);
      location_type location;
    };

    /// Tokens.
    struct token
    {
      enum yytokentype
      {
        END_OF_FILE = 0,
        comment = 258,
        number = 259,
        realnumber = 260,
        bstring = 261,
        xmlbstring = 262,
        hstring = 263,
        xmlhstring = 264,
        cstring = 265,
        xmlcstring = 266,
        simplestring = 267,
        xmltstring = 268,
        psname = 269,
        encodingreference = 270,
        integerUnicodeLabel = 271,
        tstring = 274,
        objectreference = 276,
        objectsetreference = 277,
        typefieldreference = 278,
        valuefieldreference = 279,
        valuesetfieldreference = 280,
        objectfieldreference = 281,
        objectsetfieldreference = 282,
        ABSENT = 283,
        ABSTRACT_SYNTAX = 284,
        ALL = 285,
        APPLICATION = 286,
        ASN_NULL = 287,
        AUTOMATIC = 288,
        BEGIN = 289,
        BIT = 290,
        BMPString = 291,
        BOOLEAN = 292,
        BY = 293,
        CHARACTER = 294,
        CHOICE = 295,
        CLASS = 296,
        COMPONENT = 297,
        COMPONENTS = 298,
        CONSTRAINED = 299,
        CONTAINING = 300,
        DATE = 301,
        DATE_TIME = 302,
        DEFAULT = 303,
        DEFINITIONS = 304,
        DURATION = 305,
        EMBEDDED = 306,
        ENCODED = 307,
        ENCODING_CONTROL = 308,
        END = 309,
        ENUMERATED = 310,
        EXCEPT = 311,
        EXPLICIT = 312,
        EXPORTS = 313,
        EXTENSIBILITY = 314,
        EXTERNAL = 315,
        FALSE = 316,
        FROM = 317,
        GeneralizedTime = 318,
        GeneralString = 319,
        GraphicString = 320,
        IA5String = 321,
        IDENTIFIER = 322,
        IMPLICIT = 323,
        IMPLIED = 324,
        IMPORTS = 325,
        INCLUDES = 326,
        INSTANCE = 327,
        INSTRUCTIONS = 328,
        INTEGER = 329,
        INTERSECTION = 330,
        ISO646String = 331,
        MAX = 332,
        MIN = 333,
        MINUS_INFINITY = 334,
        NOT_A_NUMBER = 335,
        NumericString = 336,
        OBJECT = 337,
        ObjectDescriptor = 338,
        OCTET = 339,
        OF = 340,
        OID_IRI = 341,
        OPTIONAL = 342,
        PATTERN = 343,
        PDV = 344,
        PLUS_INFINITY = 345,
        PRESENT = 346,
        PrintableString = 347,
        PRIVATE = 348,
        REAL = 349,
        RELATIVE_OID = 350,
        RELATIVE_OID_IRI = 351,
        SEQUENCE = 352,
        SET = 353,
        SETTINGS = 354,
        SIZE = 355,
        STRING = 356,
        SYNTAX = 357,
        T61String = 358,
        TAGS = 359,
        TeletexString = 360,
        TIME = 361,
        TIME_OF_DAY = 362,
        TRUE = 363,
        TYPE_IDENTIFIER = 364,
        UNION = 365,
        UNIQUE = 366,
        UNIVERSAL = 367,
        UniversalString = 368,
        UTCTime = 369,
        UTF8String = 370,
        VideotexString = 371,
        VisibleString = 372,
        WITH = 373,
        DEFINED_AS = 374,
        ELIPSIS = 375,
        RANGE = 376,
        OPEN_BRACE = 377,
        CLOSE_BRACE = 378,
        OPEN_PARENTHESIS = 379,
        CLOSE_PARENTHESIS = 380,
        OPEN_SQUARE_BRACKET = 381,
        CLOSE_SQUARE_BRACKET = 382,
        LESS_THAN = 383,
        GREATER_THAN = 384,
        EXCLAMATION_MARK = 385,
        QUOTATION_MARK = 386,
        AMPERSAND = 387,
        APOSTROPHE = 388,
        ASTERISK = 389,
        COMMA = 390,
        FULL_STOP = 391,
        HYPHEN_MINUS = 392,
        SOLIDUS = 393,
        COLON = 394,
        SEMICOLON = 395,
        EQUALS_SIGN = 396,
        AT = 397,
        VERTICAL_LINE = 398,
        ACCENT = 399,
        PLUS = 400,
        STAR = 401,
        GENERIC_IDENTIFIER_UPPERCASE = 402,
        GENERIC_IDENTIFIER_LOWERCASE = 403,
        GENERIC_INTEGER = 404,
        xmlasn1typename = 405
      };
    };

    /// (External) token type, as returned by yylex.
    typedef token::yytokentype token_type;

    /// Symbol type: an internal symbol number.
    typedef int symbol_number_type;

    /// The symbol type number to denote an empty symbol.
    enum { empty_symbol = -2 };

    /// Internal symbol number for tokens (subsumed by symbol_number_type).
    typedef unsigned char token_number_type;

    /// A complete symbol.
    ///
    /// Expects its Base type to provide access to the symbol type
    /// via type_get().
    ///
    /// Provide access to semantic value and location.
    template <typename Base>
    struct basic_symbol : Base
    {
      /// Alias to Base.
      typedef Base super_type;

      /// Default constructor.
      basic_symbol ();

      /// Copy constructor.
      basic_symbol (const basic_symbol& other);

      /// Constructor for valueless symbols, and symbols from each type.

  basic_symbol (typename Base::kind_type t, const location_type& l);

  basic_symbol (typename Base::kind_type t, const Assignment v, const location_type& l);

  basic_symbol (typename Base::kind_type t, const BuiltinType v, const location_type& l);

  basic_symbol (typename Base::kind_type t, const ChoiceType v, const location_type& l);

  basic_symbol (typename Base::kind_type t, const Class v, const location_type& l);

  basic_symbol (typename Base::kind_type t, const ComponentType v, const location_type& l);

  basic_symbol (typename Base::kind_type t, const ComponentTypeList v, const location_type& l);

  basic_symbol (typename Base::kind_type t, const DefinedType v, const location_type& l);

  basic_symbol (typename Base::kind_type t, const DefinedValue v, const location_type& l);

  basic_symbol (typename Base::kind_type t, const EnumeratedType v, const location_type& l);

  basic_symbol (typename Base::kind_type t, const EnumerationValue v, const location_type& l);

  basic_symbol (typename Base::kind_type t, const Import v, const location_type& l);

  basic_symbol (typename Base::kind_type t, const Module v, const location_type& l);

  basic_symbol (typename Base::kind_type t, const NamedNumber v, const location_type& l);

  basic_symbol (typename Base::kind_type t, const NamedType v, const location_type& l);

  basic_symbol (typename Base::kind_type t, const ObjectIdComponentValue v, const location_type& l);

  basic_symbol (typename Base::kind_type t, const PrefixedType v, const location_type& l);

  basic_symbol (typename Base::kind_type t, const SequenceOfType v, const location_type& l);

  basic_symbol (typename Base::kind_type t, const SequenceType v, const location_type& l);

  basic_symbol (typename Base::kind_type t, const SetOfType v, const location_type& l);

  basic_symbol (typename Base::kind_type t, const SetType v, const location_type& l);

  basic_symbol (typename Base::kind_type t, const Tag v, const location_type& l);

  basic_symbol (typename Base::kind_type t, const TaggedType v, const location_type& l);

  basic_symbol (typename Base::kind_type t, const TaggingMode v, const location_type& l);

  basic_symbol (typename Base::kind_type t, const Type v, const location_type& l);

  basic_symbol (typename Base::kind_type t, const Value v, const location_type& l);

  basic_symbol (typename Base::kind_type t, const double v, const location_type& l);

  basic_symbol (typename Base::kind_type t, const int v, const location_type& l);

  basic_symbol (typename Base::kind_type t, const long long v, const location_type& l);

  basic_symbol (typename Base::kind_type t, const std::set<std::string> v, const location_type& l);

  basic_symbol (typename Base::kind_type t, const std::string v, const location_type& l);

  basic_symbol (typename Base::kind_type t, const std::vector<Assignment> v, const location_type& l);

  basic_symbol (typename Base::kind_type t, const std::vector<Export> v, const location_type& l);

  basic_symbol (typename Base::kind_type t, const std::vector<Import> v, const location_type& l);

  basic_symbol (typename Base::kind_type t, const std::vector<NamedType> v, const location_type& l);

  basic_symbol (typename Base::kind_type t, const std::vector<ObjectIdComponentValue> v, const location_type& l);

  basic_symbol (typename Base::kind_type t, const std::vector<Type> v, const location_type& l);

  basic_symbol (typename Base::kind_type t, const std::vector<Value> v, const location_type& l);

  basic_symbol (typename Base::kind_type t, const std::vector<std::string> v, const location_type& l);


      /// Constructor for symbols with semantic value.
      basic_symbol (typename Base::kind_type t,
                    const semantic_type& v,
                    const location_type& l);

      /// Destroy the symbol.
      ~basic_symbol ();

      /// Destroy contents, and record that is empty.
      void clear ();

      /// Whether empty.
      bool empty () const;

      /// Destructive move, \a s is emptied into this.
      void move (basic_symbol& s);

      /// The semantic value.
      semantic_type value;

      /// The location.
      location_type location;

    private:
      /// Assignment operator.
      basic_symbol& operator= (const basic_symbol& other);
    };

    /// Type access provider for token (enum) based symbols.
    struct by_type
    {
      /// Default constructor.
      by_type ();

      /// Copy constructor.
      by_type (const by_type& other);

      /// The symbol type as needed by the constructor.
      typedef token_type kind_type;

      /// Constructor from (external) token numbers.
      by_type (kind_type t);

      /// Record that this symbol is empty.
      void clear ();

      /// Steal the symbol type from \a that.
      void move (by_type& that);

      /// The (internal) type number (corresponding to \a type).
      /// \a empty when empty.
      symbol_number_type type_get () const;

      /// The token.
      token_type token () const;

      /// The symbol type.
      /// \a empty_symbol when empty.
      /// An int, not token_number_type, to be able to store empty_symbol.
      int type;
    };

    /// "External" symbols: returned by the scanner.
    typedef basic_symbol<by_type> symbol_type;

    // Symbol constructors declarations.
    static inline
    symbol_type
    make_END_OF_FILE (const location_type& l);

    static inline
    symbol_type
    make_comment (const location_type& l);

    static inline
    symbol_type
    make_number (const long long& v, const location_type& l);

    static inline
    symbol_type
    make_realnumber (const double& v, const location_type& l);

    static inline
    symbol_type
    make_bstring (const std::string& v, const location_type& l);

    static inline
    symbol_type
    make_xmlbstring (const std::string& v, const location_type& l);

    static inline
    symbol_type
    make_hstring (const std::string& v, const location_type& l);

    static inline
    symbol_type
    make_xmlhstring (const std::string& v, const location_type& l);

    static inline
    symbol_type
    make_cstring (const std::string& v, const location_type& l);

    static inline
    symbol_type
    make_xmlcstring (const std::string& v, const location_type& l);

    static inline
    symbol_type
    make_simplestring (const std::string& v, const location_type& l);

    static inline
    symbol_type
    make_xmltstring (const std::string& v, const location_type& l);

    static inline
    symbol_type
    make_psname (const location_type& l);

    static inline
    symbol_type
    make_encodingreference (const location_type& l);

    static inline
    symbol_type
    make_integerUnicodeLabel (const location_type& l);

    static inline
    symbol_type
    make_tstring (const location_type& l);

    static inline
    symbol_type
    make_objectreference (const location_type& l);

    static inline
    symbol_type
    make_objectsetreference (const location_type& l);

    static inline
    symbol_type
    make_typefieldreference (const std::string& v, const location_type& l);

    static inline
    symbol_type
    make_valuefieldreference (const std::string& v, const location_type& l);

    static inline
    symbol_type
    make_valuesetfieldreference (const location_type& l);

    static inline
    symbol_type
    make_objectfieldreference (const location_type& l);

    static inline
    symbol_type
    make_objectsetfieldreference (const location_type& l);

    static inline
    symbol_type
    make_ABSENT (const location_type& l);

    static inline
    symbol_type
    make_ABSTRACT_SYNTAX (const location_type& l);

    static inline
    symbol_type
    make_ALL (const location_type& l);

    static inline
    symbol_type
    make_APPLICATION (const location_type& l);

    static inline
    symbol_type
    make_ASN_NULL (const location_type& l);

    static inline
    symbol_type
    make_AUTOMATIC (const location_type& l);

    static inline
    symbol_type
    make_BEGIN (const location_type& l);

    static inline
    symbol_type
    make_BIT (const location_type& l);

    static inline
    symbol_type
    make_BMPString (const location_type& l);

    static inline
    symbol_type
    make_BOOLEAN (const location_type& l);

    static inline
    symbol_type
    make_BY (const location_type& l);

    static inline
    symbol_type
    make_CHARACTER (const location_type& l);

    static inline
    symbol_type
    make_CHOICE (const location_type& l);

    static inline
    symbol_type
    make_CLASS (const location_type& l);

    static inline
    symbol_type
    make_COMPONENT (const location_type& l);

    static inline
    symbol_type
    make_COMPONENTS (const location_type& l);

    static inline
    symbol_type
    make_CONSTRAINED (const location_type& l);

    static inline
    symbol_type
    make_CONTAINING (const location_type& l);

    static inline
    symbol_type
    make_DATE (const location_type& l);

    static inline
    symbol_type
    make_DATE_TIME (const location_type& l);

    static inline
    symbol_type
    make_DEFAULT (const location_type& l);

    static inline
    symbol_type
    make_DEFINITIONS (const location_type& l);

    static inline
    symbol_type
    make_DURATION (const location_type& l);

    static inline
    symbol_type
    make_EMBEDDED (const location_type& l);

    static inline
    symbol_type
    make_ENCODED (const location_type& l);

    static inline
    symbol_type
    make_ENCODING_CONTROL (const location_type& l);

    static inline
    symbol_type
    make_END (const location_type& l);

    static inline
    symbol_type
    make_ENUMERATED (const location_type& l);

    static inline
    symbol_type
    make_EXCEPT (const location_type& l);

    static inline
    symbol_type
    make_EXPLICIT (const location_type& l);

    static inline
    symbol_type
    make_EXPORTS (const location_type& l);

    static inline
    symbol_type
    make_EXTENSIBILITY (const location_type& l);

    static inline
    symbol_type
    make_EXTERNAL (const location_type& l);

    static inline
    symbol_type
    make_FALSE (const location_type& l);

    static inline
    symbol_type
    make_FROM (const location_type& l);

    static inline
    symbol_type
    make_GeneralizedTime (const location_type& l);

    static inline
    symbol_type
    make_GeneralString (const location_type& l);

    static inline
    symbol_type
    make_GraphicString (const location_type& l);

    static inline
    symbol_type
    make_IA5String (const location_type& l);

    static inline
    symbol_type
    make_IDENTIFIER (const location_type& l);

    static inline
    symbol_type
    make_IMPLICIT (const location_type& l);

    static inline
    symbol_type
    make_IMPLIED (const location_type& l);

    static inline
    symbol_type
    make_IMPORTS (const location_type& l);

    static inline
    symbol_type
    make_INCLUDES (const location_type& l);

    static inline
    symbol_type
    make_INSTANCE (const location_type& l);

    static inline
    symbol_type
    make_INSTRUCTIONS (const location_type& l);

    static inline
    symbol_type
    make_INTEGER (const location_type& l);

    static inline
    symbol_type
    make_INTERSECTION (const location_type& l);

    static inline
    symbol_type
    make_ISO646String (const location_type& l);

    static inline
    symbol_type
    make_MAX (const location_type& l);

    static inline
    symbol_type
    make_MIN (const location_type& l);

    static inline
    symbol_type
    make_MINUS_INFINITY (const location_type& l);

    static inline
    symbol_type
    make_NOT_A_NUMBER (const location_type& l);

    static inline
    symbol_type
    make_NumericString (const location_type& l);

    static inline
    symbol_type
    make_OBJECT (const location_type& l);

    static inline
    symbol_type
    make_ObjectDescriptor (const location_type& l);

    static inline
    symbol_type
    make_OCTET (const location_type& l);

    static inline
    symbol_type
    make_OF (const location_type& l);

    static inline
    symbol_type
    make_OID_IRI (const location_type& l);

    static inline
    symbol_type
    make_OPTIONAL (const location_type& l);

    static inline
    symbol_type
    make_PATTERN (const location_type& l);

    static inline
    symbol_type
    make_PDV (const location_type& l);

    static inline
    symbol_type
    make_PLUS_INFINITY (const location_type& l);

    static inline
    symbol_type
    make_PRESENT (const location_type& l);

    static inline
    symbol_type
    make_PrintableString (const location_type& l);

    static inline
    symbol_type
    make_PRIVATE (const location_type& l);

    static inline
    symbol_type
    make_REAL (const location_type& l);

    static inline
    symbol_type
    make_RELATIVE_OID (const location_type& l);

    static inline
    symbol_type
    make_RELATIVE_OID_IRI (const location_type& l);

    static inline
    symbol_type
    make_SEQUENCE (const location_type& l);

    static inline
    symbol_type
    make_SET (const location_type& l);

    static inline
    symbol_type
    make_SETTINGS (const location_type& l);

    static inline
    symbol_type
    make_SIZE (const location_type& l);

    static inline
    symbol_type
    make_STRING (const location_type& l);

    static inline
    symbol_type
    make_SYNTAX (const location_type& l);

    static inline
    symbol_type
    make_T61String (const location_type& l);

    static inline
    symbol_type
    make_TAGS (const location_type& l);

    static inline
    symbol_type
    make_TeletexString (const location_type& l);

    static inline
    symbol_type
    make_TIME (const location_type& l);

    static inline
    symbol_type
    make_TIME_OF_DAY (const location_type& l);

    static inline
    symbol_type
    make_TRUE (const location_type& l);

    static inline
    symbol_type
    make_TYPE_IDENTIFIER (const location_type& l);

    static inline
    symbol_type
    make_UNION (const location_type& l);

    static inline
    symbol_type
    make_UNIQUE (const location_type& l);

    static inline
    symbol_type
    make_UNIVERSAL (const location_type& l);

    static inline
    symbol_type
    make_UniversalString (const location_type& l);

    static inline
    symbol_type
    make_UTCTime (const location_type& l);

    static inline
    symbol_type
    make_UTF8String (const location_type& l);

    static inline
    symbol_type
    make_VideotexString (const location_type& l);

    static inline
    symbol_type
    make_VisibleString (const location_type& l);

    static inline
    symbol_type
    make_WITH (const location_type& l);

    static inline
    symbol_type
    make_DEFINED_AS (const location_type& l);

    static inline
    symbol_type
    make_ELIPSIS (const location_type& l);

    static inline
    symbol_type
    make_RANGE (const location_type& l);

    static inline
    symbol_type
    make_OPEN_BRACE (const location_type& l);

    static inline
    symbol_type
    make_CLOSE_BRACE (const location_type& l);

    static inline
    symbol_type
    make_OPEN_PARENTHESIS (const location_type& l);

    static inline
    symbol_type
    make_CLOSE_PARENTHESIS (const location_type& l);

    static inline
    symbol_type
    make_OPEN_SQUARE_BRACKET (const location_type& l);

    static inline
    symbol_type
    make_CLOSE_SQUARE_BRACKET (const location_type& l);

    static inline
    symbol_type
    make_LESS_THAN (const location_type& l);

    static inline
    symbol_type
    make_GREATER_THAN (const location_type& l);

    static inline
    symbol_type
    make_EXCLAMATION_MARK (const location_type& l);

    static inline
    symbol_type
    make_QUOTATION_MARK (const location_type& l);

    static inline
    symbol_type
    make_AMPERSAND (const location_type& l);

    static inline
    symbol_type
    make_APOSTROPHE (const location_type& l);

    static inline
    symbol_type
    make_ASTERISK (const location_type& l);

    static inline
    symbol_type
    make_COMMA (const location_type& l);

    static inline
    symbol_type
    make_FULL_STOP (const location_type& l);

    static inline
    symbol_type
    make_HYPHEN_MINUS (const location_type& l);

    static inline
    symbol_type
    make_SOLIDUS (const location_type& l);

    static inline
    symbol_type
    make_COLON (const location_type& l);

    static inline
    symbol_type
    make_SEMICOLON (const location_type& l);

    static inline
    symbol_type
    make_EQUALS_SIGN (const location_type& l);

    static inline
    symbol_type
    make_AT (const location_type& l);

    static inline
    symbol_type
    make_VERTICAL_LINE (const location_type& l);

    static inline
    symbol_type
    make_ACCENT (const location_type& l);

    static inline
    symbol_type
    make_PLUS (const location_type& l);

    static inline
    symbol_type
    make_STAR (const location_type& l);

    static inline
    symbol_type
    make_GENERIC_IDENTIFIER_UPPERCASE (const std::string& v, const location_type& l);

    static inline
    symbol_type
    make_GENERIC_IDENTIFIER_LOWERCASE (const std::string& v, const location_type& l);

    static inline
    symbol_type
    make_GENERIC_INTEGER (const location_type& l);

    static inline
    symbol_type
    make_xmlasn1typename (const location_type& l);


    /// Build a parser object.
    asn1_parser (Context& context_yyarg);
    virtual ~asn1_parser ();

    /// Parse.
    /// \returns  0 iff parsing succeeded.
    virtual int parse ();

#if YYDEBUG
    /// The current debugging stream.
    std::ostream& debug_stream () const YY_ATTRIBUTE_PURE;
    /// Set the current debugging stream.
    void set_debug_stream (std::ostream &);

    /// Type for debugging levels.
    typedef int debug_level_type;
    /// The current debugging level.
    debug_level_type debug_level () const YY_ATTRIBUTE_PURE;
    /// Set the current debugging level.
    void set_debug_level (debug_level_type l);
#endif

    /// Report a syntax error.
    /// \param loc    where the syntax error is found.
    /// \param msg    a description of the syntax error.
    virtual void error (const location_type& loc, const std::string& msg);

    /// Report a syntax error.
    void error (const syntax_error& err);

  private:
    /// This class is not copyable.
    asn1_parser (const asn1_parser&);
    asn1_parser& operator= (const asn1_parser&);

    /// State numbers.
    typedef int state_type;

    /// Generate an error message.
    /// \param yystate   the state where the error occurred.
    /// \param yyla      the lookahead token.
    virtual std::string yysyntax_error_ (state_type yystate,
                                         const symbol_type& yyla) const;

    /// Compute post-reduction state.
    /// \param yystate   the current state
    /// \param yysym     the nonterminal to push on the stack
    state_type yy_lr_goto_state_ (state_type yystate, int yysym);

    /// Whether the given \c yypact_ value indicates a defaulted state.
    /// \param yyvalue   the value to check
    static bool yy_pact_value_is_default_ (int yyvalue);

    /// Whether the given \c yytable_ value indicates a syntax error.
    /// \param yyvalue   the value to check
    static bool yy_table_value_is_error_ (int yyvalue);

    static const short int yypact_ninf_;
    static const short int yytable_ninf_;

    /// Convert a scanner token number \a t to a symbol number.
    static token_number_type yytranslate_ (token_type t);

    // Tables.
  // YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
  // STATE-NUM.
  static const short int yypact_[];

  // YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
  // Performed when YYTABLE does not specify something else to do.  Zero
  // means the default is an error.
  static const unsigned short int yydefact_[];

  // YYPGOTO[NTERM-NUM].
  static const short int yypgoto_[];

  // YYDEFGOTO[NTERM-NUM].
  static const short int yydefgoto_[];

  // YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
  // positive, shift that token.  If negative, reduce the rule whose
  // number is the opposite.  If YYTABLE_NINF, syntax error.
  static const short int yytable_[];

  static const short int yycheck_[];

  // YYSTOS[STATE-NUM] -- The (internal number of the) accessing
  // symbol of state STATE-NUM.
  static const unsigned short int yystos_[];

  // YYR1[YYN] -- Symbol number of symbol that rule YYN derives.
  static const unsigned short int yyr1_[];

  // YYR2[YYN] -- Number of symbols on the right hand side of rule YYN.
  static const unsigned char yyr2_[];


    /// Convert the symbol name \a n to a form suitable for a diagnostic.
    static std::string yytnamerr_ (const char *n);


    /// For a symbol, its name in clear.
    static const char* const yytname_[];
#if YYDEBUG
  // YYRLINE[YYN] -- Source line where rule number YYN was defined.
  static const unsigned short int yyrline_[];
    /// Report on the debug stream that the rule \a r is going to be reduced.
    virtual void yy_reduce_print_ (int r);
    /// Print the state stack on the debug stream.
    virtual void yystack_print_ ();

    // Debugging.
    int yydebug_;
    std::ostream* yycdebug_;

    /// \brief Display a symbol type, value and location.
    /// \param yyo    The output stream.
    /// \param yysym  The symbol.
    template <typename Base>
    void yy_print_ (std::ostream& yyo, const basic_symbol<Base>& yysym) const;
#endif

    /// \brief Reclaim the memory associated to a symbol.
    /// \param yymsg     Why this token is reclaimed.
    ///                  If null, print nothing.
    /// \param yysym     The symbol.
    template <typename Base>
    void yy_destroy_ (const char* yymsg, basic_symbol<Base>& yysym) const;

  private:
    /// Type access provider for state based symbols.
    struct by_state
    {
      /// Default constructor.
      by_state ();

      /// The symbol type as needed by the constructor.
      typedef state_type kind_type;

      /// Constructor.
      by_state (kind_type s);

      /// Copy constructor.
      by_state (const by_state& other);

      /// Record that this symbol is empty.
      void clear ();

      /// Steal the symbol type from \a that.
      void move (by_state& that);

      /// The (internal) type number (corresponding to \a state).
      /// \a empty_symbol when empty.
      symbol_number_type type_get () const;

      /// The state number used to denote an empty symbol.
      enum { empty_state = -1 };

      /// The state.
      /// \a empty when empty.
      state_type state;
    };

    /// "Internal" symbol: element of the stack.
    struct stack_symbol_type : basic_symbol<by_state>
    {
      /// Superclass.
      typedef basic_symbol<by_state> super_type;
      /// Construct an empty symbol.
      stack_symbol_type ();
      /// Steal the contents from \a sym to build this.
      stack_symbol_type (state_type s, symbol_type& sym);
      /// Assignment, needed by push_back.
      stack_symbol_type& operator= (const stack_symbol_type& that);
    };

    /// Stack type.
    typedef stack<stack_symbol_type> stack_type;

    /// The stack.
    stack_type yystack_;

    /// Push a new state on the stack.
    /// \param m    a debug message to display
    ///             if null, no trace is output.
    /// \param s    the symbol
    /// \warning the contents of \a s.value is stolen.
    void yypush_ (const char* m, stack_symbol_type& s);

    /// Push a new look ahead token on the state on the stack.
    /// \param m    a debug message to display
    ///             if null, no trace is output.
    /// \param s    the state
    /// \param sym  the symbol (for its value and location).
    /// \warning the contents of \a s.value is stolen.
    void yypush_ (const char* m, state_type s, symbol_type& sym);

    /// Pop \a n symbols the three stacks.
    void yypop_ (unsigned int n = 1);

    /// Constants.
    enum
    {
      yyeof_ = 0,
      yylast_ = 3127,     ///< Last index in yytable_.
      yynnts_ = 227,  ///< Number of nonterminal symbols.
      yyfinal_ = 6, ///< Termination state number.
      yyterror_ = 1,
      yyerrcode_ = 256,
      yyntokens_ = 151  ///< Number of tokens.
    };


    // User arguments.
    Context& context;
  };

  // Symbol number corresponding to token number t.
  inline
  asn1_parser::token_number_type
  asn1_parser::yytranslate_ (token_type t)
  {
    static
    const token_number_type
    translate_table[] =
    {
     0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150
    };
    const unsigned int user_token_number_max_ = 405;
    const token_number_type undef_token_ = 2;

    if (static_cast<int>(t) <= yyeof_)
      return yyeof_;
    else if (static_cast<unsigned int> (t) <= user_token_number_max_)
      return translate_table[t];
    else
      return undef_token_;
  }

  inline
  asn1_parser::syntax_error::syntax_error (const location_type& l, const std::string& m)
    : std::runtime_error (m)
    , location (l)
  {}

  // basic_symbol.
  template <typename Base>
  inline
  asn1_parser::basic_symbol<Base>::basic_symbol ()
    : value ()
  {}

  template <typename Base>
  inline
  asn1_parser::basic_symbol<Base>::basic_symbol (const basic_symbol& other)
    : Base (other)
    , value ()
    , location (other.location)
  {
      switch (other.type_get ())
    {
      case 198: // ParameterizedAssignment
      case 199: // ParameterizedTypeAssignment
      case 200: // ParameterizedValueAssignment
      case 201: // ParameterizedValueSetTypeAssignment
      case 202: // ParameterizedObjectClassAssignment
      case 204: // ParameterizedObjectAssignment
      case 205: // ParameterizedObjectSetAssignment
      case 249: // Assignment
      case 258: // TypeAssignment
      case 259: // ValueAssignment
        value.copy< Assignment > (other.value);
        break;

      case 261: // BuiltinType
        value.copy< BuiltinType > (other.value);
        break;

      case 291: // ChoiceType
        value.copy< ChoiceType > (other.value);
        break;

      case 301: // Class
        value.copy< Class > (other.value);
        break;

      case 287: // ComponentType
        value.copy< ComponentType > (other.value);
        break;

      case 284: // ComponentTypeLists
      case 285: // RootComponentTypeList
      case 286: // ComponentTypeList
        value.copy< ComponentTypeList > (other.value);
        break;

      case 250: // DefinedType
      case 252: // ParameterizedType
        value.copy< DefinedType > (other.value);
        break;

      case 251: // DefinedValue
        value.copy< DefinedValue > (other.value);
        break;

      case 273: // EnumeratedType
      case 274: // Enumerations
      case 275: // Enumeration
        value.copy< EnumeratedType > (other.value);
        break;

      case 276: // EnumerationItem
        value.copy< EnumerationValue > (other.value);
        break;

      case 242: // SymbolsFromModule
        value.copy< Import > (other.value);
        break;

      case 236: // ModuleBody
        value.copy< Module > (other.value);
        break;

      case 271: // NamedNumber
        value.copy< NamedNumber > (other.value);
        break;

      case 262: // NamedType
        value.copy< NamedType > (other.value);
        break;

      case 305: // ObjIdComponents
      case 306: // NameForm
      case 307: // NumberForm
      case 308: // NameAndNumberForm
        value.copy< ObjectIdComponentValue > (other.value);
        break;

      case 296: // PrefixedType
        value.copy< PrefixedType > (other.value);
        break;

      case 288: // SequenceOfType
        value.copy< SequenceOfType > (other.value);
        break;

      case 283: // SequenceType
        value.copy< SequenceType > (other.value);
        break;

      case 290: // SetOfType
        value.copy< SetOfType > (other.value);
        break;

      case 289: // SetType
        value.copy< SetType > (other.value);
        break;

      case 298: // Tag
        value.copy< Tag > (other.value);
        break;

      case 297: // TaggedType
        value.copy< TaggedType > (other.value);
        break;

      case 234: // TagDefault
        value.copy< TaggingMode > (other.value);
        break;

      case 255: // ActualParameter
      case 260: // Type
        value.copy< Type > (other.value);
        break;

      case 263: // Value
        value.copy< Value > (other.value);
        break;

      case 5: // realnumber
        value.copy< double > (other.value);
        break;

      case 300: // ClassNumber
        value.copy< int > (other.value);
        break;

      case 4: // number
      case 272: // SignedNumber
        value.copy< long long > (other.value);
        break;

      case 203: // ParameterList
      case 206: // ParameterSeries
        value.copy< std::set<std::string> > (other.value);
        break;

      case 6: // bstring
      case 7: // xmlbstring
      case 8: // hstring
      case 9: // xmlhstring
      case 10: // cstring
      case 11: // xmlcstring
      case 12: // simplestring
      case 13: // xmltstring
      case 23: // typefieldreference
      case 24: // valuefieldreference
      case 147: // GENERIC_IDENTIFIER_UPPERCASE
      case 148: // GENERIC_IDENTIFIER_LOWERCASE
      case 207: // Parameter
      case 213: // SimpleDefinedType
      case 225: // ModuleIdentifier
      case 243: // GlobalModuleReference
      case 246: // Symbol
      case 247: // Reference
      case 372: // typereference
      case 373: // identifier
      case 374: // valuereference
      case 375: // modulereference
      case 376: // objectclassreference
      case 377: // word
        value.copy< std::string > (other.value);
        break;

      case 248: // AssignmentList
        value.copy< std::vector<Assignment> > (other.value);
        break;

      case 237: // Exports
        value.copy< std::vector<Export> > (other.value);
        break;

      case 239: // Imports
      case 240: // SymbolsImported
      case 241: // SymbolsFromModuleList
        value.copy< std::vector<Import> > (other.value);
        break;

      case 292: // AlternativeTypeLists
      case 293: // RootAlternativeTypeList
      case 294: // AlternativeTypeList
        value.copy< std::vector<NamedType> > (other.value);
        break;

      case 303: // ObjectIdentifierValue
      case 304: // ObjIdComponentsList
        value.copy< std::vector<ObjectIdComponentValue> > (other.value);
        break;

      case 254: // ActualParameterList
        value.copy< std::vector<Type> > (other.value);
        break;

      case 266: // SequenceOfValues
        value.copy< std::vector<Value> > (other.value);
        break;

      case 245: // SymbolList
        value.copy< std::vector<std::string> > (other.value);
        break;

      default:
        break;
    }

  }


  template <typename Base>
  inline
  asn1_parser::basic_symbol<Base>::basic_symbol (typename Base::kind_type t, const semantic_type& v, const location_type& l)
    : Base (t)
    , value ()
    , location (l)
  {
    (void) v;
      switch (this->type_get ())
    {
      case 198: // ParameterizedAssignment
      case 199: // ParameterizedTypeAssignment
      case 200: // ParameterizedValueAssignment
      case 201: // ParameterizedValueSetTypeAssignment
      case 202: // ParameterizedObjectClassAssignment
      case 204: // ParameterizedObjectAssignment
      case 205: // ParameterizedObjectSetAssignment
      case 249: // Assignment
      case 258: // TypeAssignment
      case 259: // ValueAssignment
        value.copy< Assignment > (v);
        break;

      case 261: // BuiltinType
        value.copy< BuiltinType > (v);
        break;

      case 291: // ChoiceType
        value.copy< ChoiceType > (v);
        break;

      case 301: // Class
        value.copy< Class > (v);
        break;

      case 287: // ComponentType
        value.copy< ComponentType > (v);
        break;

      case 284: // ComponentTypeLists
      case 285: // RootComponentTypeList
      case 286: // ComponentTypeList
        value.copy< ComponentTypeList > (v);
        break;

      case 250: // DefinedType
      case 252: // ParameterizedType
        value.copy< DefinedType > (v);
        break;

      case 251: // DefinedValue
        value.copy< DefinedValue > (v);
        break;

      case 273: // EnumeratedType
      case 274: // Enumerations
      case 275: // Enumeration
        value.copy< EnumeratedType > (v);
        break;

      case 276: // EnumerationItem
        value.copy< EnumerationValue > (v);
        break;

      case 242: // SymbolsFromModule
        value.copy< Import > (v);
        break;

      case 236: // ModuleBody
        value.copy< Module > (v);
        break;

      case 271: // NamedNumber
        value.copy< NamedNumber > (v);
        break;

      case 262: // NamedType
        value.copy< NamedType > (v);
        break;

      case 305: // ObjIdComponents
      case 306: // NameForm
      case 307: // NumberForm
      case 308: // NameAndNumberForm
        value.copy< ObjectIdComponentValue > (v);
        break;

      case 296: // PrefixedType
        value.copy< PrefixedType > (v);
        break;

      case 288: // SequenceOfType
        value.copy< SequenceOfType > (v);
        break;

      case 283: // SequenceType
        value.copy< SequenceType > (v);
        break;

      case 290: // SetOfType
        value.copy< SetOfType > (v);
        break;

      case 289: // SetType
        value.copy< SetType > (v);
        break;

      case 298: // Tag
        value.copy< Tag > (v);
        break;

      case 297: // TaggedType
        value.copy< TaggedType > (v);
        break;

      case 234: // TagDefault
        value.copy< TaggingMode > (v);
        break;

      case 255: // ActualParameter
      case 260: // Type
        value.copy< Type > (v);
        break;

      case 263: // Value
        value.copy< Value > (v);
        break;

      case 5: // realnumber
        value.copy< double > (v);
        break;

      case 300: // ClassNumber
        value.copy< int > (v);
        break;

      case 4: // number
      case 272: // SignedNumber
        value.copy< long long > (v);
        break;

      case 203: // ParameterList
      case 206: // ParameterSeries
        value.copy< std::set<std::string> > (v);
        break;

      case 6: // bstring
      case 7: // xmlbstring
      case 8: // hstring
      case 9: // xmlhstring
      case 10: // cstring
      case 11: // xmlcstring
      case 12: // simplestring
      case 13: // xmltstring
      case 23: // typefieldreference
      case 24: // valuefieldreference
      case 147: // GENERIC_IDENTIFIER_UPPERCASE
      case 148: // GENERIC_IDENTIFIER_LOWERCASE
      case 207: // Parameter
      case 213: // SimpleDefinedType
      case 225: // ModuleIdentifier
      case 243: // GlobalModuleReference
      case 246: // Symbol
      case 247: // Reference
      case 372: // typereference
      case 373: // identifier
      case 374: // valuereference
      case 375: // modulereference
      case 376: // objectclassreference
      case 377: // word
        value.copy< std::string > (v);
        break;

      case 248: // AssignmentList
        value.copy< std::vector<Assignment> > (v);
        break;

      case 237: // Exports
        value.copy< std::vector<Export> > (v);
        break;

      case 239: // Imports
      case 240: // SymbolsImported
      case 241: // SymbolsFromModuleList
        value.copy< std::vector<Import> > (v);
        break;

      case 292: // AlternativeTypeLists
      case 293: // RootAlternativeTypeList
      case 294: // AlternativeTypeList
        value.copy< std::vector<NamedType> > (v);
        break;

      case 303: // ObjectIdentifierValue
      case 304: // ObjIdComponentsList
        value.copy< std::vector<ObjectIdComponentValue> > (v);
        break;

      case 254: // ActualParameterList
        value.copy< std::vector<Type> > (v);
        break;

      case 266: // SequenceOfValues
        value.copy< std::vector<Value> > (v);
        break;

      case 245: // SymbolList
        value.copy< std::vector<std::string> > (v);
        break;

      default:
        break;
    }
}


  // Implementation of basic_symbol constructor for each type.

  template <typename Base>
  asn1_parser::basic_symbol<Base>::basic_symbol (typename Base::kind_type t, const location_type& l)
    : Base (t)
    , value ()
    , location (l)
  {}

  template <typename Base>
  asn1_parser::basic_symbol<Base>::basic_symbol (typename Base::kind_type t, const Assignment v, const location_type& l)
    : Base (t)
    , value (v)
    , location (l)
  {}

  template <typename Base>
  asn1_parser::basic_symbol<Base>::basic_symbol (typename Base::kind_type t, const BuiltinType v, const location_type& l)
    : Base (t)
    , value (v)
    , location (l)
  {}

  template <typename Base>
  asn1_parser::basic_symbol<Base>::basic_symbol (typename Base::kind_type t, const ChoiceType v, const location_type& l)
    : Base (t)
    , value (v)
    , location (l)
  {}

  template <typename Base>
  asn1_parser::basic_symbol<Base>::basic_symbol (typename Base::kind_type t, const Class v, const location_type& l)
    : Base (t)
    , value (v)
    , location (l)
  {}

  template <typename Base>
  asn1_parser::basic_symbol<Base>::basic_symbol (typename Base::kind_type t, const ComponentType v, const location_type& l)
    : Base (t)
    , value (v)
    , location (l)
  {}

  template <typename Base>
  asn1_parser::basic_symbol<Base>::basic_symbol (typename Base::kind_type t, const ComponentTypeList v, const location_type& l)
    : Base (t)
    , value (v)
    , location (l)
  {}

  template <typename Base>
  asn1_parser::basic_symbol<Base>::basic_symbol (typename Base::kind_type t, const DefinedType v, const location_type& l)
    : Base (t)
    , value (v)
    , location (l)
  {}

  template <typename Base>
  asn1_parser::basic_symbol<Base>::basic_symbol (typename Base::kind_type t, const DefinedValue v, const location_type& l)
    : Base (t)
    , value (v)
    , location (l)
  {}

  template <typename Base>
  asn1_parser::basic_symbol<Base>::basic_symbol (typename Base::kind_type t, const EnumeratedType v, const location_type& l)
    : Base (t)
    , value (v)
    , location (l)
  {}

  template <typename Base>
  asn1_parser::basic_symbol<Base>::basic_symbol (typename Base::kind_type t, const EnumerationValue v, const location_type& l)
    : Base (t)
    , value (v)
    , location (l)
  {}

  template <typename Base>
  asn1_parser::basic_symbol<Base>::basic_symbol (typename Base::kind_type t, const Import v, const location_type& l)
    : Base (t)
    , value (v)
    , location (l)
  {}

  template <typename Base>
  asn1_parser::basic_symbol<Base>::basic_symbol (typename Base::kind_type t, const Module v, const location_type& l)
    : Base (t)
    , value (v)
    , location (l)
  {}

  template <typename Base>
  asn1_parser::basic_symbol<Base>::basic_symbol (typename Base::kind_type t, const NamedNumber v, const location_type& l)
    : Base (t)
    , value (v)
    , location (l)
  {}

  template <typename Base>
  asn1_parser::basic_symbol<Base>::basic_symbol (typename Base::kind_type t, const NamedType v, const location_type& l)
    : Base (t)
    , value (v)
    , location (l)
  {}

  template <typename Base>
  asn1_parser::basic_symbol<Base>::basic_symbol (typename Base::kind_type t, const ObjectIdComponentValue v, const location_type& l)
    : Base (t)
    , value (v)
    , location (l)
  {}

  template <typename Base>
  asn1_parser::basic_symbol<Base>::basic_symbol (typename Base::kind_type t, const PrefixedType v, const location_type& l)
    : Base (t)
    , value (v)
    , location (l)
  {}

  template <typename Base>
  asn1_parser::basic_symbol<Base>::basic_symbol (typename Base::kind_type t, const SequenceOfType v, const location_type& l)
    : Base (t)
    , value (v)
    , location (l)
  {}

  template <typename Base>
  asn1_parser::basic_symbol<Base>::basic_symbol (typename Base::kind_type t, const SequenceType v, const location_type& l)
    : Base (t)
    , value (v)
    , location (l)
  {}

  template <typename Base>
  asn1_parser::basic_symbol<Base>::basic_symbol (typename Base::kind_type t, const SetOfType v, const location_type& l)
    : Base (t)
    , value (v)
    , location (l)
  {}

  template <typename Base>
  asn1_parser::basic_symbol<Base>::basic_symbol (typename Base::kind_type t, const SetType v, const location_type& l)
    : Base (t)
    , value (v)
    , location (l)
  {}

  template <typename Base>
  asn1_parser::basic_symbol<Base>::basic_symbol (typename Base::kind_type t, const Tag v, const location_type& l)
    : Base (t)
    , value (v)
    , location (l)
  {}

  template <typename Base>
  asn1_parser::basic_symbol<Base>::basic_symbol (typename Base::kind_type t, const TaggedType v, const location_type& l)
    : Base (t)
    , value (v)
    , location (l)
  {}

  template <typename Base>
  asn1_parser::basic_symbol<Base>::basic_symbol (typename Base::kind_type t, const TaggingMode v, const location_type& l)
    : Base (t)
    , value (v)
    , location (l)
  {}

  template <typename Base>
  asn1_parser::basic_symbol<Base>::basic_symbol (typename Base::kind_type t, const Type v, const location_type& l)
    : Base (t)
    , value (v)
    , location (l)
  {}

  template <typename Base>
  asn1_parser::basic_symbol<Base>::basic_symbol (typename Base::kind_type t, const Value v, const location_type& l)
    : Base (t)
    , value (v)
    , location (l)
  {}

  template <typename Base>
  asn1_parser::basic_symbol<Base>::basic_symbol (typename Base::kind_type t, const double v, const location_type& l)
    : Base (t)
    , value (v)
    , location (l)
  {}

  template <typename Base>
  asn1_parser::basic_symbol<Base>::basic_symbol (typename Base::kind_type t, const int v, const location_type& l)
    : Base (t)
    , value (v)
    , location (l)
  {}

  template <typename Base>
  asn1_parser::basic_symbol<Base>::basic_symbol (typename Base::kind_type t, const long long v, const location_type& l)
    : Base (t)
    , value (v)
    , location (l)
  {}

  template <typename Base>
  asn1_parser::basic_symbol<Base>::basic_symbol (typename Base::kind_type t, const std::set<std::string> v, const location_type& l)
    : Base (t)
    , value (v)
    , location (l)
  {}

  template <typename Base>
  asn1_parser::basic_symbol<Base>::basic_symbol (typename Base::kind_type t, const std::string v, const location_type& l)
    : Base (t)
    , value (v)
    , location (l)
  {}

  template <typename Base>
  asn1_parser::basic_symbol<Base>::basic_symbol (typename Base::kind_type t, const std::vector<Assignment> v, const location_type& l)
    : Base (t)
    , value (v)
    , location (l)
  {}

  template <typename Base>
  asn1_parser::basic_symbol<Base>::basic_symbol (typename Base::kind_type t, const std::vector<Export> v, const location_type& l)
    : Base (t)
    , value (v)
    , location (l)
  {}

  template <typename Base>
  asn1_parser::basic_symbol<Base>::basic_symbol (typename Base::kind_type t, const std::vector<Import> v, const location_type& l)
    : Base (t)
    , value (v)
    , location (l)
  {}

  template <typename Base>
  asn1_parser::basic_symbol<Base>::basic_symbol (typename Base::kind_type t, const std::vector<NamedType> v, const location_type& l)
    : Base (t)
    , value (v)
    , location (l)
  {}

  template <typename Base>
  asn1_parser::basic_symbol<Base>::basic_symbol (typename Base::kind_type t, const std::vector<ObjectIdComponentValue> v, const location_type& l)
    : Base (t)
    , value (v)
    , location (l)
  {}

  template <typename Base>
  asn1_parser::basic_symbol<Base>::basic_symbol (typename Base::kind_type t, const std::vector<Type> v, const location_type& l)
    : Base (t)
    , value (v)
    , location (l)
  {}

  template <typename Base>
  asn1_parser::basic_symbol<Base>::basic_symbol (typename Base::kind_type t, const std::vector<Value> v, const location_type& l)
    : Base (t)
    , value (v)
    , location (l)
  {}

  template <typename Base>
  asn1_parser::basic_symbol<Base>::basic_symbol (typename Base::kind_type t, const std::vector<std::string> v, const location_type& l)
    : Base (t)
    , value (v)
    , location (l)
  {}


  template <typename Base>
  inline
  asn1_parser::basic_symbol<Base>::~basic_symbol ()
  {
    clear ();
  }

  template <typename Base>
  inline
  void
  asn1_parser::basic_symbol<Base>::clear ()
  {
    // User destructor.
    symbol_number_type yytype = this->type_get ();
    basic_symbol<Base>& yysym = *this;
    (void) yysym;
    switch (yytype)
    {
   default:
      break;
    }

    // Type destructor.
    switch (yytype)
    {
      case 198: // ParameterizedAssignment
      case 199: // ParameterizedTypeAssignment
      case 200: // ParameterizedValueAssignment
      case 201: // ParameterizedValueSetTypeAssignment
      case 202: // ParameterizedObjectClassAssignment
      case 204: // ParameterizedObjectAssignment
      case 205: // ParameterizedObjectSetAssignment
      case 249: // Assignment
      case 258: // TypeAssignment
      case 259: // ValueAssignment
        value.template destroy< Assignment > ();
        break;

      case 261: // BuiltinType
        value.template destroy< BuiltinType > ();
        break;

      case 291: // ChoiceType
        value.template destroy< ChoiceType > ();
        break;

      case 301: // Class
        value.template destroy< Class > ();
        break;

      case 287: // ComponentType
        value.template destroy< ComponentType > ();
        break;

      case 284: // ComponentTypeLists
      case 285: // RootComponentTypeList
      case 286: // ComponentTypeList
        value.template destroy< ComponentTypeList > ();
        break;

      case 250: // DefinedType
      case 252: // ParameterizedType
        value.template destroy< DefinedType > ();
        break;

      case 251: // DefinedValue
        value.template destroy< DefinedValue > ();
        break;

      case 273: // EnumeratedType
      case 274: // Enumerations
      case 275: // Enumeration
        value.template destroy< EnumeratedType > ();
        break;

      case 276: // EnumerationItem
        value.template destroy< EnumerationValue > ();
        break;

      case 242: // SymbolsFromModule
        value.template destroy< Import > ();
        break;

      case 236: // ModuleBody
        value.template destroy< Module > ();
        break;

      case 271: // NamedNumber
        value.template destroy< NamedNumber > ();
        break;

      case 262: // NamedType
        value.template destroy< NamedType > ();
        break;

      case 305: // ObjIdComponents
      case 306: // NameForm
      case 307: // NumberForm
      case 308: // NameAndNumberForm
        value.template destroy< ObjectIdComponentValue > ();
        break;

      case 296: // PrefixedType
        value.template destroy< PrefixedType > ();
        break;

      case 288: // SequenceOfType
        value.template destroy< SequenceOfType > ();
        break;

      case 283: // SequenceType
        value.template destroy< SequenceType > ();
        break;

      case 290: // SetOfType
        value.template destroy< SetOfType > ();
        break;

      case 289: // SetType
        value.template destroy< SetType > ();
        break;

      case 298: // Tag
        value.template destroy< Tag > ();
        break;

      case 297: // TaggedType
        value.template destroy< TaggedType > ();
        break;

      case 234: // TagDefault
        value.template destroy< TaggingMode > ();
        break;

      case 255: // ActualParameter
      case 260: // Type
        value.template destroy< Type > ();
        break;

      case 263: // Value
        value.template destroy< Value > ();
        break;

      case 5: // realnumber
        value.template destroy< double > ();
        break;

      case 300: // ClassNumber
        value.template destroy< int > ();
        break;

      case 4: // number
      case 272: // SignedNumber
        value.template destroy< long long > ();
        break;

      case 203: // ParameterList
      case 206: // ParameterSeries
        value.template destroy< std::set<std::string> > ();
        break;

      case 6: // bstring
      case 7: // xmlbstring
      case 8: // hstring
      case 9: // xmlhstring
      case 10: // cstring
      case 11: // xmlcstring
      case 12: // simplestring
      case 13: // xmltstring
      case 23: // typefieldreference
      case 24: // valuefieldreference
      case 147: // GENERIC_IDENTIFIER_UPPERCASE
      case 148: // GENERIC_IDENTIFIER_LOWERCASE
      case 207: // Parameter
      case 213: // SimpleDefinedType
      case 225: // ModuleIdentifier
      case 243: // GlobalModuleReference
      case 246: // Symbol
      case 247: // Reference
      case 372: // typereference
      case 373: // identifier
      case 374: // valuereference
      case 375: // modulereference
      case 376: // objectclassreference
      case 377: // word
        value.template destroy< std::string > ();
        break;

      case 248: // AssignmentList
        value.template destroy< std::vector<Assignment> > ();
        break;

      case 237: // Exports
        value.template destroy< std::vector<Export> > ();
        break;

      case 239: // Imports
      case 240: // SymbolsImported
      case 241: // SymbolsFromModuleList
        value.template destroy< std::vector<Import> > ();
        break;

      case 292: // AlternativeTypeLists
      case 293: // RootAlternativeTypeList
      case 294: // AlternativeTypeList
        value.template destroy< std::vector<NamedType> > ();
        break;

      case 303: // ObjectIdentifierValue
      case 304: // ObjIdComponentsList
        value.template destroy< std::vector<ObjectIdComponentValue> > ();
        break;

      case 254: // ActualParameterList
        value.template destroy< std::vector<Type> > ();
        break;

      case 266: // SequenceOfValues
        value.template destroy< std::vector<Value> > ();
        break;

      case 245: // SymbolList
        value.template destroy< std::vector<std::string> > ();
        break;

      default:
        break;
    }

    Base::clear ();
  }

  template <typename Base>
  inline
  bool
  asn1_parser::basic_symbol<Base>::empty () const
  {
    return Base::type_get () == empty_symbol;
  }

  template <typename Base>
  inline
  void
  asn1_parser::basic_symbol<Base>::move (basic_symbol& s)
  {
    super_type::move(s);
      switch (this->type_get ())
    {
      case 198: // ParameterizedAssignment
      case 199: // ParameterizedTypeAssignment
      case 200: // ParameterizedValueAssignment
      case 201: // ParameterizedValueSetTypeAssignment
      case 202: // ParameterizedObjectClassAssignment
      case 204: // ParameterizedObjectAssignment
      case 205: // ParameterizedObjectSetAssignment
      case 249: // Assignment
      case 258: // TypeAssignment
      case 259: // ValueAssignment
        value.move< Assignment > (s.value);
        break;

      case 261: // BuiltinType
        value.move< BuiltinType > (s.value);
        break;

      case 291: // ChoiceType
        value.move< ChoiceType > (s.value);
        break;

      case 301: // Class
        value.move< Class > (s.value);
        break;

      case 287: // ComponentType
        value.move< ComponentType > (s.value);
        break;

      case 284: // ComponentTypeLists
      case 285: // RootComponentTypeList
      case 286: // ComponentTypeList
        value.move< ComponentTypeList > (s.value);
        break;

      case 250: // DefinedType
      case 252: // ParameterizedType
        value.move< DefinedType > (s.value);
        break;

      case 251: // DefinedValue
        value.move< DefinedValue > (s.value);
        break;

      case 273: // EnumeratedType
      case 274: // Enumerations
      case 275: // Enumeration
        value.move< EnumeratedType > (s.value);
        break;

      case 276: // EnumerationItem
        value.move< EnumerationValue > (s.value);
        break;

      case 242: // SymbolsFromModule
        value.move< Import > (s.value);
        break;

      case 236: // ModuleBody
        value.move< Module > (s.value);
        break;

      case 271: // NamedNumber
        value.move< NamedNumber > (s.value);
        break;

      case 262: // NamedType
        value.move< NamedType > (s.value);
        break;

      case 305: // ObjIdComponents
      case 306: // NameForm
      case 307: // NumberForm
      case 308: // NameAndNumberForm
        value.move< ObjectIdComponentValue > (s.value);
        break;

      case 296: // PrefixedType
        value.move< PrefixedType > (s.value);
        break;

      case 288: // SequenceOfType
        value.move< SequenceOfType > (s.value);
        break;

      case 283: // SequenceType
        value.move< SequenceType > (s.value);
        break;

      case 290: // SetOfType
        value.move< SetOfType > (s.value);
        break;

      case 289: // SetType
        value.move< SetType > (s.value);
        break;

      case 298: // Tag
        value.move< Tag > (s.value);
        break;

      case 297: // TaggedType
        value.move< TaggedType > (s.value);
        break;

      case 234: // TagDefault
        value.move< TaggingMode > (s.value);
        break;

      case 255: // ActualParameter
      case 260: // Type
        value.move< Type > (s.value);
        break;

      case 263: // Value
        value.move< Value > (s.value);
        break;

      case 5: // realnumber
        value.move< double > (s.value);
        break;

      case 300: // ClassNumber
        value.move< int > (s.value);
        break;

      case 4: // number
      case 272: // SignedNumber
        value.move< long long > (s.value);
        break;

      case 203: // ParameterList
      case 206: // ParameterSeries
        value.move< std::set<std::string> > (s.value);
        break;

      case 6: // bstring
      case 7: // xmlbstring
      case 8: // hstring
      case 9: // xmlhstring
      case 10: // cstring
      case 11: // xmlcstring
      case 12: // simplestring
      case 13: // xmltstring
      case 23: // typefieldreference
      case 24: // valuefieldreference
      case 147: // GENERIC_IDENTIFIER_UPPERCASE
      case 148: // GENERIC_IDENTIFIER_LOWERCASE
      case 207: // Parameter
      case 213: // SimpleDefinedType
      case 225: // ModuleIdentifier
      case 243: // GlobalModuleReference
      case 246: // Symbol
      case 247: // Reference
      case 372: // typereference
      case 373: // identifier
      case 374: // valuereference
      case 375: // modulereference
      case 376: // objectclassreference
      case 377: // word
        value.move< std::string > (s.value);
        break;

      case 248: // AssignmentList
        value.move< std::vector<Assignment> > (s.value);
        break;

      case 237: // Exports
        value.move< std::vector<Export> > (s.value);
        break;

      case 239: // Imports
      case 240: // SymbolsImported
      case 241: // SymbolsFromModuleList
        value.move< std::vector<Import> > (s.value);
        break;

      case 292: // AlternativeTypeLists
      case 293: // RootAlternativeTypeList
      case 294: // AlternativeTypeList
        value.move< std::vector<NamedType> > (s.value);
        break;

      case 303: // ObjectIdentifierValue
      case 304: // ObjIdComponentsList
        value.move< std::vector<ObjectIdComponentValue> > (s.value);
        break;

      case 254: // ActualParameterList
        value.move< std::vector<Type> > (s.value);
        break;

      case 266: // SequenceOfValues
        value.move< std::vector<Value> > (s.value);
        break;

      case 245: // SymbolList
        value.move< std::vector<std::string> > (s.value);
        break;

      default:
        break;
    }

    location = s.location;
  }

  // by_type.
  inline
  asn1_parser::by_type::by_type ()
    : type (empty_symbol)
  {}

  inline
  asn1_parser::by_type::by_type (const by_type& other)
    : type (other.type)
  {}

  inline
  asn1_parser::by_type::by_type (token_type t)
    : type (yytranslate_ (t))
  {}

  inline
  void
  asn1_parser::by_type::clear ()
  {
    type = empty_symbol;
  }

  inline
  void
  asn1_parser::by_type::move (by_type& that)
  {
    type = that.type;
    that.clear ();
  }

  inline
  int
  asn1_parser::by_type::type_get () const
  {
    return type;
  }

  inline
  asn1_parser::token_type
  asn1_parser::by_type::token () const
  {
    // YYTOKNUM[NUM] -- (External) token number corresponding to the
    // (internal) symbol number NUM (which must be that of a token).  */
    static
    const unsigned short int
    yytoken_number_[] =
    {
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405
    };
    return static_cast<token_type> (yytoken_number_[type]);
  }
  // Implementation of make_symbol for each symbol type.
  asn1_parser::symbol_type
  asn1_parser::make_END_OF_FILE (const location_type& l)
  {
    return symbol_type (token::END_OF_FILE, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_comment (const location_type& l)
  {
    return symbol_type (token::comment, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_number (const long long& v, const location_type& l)
  {
    return symbol_type (token::number, v, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_realnumber (const double& v, const location_type& l)
  {
    return symbol_type (token::realnumber, v, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_bstring (const std::string& v, const location_type& l)
  {
    return symbol_type (token::bstring, v, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_xmlbstring (const std::string& v, const location_type& l)
  {
    return symbol_type (token::xmlbstring, v, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_hstring (const std::string& v, const location_type& l)
  {
    return symbol_type (token::hstring, v, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_xmlhstring (const std::string& v, const location_type& l)
  {
    return symbol_type (token::xmlhstring, v, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_cstring (const std::string& v, const location_type& l)
  {
    return symbol_type (token::cstring, v, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_xmlcstring (const std::string& v, const location_type& l)
  {
    return symbol_type (token::xmlcstring, v, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_simplestring (const std::string& v, const location_type& l)
  {
    return symbol_type (token::simplestring, v, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_xmltstring (const std::string& v, const location_type& l)
  {
    return symbol_type (token::xmltstring, v, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_psname (const location_type& l)
  {
    return symbol_type (token::psname, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_encodingreference (const location_type& l)
  {
    return symbol_type (token::encodingreference, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_integerUnicodeLabel (const location_type& l)
  {
    return symbol_type (token::integerUnicodeLabel, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_tstring (const location_type& l)
  {
    return symbol_type (token::tstring, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_objectreference (const location_type& l)
  {
    return symbol_type (token::objectreference, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_objectsetreference (const location_type& l)
  {
    return symbol_type (token::objectsetreference, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_typefieldreference (const std::string& v, const location_type& l)
  {
    return symbol_type (token::typefieldreference, v, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_valuefieldreference (const std::string& v, const location_type& l)
  {
    return symbol_type (token::valuefieldreference, v, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_valuesetfieldreference (const location_type& l)
  {
    return symbol_type (token::valuesetfieldreference, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_objectfieldreference (const location_type& l)
  {
    return symbol_type (token::objectfieldreference, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_objectsetfieldreference (const location_type& l)
  {
    return symbol_type (token::objectsetfieldreference, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_ABSENT (const location_type& l)
  {
    return symbol_type (token::ABSENT, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_ABSTRACT_SYNTAX (const location_type& l)
  {
    return symbol_type (token::ABSTRACT_SYNTAX, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_ALL (const location_type& l)
  {
    return symbol_type (token::ALL, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_APPLICATION (const location_type& l)
  {
    return symbol_type (token::APPLICATION, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_ASN_NULL (const location_type& l)
  {
    return symbol_type (token::ASN_NULL, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_AUTOMATIC (const location_type& l)
  {
    return symbol_type (token::AUTOMATIC, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_BEGIN (const location_type& l)
  {
    return symbol_type (token::BEGIN, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_BIT (const location_type& l)
  {
    return symbol_type (token::BIT, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_BMPString (const location_type& l)
  {
    return symbol_type (token::BMPString, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_BOOLEAN (const location_type& l)
  {
    return symbol_type (token::BOOLEAN, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_BY (const location_type& l)
  {
    return symbol_type (token::BY, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_CHARACTER (const location_type& l)
  {
    return symbol_type (token::CHARACTER, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_CHOICE (const location_type& l)
  {
    return symbol_type (token::CHOICE, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_CLASS (const location_type& l)
  {
    return symbol_type (token::CLASS, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_COMPONENT (const location_type& l)
  {
    return symbol_type (token::COMPONENT, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_COMPONENTS (const location_type& l)
  {
    return symbol_type (token::COMPONENTS, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_CONSTRAINED (const location_type& l)
  {
    return symbol_type (token::CONSTRAINED, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_CONTAINING (const location_type& l)
  {
    return symbol_type (token::CONTAINING, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_DATE (const location_type& l)
  {
    return symbol_type (token::DATE, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_DATE_TIME (const location_type& l)
  {
    return symbol_type (token::DATE_TIME, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_DEFAULT (const location_type& l)
  {
    return symbol_type (token::DEFAULT, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_DEFINITIONS (const location_type& l)
  {
    return symbol_type (token::DEFINITIONS, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_DURATION (const location_type& l)
  {
    return symbol_type (token::DURATION, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_EMBEDDED (const location_type& l)
  {
    return symbol_type (token::EMBEDDED, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_ENCODED (const location_type& l)
  {
    return symbol_type (token::ENCODED, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_ENCODING_CONTROL (const location_type& l)
  {
    return symbol_type (token::ENCODING_CONTROL, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_END (const location_type& l)
  {
    return symbol_type (token::END, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_ENUMERATED (const location_type& l)
  {
    return symbol_type (token::ENUMERATED, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_EXCEPT (const location_type& l)
  {
    return symbol_type (token::EXCEPT, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_EXPLICIT (const location_type& l)
  {
    return symbol_type (token::EXPLICIT, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_EXPORTS (const location_type& l)
  {
    return symbol_type (token::EXPORTS, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_EXTENSIBILITY (const location_type& l)
  {
    return symbol_type (token::EXTENSIBILITY, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_EXTERNAL (const location_type& l)
  {
    return symbol_type (token::EXTERNAL, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_FALSE (const location_type& l)
  {
    return symbol_type (token::FALSE, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_FROM (const location_type& l)
  {
    return symbol_type (token::FROM, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_GeneralizedTime (const location_type& l)
  {
    return symbol_type (token::GeneralizedTime, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_GeneralString (const location_type& l)
  {
    return symbol_type (token::GeneralString, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_GraphicString (const location_type& l)
  {
    return symbol_type (token::GraphicString, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_IA5String (const location_type& l)
  {
    return symbol_type (token::IA5String, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_IDENTIFIER (const location_type& l)
  {
    return symbol_type (token::IDENTIFIER, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_IMPLICIT (const location_type& l)
  {
    return symbol_type (token::IMPLICIT, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_IMPLIED (const location_type& l)
  {
    return symbol_type (token::IMPLIED, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_IMPORTS (const location_type& l)
  {
    return symbol_type (token::IMPORTS, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_INCLUDES (const location_type& l)
  {
    return symbol_type (token::INCLUDES, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_INSTANCE (const location_type& l)
  {
    return symbol_type (token::INSTANCE, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_INSTRUCTIONS (const location_type& l)
  {
    return symbol_type (token::INSTRUCTIONS, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_INTEGER (const location_type& l)
  {
    return symbol_type (token::INTEGER, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_INTERSECTION (const location_type& l)
  {
    return symbol_type (token::INTERSECTION, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_ISO646String (const location_type& l)
  {
    return symbol_type (token::ISO646String, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_MAX (const location_type& l)
  {
    return symbol_type (token::MAX, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_MIN (const location_type& l)
  {
    return symbol_type (token::MIN, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_MINUS_INFINITY (const location_type& l)
  {
    return symbol_type (token::MINUS_INFINITY, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_NOT_A_NUMBER (const location_type& l)
  {
    return symbol_type (token::NOT_A_NUMBER, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_NumericString (const location_type& l)
  {
    return symbol_type (token::NumericString, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_OBJECT (const location_type& l)
  {
    return symbol_type (token::OBJECT, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_ObjectDescriptor (const location_type& l)
  {
    return symbol_type (token::ObjectDescriptor, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_OCTET (const location_type& l)
  {
    return symbol_type (token::OCTET, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_OF (const location_type& l)
  {
    return symbol_type (token::OF, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_OID_IRI (const location_type& l)
  {
    return symbol_type (token::OID_IRI, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_OPTIONAL (const location_type& l)
  {
    return symbol_type (token::OPTIONAL, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_PATTERN (const location_type& l)
  {
    return symbol_type (token::PATTERN, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_PDV (const location_type& l)
  {
    return symbol_type (token::PDV, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_PLUS_INFINITY (const location_type& l)
  {
    return symbol_type (token::PLUS_INFINITY, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_PRESENT (const location_type& l)
  {
    return symbol_type (token::PRESENT, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_PrintableString (const location_type& l)
  {
    return symbol_type (token::PrintableString, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_PRIVATE (const location_type& l)
  {
    return symbol_type (token::PRIVATE, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_REAL (const location_type& l)
  {
    return symbol_type (token::REAL, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_RELATIVE_OID (const location_type& l)
  {
    return symbol_type (token::RELATIVE_OID, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_RELATIVE_OID_IRI (const location_type& l)
  {
    return symbol_type (token::RELATIVE_OID_IRI, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_SEQUENCE (const location_type& l)
  {
    return symbol_type (token::SEQUENCE, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_SET (const location_type& l)
  {
    return symbol_type (token::SET, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_SETTINGS (const location_type& l)
  {
    return symbol_type (token::SETTINGS, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_SIZE (const location_type& l)
  {
    return symbol_type (token::SIZE, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_STRING (const location_type& l)
  {
    return symbol_type (token::STRING, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_SYNTAX (const location_type& l)
  {
    return symbol_type (token::SYNTAX, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_T61String (const location_type& l)
  {
    return symbol_type (token::T61String, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_TAGS (const location_type& l)
  {
    return symbol_type (token::TAGS, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_TeletexString (const location_type& l)
  {
    return symbol_type (token::TeletexString, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_TIME (const location_type& l)
  {
    return symbol_type (token::TIME, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_TIME_OF_DAY (const location_type& l)
  {
    return symbol_type (token::TIME_OF_DAY, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_TRUE (const location_type& l)
  {
    return symbol_type (token::TRUE, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_TYPE_IDENTIFIER (const location_type& l)
  {
    return symbol_type (token::TYPE_IDENTIFIER, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_UNION (const location_type& l)
  {
    return symbol_type (token::UNION, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_UNIQUE (const location_type& l)
  {
    return symbol_type (token::UNIQUE, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_UNIVERSAL (const location_type& l)
  {
    return symbol_type (token::UNIVERSAL, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_UniversalString (const location_type& l)
  {
    return symbol_type (token::UniversalString, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_UTCTime (const location_type& l)
  {
    return symbol_type (token::UTCTime, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_UTF8String (const location_type& l)
  {
    return symbol_type (token::UTF8String, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_VideotexString (const location_type& l)
  {
    return symbol_type (token::VideotexString, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_VisibleString (const location_type& l)
  {
    return symbol_type (token::VisibleString, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_WITH (const location_type& l)
  {
    return symbol_type (token::WITH, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_DEFINED_AS (const location_type& l)
  {
    return symbol_type (token::DEFINED_AS, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_ELIPSIS (const location_type& l)
  {
    return symbol_type (token::ELIPSIS, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_RANGE (const location_type& l)
  {
    return symbol_type (token::RANGE, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_OPEN_BRACE (const location_type& l)
  {
    return symbol_type (token::OPEN_BRACE, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_CLOSE_BRACE (const location_type& l)
  {
    return symbol_type (token::CLOSE_BRACE, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_OPEN_PARENTHESIS (const location_type& l)
  {
    return symbol_type (token::OPEN_PARENTHESIS, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_CLOSE_PARENTHESIS (const location_type& l)
  {
    return symbol_type (token::CLOSE_PARENTHESIS, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_OPEN_SQUARE_BRACKET (const location_type& l)
  {
    return symbol_type (token::OPEN_SQUARE_BRACKET, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_CLOSE_SQUARE_BRACKET (const location_type& l)
  {
    return symbol_type (token::CLOSE_SQUARE_BRACKET, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_LESS_THAN (const location_type& l)
  {
    return symbol_type (token::LESS_THAN, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_GREATER_THAN (const location_type& l)
  {
    return symbol_type (token::GREATER_THAN, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_EXCLAMATION_MARK (const location_type& l)
  {
    return symbol_type (token::EXCLAMATION_MARK, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_QUOTATION_MARK (const location_type& l)
  {
    return symbol_type (token::QUOTATION_MARK, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_AMPERSAND (const location_type& l)
  {
    return symbol_type (token::AMPERSAND, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_APOSTROPHE (const location_type& l)
  {
    return symbol_type (token::APOSTROPHE, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_ASTERISK (const location_type& l)
  {
    return symbol_type (token::ASTERISK, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_COMMA (const location_type& l)
  {
    return symbol_type (token::COMMA, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_FULL_STOP (const location_type& l)
  {
    return symbol_type (token::FULL_STOP, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_HYPHEN_MINUS (const location_type& l)
  {
    return symbol_type (token::HYPHEN_MINUS, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_SOLIDUS (const location_type& l)
  {
    return symbol_type (token::SOLIDUS, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_COLON (const location_type& l)
  {
    return symbol_type (token::COLON, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_SEMICOLON (const location_type& l)
  {
    return symbol_type (token::SEMICOLON, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_EQUALS_SIGN (const location_type& l)
  {
    return symbol_type (token::EQUALS_SIGN, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_AT (const location_type& l)
  {
    return symbol_type (token::AT, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_VERTICAL_LINE (const location_type& l)
  {
    return symbol_type (token::VERTICAL_LINE, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_ACCENT (const location_type& l)
  {
    return symbol_type (token::ACCENT, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_PLUS (const location_type& l)
  {
    return symbol_type (token::PLUS, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_STAR (const location_type& l)
  {
    return symbol_type (token::STAR, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_GENERIC_IDENTIFIER_UPPERCASE (const std::string& v, const location_type& l)
  {
    return symbol_type (token::GENERIC_IDENTIFIER_UPPERCASE, v, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_GENERIC_IDENTIFIER_LOWERCASE (const std::string& v, const location_type& l)
  {
    return symbol_type (token::GENERIC_IDENTIFIER_LOWERCASE, v, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_GENERIC_INTEGER (const location_type& l)
  {
    return symbol_type (token::GENERIC_INTEGER, l);
  }

  asn1_parser::symbol_type
  asn1_parser::make_xmlasn1typename (const location_type& l)
  {
    return symbol_type (token::xmlasn1typename, l);
  }



} // yy
#line 4160 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:408





// User implementation prologue.

#line 4168 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:412
// Unqualified %code blocks.
#line 15 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:413

    struct Context
    {
        const char* cursor;
        yy::location location;

        Asn1Tree asn1_tree;
    };
    void yy::asn1_parser::error(const location_type& l, const std::string& m)
    {
        std::cerr << (l.begin.filename ? l.begin.filename->c_str() : "(undefined)");
        std::cerr << ':' << l.begin.line << ':' << l.begin.column << '-' << l.end.column << ": " << m << '\n';
    }

    namespace yy { asn1_parser::symbol_type yylex(Context& c); }

#line 4187 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:413


#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> // FIXME: INFRINGES ON USER NAME SPACE.
#   define YY_(msgid) dgettext ("bison-runtime", msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(msgid) msgid
# endif
#endif

#define YYRHSLOC(Rhs, K) ((Rhs)[K].location)
/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

# ifndef YYLLOC_DEFAULT
#  define YYLLOC_DEFAULT(Current, Rhs, N)                               \
    do                                                                  \
      if (N)                                                            \
        {                                                               \
          (Current).begin  = YYRHSLOC (Rhs, 1).begin;                   \
          (Current).end    = YYRHSLOC (Rhs, N).end;                     \
        }                                                               \
      else                                                              \
        {                                                               \
          (Current).begin = (Current).end = YYRHSLOC (Rhs, 0).end;      \
        }                                                               \
    while (/*CONSTCOND*/ false)
# endif


// Suppress unused-variable warnings by "using" E.
#define YYUSE(E) ((void) (E))

// Enable debugging if requested.
#if YYDEBUG

// A pseudo ostream that takes yydebug_ into account.
# define YYCDEBUG if (yydebug_) (*yycdebug_)

# define YY_SYMBOL_PRINT(Title, Symbol)         \
  do {                                          \
    if (yydebug_)                               \
    {                                           \
      *yycdebug_ << Title << ' ';               \
      yy_print_ (*yycdebug_, Symbol);           \
      *yycdebug_ << std::endl;                  \
    }                                           \
  } while (false)

# define YY_REDUCE_PRINT(Rule)          \
  do {                                  \
    if (yydebug_)                       \
      yy_reduce_print_ (Rule);          \
  } while (false)

# define YY_STACK_PRINT()               \
  do {                                  \
    if (yydebug_)                       \
      yystack_print_ ();                \
  } while (false)

#else // !YYDEBUG

# define YYCDEBUG if (false) std::cerr
# define YY_SYMBOL_PRINT(Title, Symbol)  YYUSE(Symbol)
# define YY_REDUCE_PRINT(Rule)           static_cast<void>(0)
# define YY_STACK_PRINT()                static_cast<void>(0)

#endif // !YYDEBUG

#define yyerrok         (yyerrstatus_ = 0)
#define yyclearin       (yyla.clear ())

#define YYACCEPT        goto yyacceptlab
#define YYABORT         goto yyabortlab
#define YYERROR         goto yyerrorlab
#define YYRECOVERING()  (!!yyerrstatus_)


namespace yy {
#line 4273 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:479

  /* Return YYSTR after stripping away unnecessary quotes and
     backslashes, so that it's suitable for yyerror.  The heuristic is
     that double-quoting is unnecessary unless the string contains an
     apostrophe, a comma, or backslash (other than backslash-backslash).
     YYSTR is taken from yytname.  */
  std::string
  asn1_parser::yytnamerr_ (const char *yystr)
  {
    if (*yystr == '"')
      {
        std::string yyr = "";
        char const *yyp = yystr;

        for (;;)
          switch (*++yyp)
            {
            case '\'':
            case ',':
              goto do_not_strip_quotes;

            case '\\':
              if (*++yyp != '\\')
                goto do_not_strip_quotes;
              // Fall through.
            default:
              yyr += *yyp;
              break;

            case '"':
              return yyr;
            }
      do_not_strip_quotes: ;
      }

    return yystr;
  }


  /// Build a parser object.
  asn1_parser::asn1_parser (Context& context_yyarg)
    :
#if YYDEBUG
      yydebug_ (false),
      yycdebug_ (&std::cerr),
#endif
      context (context_yyarg)
  {}

  asn1_parser::~asn1_parser ()
  {}


  /*---------------.
  | Symbol types.  |
  `---------------*/



  // by_state.
  inline
  asn1_parser::by_state::by_state ()
    : state (empty_state)
  {}

  inline
  asn1_parser::by_state::by_state (const by_state& other)
    : state (other.state)
  {}

  inline
  void
  asn1_parser::by_state::clear ()
  {
    state = empty_state;
  }

  inline
  void
  asn1_parser::by_state::move (by_state& that)
  {
    state = that.state;
    that.clear ();
  }

  inline
  asn1_parser::by_state::by_state (state_type s)
    : state (s)
  {}

  inline
  asn1_parser::symbol_number_type
  asn1_parser::by_state::type_get () const
  {
    if (state == empty_state)
      return empty_symbol;
    else
      return yystos_[state];
  }

  inline
  asn1_parser::stack_symbol_type::stack_symbol_type ()
  {}


  inline
  asn1_parser::stack_symbol_type::stack_symbol_type (state_type s, symbol_type& that)
    : super_type (s, that.location)
  {
      switch (that.type_get ())
    {
      case 198: // ParameterizedAssignment
      case 199: // ParameterizedTypeAssignment
      case 200: // ParameterizedValueAssignment
      case 201: // ParameterizedValueSetTypeAssignment
      case 202: // ParameterizedObjectClassAssignment
      case 204: // ParameterizedObjectAssignment
      case 205: // ParameterizedObjectSetAssignment
      case 249: // Assignment
      case 258: // TypeAssignment
      case 259: // ValueAssignment
        value.move< Assignment > (that.value);
        break;

      case 261: // BuiltinType
        value.move< BuiltinType > (that.value);
        break;

      case 291: // ChoiceType
        value.move< ChoiceType > (that.value);
        break;

      case 301: // Class
        value.move< Class > (that.value);
        break;

      case 287: // ComponentType
        value.move< ComponentType > (that.value);
        break;

      case 284: // ComponentTypeLists
      case 285: // RootComponentTypeList
      case 286: // ComponentTypeList
        value.move< ComponentTypeList > (that.value);
        break;

      case 250: // DefinedType
      case 252: // ParameterizedType
        value.move< DefinedType > (that.value);
        break;

      case 251: // DefinedValue
        value.move< DefinedValue > (that.value);
        break;

      case 273: // EnumeratedType
      case 274: // Enumerations
      case 275: // Enumeration
        value.move< EnumeratedType > (that.value);
        break;

      case 276: // EnumerationItem
        value.move< EnumerationValue > (that.value);
        break;

      case 242: // SymbolsFromModule
        value.move< Import > (that.value);
        break;

      case 236: // ModuleBody
        value.move< Module > (that.value);
        break;

      case 271: // NamedNumber
        value.move< NamedNumber > (that.value);
        break;

      case 262: // NamedType
        value.move< NamedType > (that.value);
        break;

      case 305: // ObjIdComponents
      case 306: // NameForm
      case 307: // NumberForm
      case 308: // NameAndNumberForm
        value.move< ObjectIdComponentValue > (that.value);
        break;

      case 296: // PrefixedType
        value.move< PrefixedType > (that.value);
        break;

      case 288: // SequenceOfType
        value.move< SequenceOfType > (that.value);
        break;

      case 283: // SequenceType
        value.move< SequenceType > (that.value);
        break;

      case 290: // SetOfType
        value.move< SetOfType > (that.value);
        break;

      case 289: // SetType
        value.move< SetType > (that.value);
        break;

      case 298: // Tag
        value.move< Tag > (that.value);
        break;

      case 297: // TaggedType
        value.move< TaggedType > (that.value);
        break;

      case 234: // TagDefault
        value.move< TaggingMode > (that.value);
        break;

      case 255: // ActualParameter
      case 260: // Type
        value.move< Type > (that.value);
        break;

      case 263: // Value
        value.move< Value > (that.value);
        break;

      case 5: // realnumber
        value.move< double > (that.value);
        break;

      case 300: // ClassNumber
        value.move< int > (that.value);
        break;

      case 4: // number
      case 272: // SignedNumber
        value.move< long long > (that.value);
        break;

      case 203: // ParameterList
      case 206: // ParameterSeries
        value.move< std::set<std::string> > (that.value);
        break;

      case 6: // bstring
      case 7: // xmlbstring
      case 8: // hstring
      case 9: // xmlhstring
      case 10: // cstring
      case 11: // xmlcstring
      case 12: // simplestring
      case 13: // xmltstring
      case 23: // typefieldreference
      case 24: // valuefieldreference
      case 147: // GENERIC_IDENTIFIER_UPPERCASE
      case 148: // GENERIC_IDENTIFIER_LOWERCASE
      case 207: // Parameter
      case 213: // SimpleDefinedType
      case 225: // ModuleIdentifier
      case 243: // GlobalModuleReference
      case 246: // Symbol
      case 247: // Reference
      case 372: // typereference
      case 373: // identifier
      case 374: // valuereference
      case 375: // modulereference
      case 376: // objectclassreference
      case 377: // word
        value.move< std::string > (that.value);
        break;

      case 248: // AssignmentList
        value.move< std::vector<Assignment> > (that.value);
        break;

      case 237: // Exports
        value.move< std::vector<Export> > (that.value);
        break;

      case 239: // Imports
      case 240: // SymbolsImported
      case 241: // SymbolsFromModuleList
        value.move< std::vector<Import> > (that.value);
        break;

      case 292: // AlternativeTypeLists
      case 293: // RootAlternativeTypeList
      case 294: // AlternativeTypeList
        value.move< std::vector<NamedType> > (that.value);
        break;

      case 303: // ObjectIdentifierValue
      case 304: // ObjIdComponentsList
        value.move< std::vector<ObjectIdComponentValue> > (that.value);
        break;

      case 254: // ActualParameterList
        value.move< std::vector<Type> > (that.value);
        break;

      case 266: // SequenceOfValues
        value.move< std::vector<Value> > (that.value);
        break;

      case 245: // SymbolList
        value.move< std::vector<std::string> > (that.value);
        break;

      default:
        break;
    }

    // that is emptied.
    that.type = empty_symbol;
  }

  inline
  asn1_parser::stack_symbol_type&
  asn1_parser::stack_symbol_type::operator= (const stack_symbol_type& that)
  {
    state = that.state;
      switch (that.type_get ())
    {
      case 198: // ParameterizedAssignment
      case 199: // ParameterizedTypeAssignment
      case 200: // ParameterizedValueAssignment
      case 201: // ParameterizedValueSetTypeAssignment
      case 202: // ParameterizedObjectClassAssignment
      case 204: // ParameterizedObjectAssignment
      case 205: // ParameterizedObjectSetAssignment
      case 249: // Assignment
      case 258: // TypeAssignment
      case 259: // ValueAssignment
        value.copy< Assignment > (that.value);
        break;

      case 261: // BuiltinType
        value.copy< BuiltinType > (that.value);
        break;

      case 291: // ChoiceType
        value.copy< ChoiceType > (that.value);
        break;

      case 301: // Class
        value.copy< Class > (that.value);
        break;

      case 287: // ComponentType
        value.copy< ComponentType > (that.value);
        break;

      case 284: // ComponentTypeLists
      case 285: // RootComponentTypeList
      case 286: // ComponentTypeList
        value.copy< ComponentTypeList > (that.value);
        break;

      case 250: // DefinedType
      case 252: // ParameterizedType
        value.copy< DefinedType > (that.value);
        break;

      case 251: // DefinedValue
        value.copy< DefinedValue > (that.value);
        break;

      case 273: // EnumeratedType
      case 274: // Enumerations
      case 275: // Enumeration
        value.copy< EnumeratedType > (that.value);
        break;

      case 276: // EnumerationItem
        value.copy< EnumerationValue > (that.value);
        break;

      case 242: // SymbolsFromModule
        value.copy< Import > (that.value);
        break;

      case 236: // ModuleBody
        value.copy< Module > (that.value);
        break;

      case 271: // NamedNumber
        value.copy< NamedNumber > (that.value);
        break;

      case 262: // NamedType
        value.copy< NamedType > (that.value);
        break;

      case 305: // ObjIdComponents
      case 306: // NameForm
      case 307: // NumberForm
      case 308: // NameAndNumberForm
        value.copy< ObjectIdComponentValue > (that.value);
        break;

      case 296: // PrefixedType
        value.copy< PrefixedType > (that.value);
        break;

      case 288: // SequenceOfType
        value.copy< SequenceOfType > (that.value);
        break;

      case 283: // SequenceType
        value.copy< SequenceType > (that.value);
        break;

      case 290: // SetOfType
        value.copy< SetOfType > (that.value);
        break;

      case 289: // SetType
        value.copy< SetType > (that.value);
        break;

      case 298: // Tag
        value.copy< Tag > (that.value);
        break;

      case 297: // TaggedType
        value.copy< TaggedType > (that.value);
        break;

      case 234: // TagDefault
        value.copy< TaggingMode > (that.value);
        break;

      case 255: // ActualParameter
      case 260: // Type
        value.copy< Type > (that.value);
        break;

      case 263: // Value
        value.copy< Value > (that.value);
        break;

      case 5: // realnumber
        value.copy< double > (that.value);
        break;

      case 300: // ClassNumber
        value.copy< int > (that.value);
        break;

      case 4: // number
      case 272: // SignedNumber
        value.copy< long long > (that.value);
        break;

      case 203: // ParameterList
      case 206: // ParameterSeries
        value.copy< std::set<std::string> > (that.value);
        break;

      case 6: // bstring
      case 7: // xmlbstring
      case 8: // hstring
      case 9: // xmlhstring
      case 10: // cstring
      case 11: // xmlcstring
      case 12: // simplestring
      case 13: // xmltstring
      case 23: // typefieldreference
      case 24: // valuefieldreference
      case 147: // GENERIC_IDENTIFIER_UPPERCASE
      case 148: // GENERIC_IDENTIFIER_LOWERCASE
      case 207: // Parameter
      case 213: // SimpleDefinedType
      case 225: // ModuleIdentifier
      case 243: // GlobalModuleReference
      case 246: // Symbol
      case 247: // Reference
      case 372: // typereference
      case 373: // identifier
      case 374: // valuereference
      case 375: // modulereference
      case 376: // objectclassreference
      case 377: // word
        value.copy< std::string > (that.value);
        break;

      case 248: // AssignmentList
        value.copy< std::vector<Assignment> > (that.value);
        break;

      case 237: // Exports
        value.copy< std::vector<Export> > (that.value);
        break;

      case 239: // Imports
      case 240: // SymbolsImported
      case 241: // SymbolsFromModuleList
        value.copy< std::vector<Import> > (that.value);
        break;

      case 292: // AlternativeTypeLists
      case 293: // RootAlternativeTypeList
      case 294: // AlternativeTypeList
        value.copy< std::vector<NamedType> > (that.value);
        break;

      case 303: // ObjectIdentifierValue
      case 304: // ObjIdComponentsList
        value.copy< std::vector<ObjectIdComponentValue> > (that.value);
        break;

      case 254: // ActualParameterList
        value.copy< std::vector<Type> > (that.value);
        break;

      case 266: // SequenceOfValues
        value.copy< std::vector<Value> > (that.value);
        break;

      case 245: // SymbolList
        value.copy< std::vector<std::string> > (that.value);
        break;

      default:
        break;
    }

    location = that.location;
    return *this;
  }


  template <typename Base>
  inline
  void
  asn1_parser::yy_destroy_ (const char* yymsg, basic_symbol<Base>& yysym) const
  {
    if (yymsg)
      YY_SYMBOL_PRINT (yymsg, yysym);
  }

#if YYDEBUG
  template <typename Base>
  void
  asn1_parser::yy_print_ (std::ostream& yyo,
                                     const basic_symbol<Base>& yysym) const
  {
    std::ostream& yyoutput = yyo;
    YYUSE (yyoutput);
    symbol_number_type yytype = yysym.type_get ();
    // Avoid a (spurious) G++ 4.8 warning about "array subscript is
    // below array bounds".
    if (yysym.empty ())
      std::abort ();
    yyo << (yytype < yyntokens_ ? "token" : "nterm")
        << ' ' << yytname_[yytype] << " ("
        << yysym.location << ": ";
    YYUSE (yytype);
    yyo << ')';
  }
#endif

  inline
  void
  asn1_parser::yypush_ (const char* m, state_type s, symbol_type& sym)
  {
    stack_symbol_type t (s, sym);
    yypush_ (m, t);
  }

  inline
  void
  asn1_parser::yypush_ (const char* m, stack_symbol_type& s)
  {
    if (m)
      YY_SYMBOL_PRINT (m, s);
    yystack_.push (s);
  }

  inline
  void
  asn1_parser::yypop_ (unsigned int n)
  {
    yystack_.pop (n);
  }

#if YYDEBUG
  std::ostream&
  asn1_parser::debug_stream () const
  {
    return *yycdebug_;
  }

  void
  asn1_parser::set_debug_stream (std::ostream& o)
  {
    yycdebug_ = &o;
  }


  asn1_parser::debug_level_type
  asn1_parser::debug_level () const
  {
    return yydebug_;
  }

  void
  asn1_parser::set_debug_level (debug_level_type l)
  {
    yydebug_ = l;
  }
#endif // YYDEBUG

  inline asn1_parser::state_type
  asn1_parser::yy_lr_goto_state_ (state_type yystate, int yysym)
  {
    int yyr = yypgoto_[yysym - yyntokens_] + yystate;
    if (0 <= yyr && yyr <= yylast_ && yycheck_[yyr] == yystate)
      return yytable_[yyr];
    else
      return yydefgoto_[yysym - yyntokens_];
  }

  inline bool
  asn1_parser::yy_pact_value_is_default_ (int yyvalue)
  {
    return yyvalue == yypact_ninf_;
  }

  inline bool
  asn1_parser::yy_table_value_is_error_ (int yyvalue)
  {
    return yyvalue == yytable_ninf_;
  }

  int
  asn1_parser::parse ()
  {
    // State.
    int yyn;
    /// Length of the RHS of the rule being reduced.
    int yylen = 0;

    // Error handling.
    int yynerrs_ = 0;
    int yyerrstatus_ = 0;

    /// The lookahead symbol.
    symbol_type yyla;

    /// The locations where the error started and ended.
    stack_symbol_type yyerror_range[3];

    /// The return value of parse ().
    int yyresult;

    // FIXME: This shoud be completely indented.  It is not yet to
    // avoid gratuitous conflicts when merging into the master branch.
    try
      {
    YYCDEBUG << "Starting parse" << std::endl;


    /* Initialize the stack.  The initial state will be set in
       yynewstate, since the latter expects the semantical and the
       location values to have been already stored, initialize these
       stacks with a primary value.  */
    yystack_.clear ();
    yypush_ (YY_NULLPTR, 0, yyla);

    // A new symbol was pushed on the stack.
  yynewstate:
    YYCDEBUG << "Entering state " << yystack_[0].state << std::endl;

    // Accept?
    if (yystack_[0].state == yyfinal_)
      goto yyacceptlab;

    goto yybackup;

    // Backup.
  yybackup:

    // Try to take a decision without lookahead.
    yyn = yypact_[yystack_[0].state];
    if (yy_pact_value_is_default_ (yyn))
      goto yydefault;

    // Read a lookahead token.
    if (yyla.empty ())
      {
        YYCDEBUG << "Reading a token: ";
        try
          {
            symbol_type yylookahead (yylex (context));
            yyla.move (yylookahead);
          }
        catch (const syntax_error& yyexc)
          {
            error (yyexc);
            goto yyerrlab1;
          }
      }
    YY_SYMBOL_PRINT ("Next token is", yyla);

    /* If the proper action on seeing token YYLA.TYPE is to reduce or
       to detect an error, take that action.  */
    yyn += yyla.type_get ();
    if (yyn < 0 || yylast_ < yyn || yycheck_[yyn] != yyla.type_get ())
      goto yydefault;

    // Reduce or error.
    yyn = yytable_[yyn];
    if (yyn <= 0)
      {
        if (yy_table_value_is_error_ (yyn))
          goto yyerrlab;
        yyn = -yyn;
        goto yyreduce;
      }

    // Count tokens shifted since error; after three, turn off error status.
    if (yyerrstatus_)
      --yyerrstatus_;

    // Shift the lookahead token.
    yypush_ ("Shifting", yyn, yyla);
    goto yynewstate;

  /*-----------------------------------------------------------.
  | yydefault -- do the default action for the current state.  |
  `-----------------------------------------------------------*/
  yydefault:
    yyn = yydefact_[yystack_[0].state];
    if (yyn == 0)
      goto yyerrlab;
    goto yyreduce;

  /*-----------------------------.
  | yyreduce -- Do a reduction.  |
  `-----------------------------*/
  yyreduce:
    yylen = yyr2_[yyn];
    {
      stack_symbol_type yylhs;
      yylhs.state = yy_lr_goto_state_(yystack_[yylen].state, yyr1_[yyn]);
      /* Variants are always initialized to an empty instance of the
         correct type. The default '$$ = $1' action is NOT applied
         when using variants.  */
        switch (yyr1_[yyn])
    {
      case 198: // ParameterizedAssignment
      case 199: // ParameterizedTypeAssignment
      case 200: // ParameterizedValueAssignment
      case 201: // ParameterizedValueSetTypeAssignment
      case 202: // ParameterizedObjectClassAssignment
      case 204: // ParameterizedObjectAssignment
      case 205: // ParameterizedObjectSetAssignment
      case 249: // Assignment
      case 258: // TypeAssignment
      case 259: // ValueAssignment
        yylhs.value.build< Assignment > ();
        break;

      case 261: // BuiltinType
        yylhs.value.build< BuiltinType > ();
        break;

      case 291: // ChoiceType
        yylhs.value.build< ChoiceType > ();
        break;

      case 301: // Class
        yylhs.value.build< Class > ();
        break;

      case 287: // ComponentType
        yylhs.value.build< ComponentType > ();
        break;

      case 284: // ComponentTypeLists
      case 285: // RootComponentTypeList
      case 286: // ComponentTypeList
        yylhs.value.build< ComponentTypeList > ();
        break;

      case 250: // DefinedType
      case 252: // ParameterizedType
        yylhs.value.build< DefinedType > ();
        break;

      case 251: // DefinedValue
        yylhs.value.build< DefinedValue > ();
        break;

      case 273: // EnumeratedType
      case 274: // Enumerations
      case 275: // Enumeration
        yylhs.value.build< EnumeratedType > ();
        break;

      case 276: // EnumerationItem
        yylhs.value.build< EnumerationValue > ();
        break;

      case 242: // SymbolsFromModule
        yylhs.value.build< Import > ();
        break;

      case 236: // ModuleBody
        yylhs.value.build< Module > ();
        break;

      case 271: // NamedNumber
        yylhs.value.build< NamedNumber > ();
        break;

      case 262: // NamedType
        yylhs.value.build< NamedType > ();
        break;

      case 305: // ObjIdComponents
      case 306: // NameForm
      case 307: // NumberForm
      case 308: // NameAndNumberForm
        yylhs.value.build< ObjectIdComponentValue > ();
        break;

      case 296: // PrefixedType
        yylhs.value.build< PrefixedType > ();
        break;

      case 288: // SequenceOfType
        yylhs.value.build< SequenceOfType > ();
        break;

      case 283: // SequenceType
        yylhs.value.build< SequenceType > ();
        break;

      case 290: // SetOfType
        yylhs.value.build< SetOfType > ();
        break;

      case 289: // SetType
        yylhs.value.build< SetType > ();
        break;

      case 298: // Tag
        yylhs.value.build< Tag > ();
        break;

      case 297: // TaggedType
        yylhs.value.build< TaggedType > ();
        break;

      case 234: // TagDefault
        yylhs.value.build< TaggingMode > ();
        break;

      case 255: // ActualParameter
      case 260: // Type
        yylhs.value.build< Type > ();
        break;

      case 263: // Value
        yylhs.value.build< Value > ();
        break;

      case 5: // realnumber
        yylhs.value.build< double > ();
        break;

      case 300: // ClassNumber
        yylhs.value.build< int > ();
        break;

      case 4: // number
      case 272: // SignedNumber
        yylhs.value.build< long long > ();
        break;

      case 203: // ParameterList
      case 206: // ParameterSeries
        yylhs.value.build< std::set<std::string> > ();
        break;

      case 6: // bstring
      case 7: // xmlbstring
      case 8: // hstring
      case 9: // xmlhstring
      case 10: // cstring
      case 11: // xmlcstring
      case 12: // simplestring
      case 13: // xmltstring
      case 23: // typefieldreference
      case 24: // valuefieldreference
      case 147: // GENERIC_IDENTIFIER_UPPERCASE
      case 148: // GENERIC_IDENTIFIER_LOWERCASE
      case 207: // Parameter
      case 213: // SimpleDefinedType
      case 225: // ModuleIdentifier
      case 243: // GlobalModuleReference
      case 246: // Symbol
      case 247: // Reference
      case 372: // typereference
      case 373: // identifier
      case 374: // valuereference
      case 375: // modulereference
      case 376: // objectclassreference
      case 377: // word
        yylhs.value.build< std::string > ();
        break;

      case 248: // AssignmentList
        yylhs.value.build< std::vector<Assignment> > ();
        break;

      case 237: // Exports
        yylhs.value.build< std::vector<Export> > ();
        break;

      case 239: // Imports
      case 240: // SymbolsImported
      case 241: // SymbolsFromModuleList
        yylhs.value.build< std::vector<Import> > ();
        break;

      case 292: // AlternativeTypeLists
      case 293: // RootAlternativeTypeList
      case 294: // AlternativeTypeList
        yylhs.value.build< std::vector<NamedType> > ();
        break;

      case 303: // ObjectIdentifierValue
      case 304: // ObjIdComponentsList
        yylhs.value.build< std::vector<ObjectIdComponentValue> > ();
        break;

      case 254: // ActualParameterList
        yylhs.value.build< std::vector<Type> > ();
        break;

      case 266: // SequenceOfValues
        yylhs.value.build< std::vector<Value> > ();
        break;

      case 245: // SymbolList
        yylhs.value.build< std::vector<std::string> > ();
        break;

      default:
        break;
    }


      // Compute the default @$.
      {
        slice<stack_symbol_type, stack_type> slice (yystack_, yylen);
        YYLLOC_DEFAULT (yylhs.location, slice, yylen);
      }

      // Perform the reduction.
      YY_REDUCE_PRINT (yyn);
      try
        {
          switch (yyn)
            {
  case 4:
#line 296 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yystack_[2].value.as< Module > ().module_reference = yystack_[9].value.as< std::string > ();
      yystack_[2].value.as< Module > ().tagging_default = yystack_[6].value.as< TaggingMode > ();
      context.asn1_tree.modules.push_back(yystack_[2].value.as< Module > ()); }
#line 5250 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 89:
#line 493 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< Assignment > () = yystack_[0].value.as< Assignment > (); }
#line 5256 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 95:
#line 502 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { std::cout << "param assign\n"; yylhs.value.as< Assignment > () = Assignment{ yystack_[3].value.as< std::string > (), yystack_[0].value.as< Type > (), absl::nullopt, {}, yystack_[2].value.as< std::set<std::string> > () }; }
#line 5262 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 102:
#line 521 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< std::set<std::string> > () = yystack_[1].value.as< std::set<std::string> > (); }
#line 5268 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 103:
#line 525 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< std::set<std::string> > ().insert(yystack_[0].value.as< std::string > ()); }
#line 5274 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 104:
#line 527 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< std::set<std::string> > () = yystack_[2].value.as< std::set<std::string> > (); yystack_[2].value.as< std::set<std::string> > ().insert(yystack_[0].value.as< std::string > ()); }
#line 5280 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 105:
#line 531 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< std::string > () = yystack_[0].value.as< std::string > (); }
#line 5286 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 106:
#line 533 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< std::string > () = yystack_[0].value.as< std::string > (); }
#line 5292 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 115:
#line 586 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< std::string > () = yystack_[0].value.as< std::string > (); }
#line 5298 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 127:
#line 610 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { std::cout << "Simple constraint\n"; }
#line 5304 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 128:
#line 612 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { std::cout << "Relation constraint\n"; }
#line 5310 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 141:
#line 654 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    {
    yylhs.value.as< std::string > () = yystack_[1].value.as< std::string > ();
}
#line 5318 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 156:
#line 693 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< TaggingMode > () = TaggingMode::explicit_; }
#line 5324 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 157:
#line 695 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< TaggingMode > () = TaggingMode::implicit; }
#line 5330 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 158:
#line 697 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< TaggingMode > () = TaggingMode::automatic; }
#line 5336 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 159:
#line 699 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< TaggingMode > () = TaggingMode::explicit_; }
#line 5342 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 162:
#line 707 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< Module > () = Module{ {}, TaggingMode(), yystack_[2].value.as< std::vector<Export> > (), yystack_[1].value.as< std::vector<Import> > (), yystack_[0].value.as< std::vector<Assignment> > ()}; }
#line 5348 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 163:
#line 709 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { }
#line 5354 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 169:
#line 722 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< std::vector<Import> > () = yystack_[1].value.as< std::vector<Import> > (); }
#line 5360 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 171:
#line 727 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< std::vector<Import> > () = yystack_[0].value.as< std::vector<Import> > (); }
#line 5366 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 173:
#line 732 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< std::vector<Import> > ().push_back(yystack_[0].value.as< Import > ()); }
#line 5372 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 174:
#line 734 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< std::vector<Import> > () = yystack_[1].value.as< std::vector<Import> > (); yylhs.value.as< std::vector<Import> > ().push_back(yystack_[0].value.as< Import > ()); }
#line 5378 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 175:
#line 738 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< Import > () = Import{ yystack_[0].value.as< std::string > (), yystack_[2].value.as< std::vector<std::string> > () }; }
#line 5384 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 176:
#line 742 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< std::string > () = yystack_[1].value.as< std::string > (); }
#line 5390 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 180:
#line 751 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< std::vector<std::string> > ().push_back(yystack_[0].value.as< std::string > ()); }
#line 5396 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 181:
#line 753 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< std::vector<std::string> > () = yystack_[2].value.as< std::vector<std::string> > (); yylhs.value.as< std::vector<std::string> > ().push_back(yystack_[0].value.as< std::string > ()); }
#line 5402 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 182:
#line 757 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< std::string > () = yystack_[0].value.as< std::string > (); }
#line 5408 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 183:
#line 761 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< std::string > () = yystack_[0].value.as< std::string > (); }
#line 5414 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 184:
#line 763 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< std::string > () = yystack_[2].value.as< std::string > (); }
#line 5420 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 185:
#line 765 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< std::string > () = yystack_[0].value.as< std::string > (); }
#line 5426 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 186:
#line 774 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< std::vector<Assignment> > ().push_back(yystack_[0].value.as< Assignment > ());}
#line 5432 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 187:
#line 776 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< std::vector<Assignment> > () = yystack_[1].value.as< std::vector<Assignment> > (); yylhs.value.as< std::vector<Assignment> > ().push_back(yystack_[0].value.as< Assignment > ()); }
#line 5438 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 188:
#line 780 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< Assignment > () = yystack_[0].value.as< Assignment > (); }
#line 5444 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 189:
#line 782 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< Assignment > () = yystack_[0].value.as< Assignment > (); }
#line 5450 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 192:
#line 788 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< Assignment > () = yystack_[0].value.as< Assignment > (); }
#line 5456 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 194:
#line 793 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< DefinedType > () = DefinedType{yystack_[0].value.as< std::string > (), {}}; }
#line 5462 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 195:
#line 795 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< DefinedType > () = yystack_[0].value.as< DefinedType > (); }
#line 5468 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 196:
#line 801 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< DefinedValue > () = DefinedValue{yystack_[0].value.as< std::string > ()}; }
#line 5474 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 198:
#line 806 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< DefinedType > () = DefinedType{yystack_[1].value.as< std::string > (), yystack_[0].value.as< std::vector<Type> > ()}; }
#line 5480 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 200:
#line 813 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< std::vector<Type> > ().push_back(yystack_[1].value.as< Type > ()); }
#line 5486 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 201:
#line 817 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< Type > () = yystack_[0].value.as< Type > (); }
#line 5492 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 205:
#line 861 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< Assignment > () = Assignment{ yystack_[2].value.as< std::string > (), yystack_[0].value.as< Type > (), absl::nullopt, {} }; }
#line 5498 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 206:
#line 868 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< Assignment > () = Assignment{ yystack_[3].value.as< std::string > (), yystack_[2].value.as< Type > (), yystack_[0].value.as< Value > (), {} }; }
#line 5504 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 207:
#line 872 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< Type > () = yystack_[0].value.as< BuiltinType > (); }
#line 5510 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 208:
#line 874 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< Type > () = Type(); }
#line 5516 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 209:
#line 876 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< Type > () = yystack_[0].value.as< DefinedType > (); }
#line 5522 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 210:
#line 878 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { std::cout << "Warning: Not handled - SelectionType\n"; }
#line 5528 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 211:
#line 880 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { std::cout << std::string("Not handled - TypeFromObject\n"); }
#line 5534 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 212:
#line 884 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< BuiltinType > () = BitStringType(); }
#line 5540 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 213:
#line 885 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< BuiltinType > () = BooleanType(); }
#line 5546 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 214:
#line 886 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< BuiltinType > () = CharacterStringType(); }
#line 5552 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 215:
#line 887 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< BuiltinType > () = yystack_[0].value.as< ChoiceType > (); }
#line 5558 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 216:
#line 888 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< BuiltinType > () = DateType(); }
#line 5564 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 217:
#line 889 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< BuiltinType > () = DateTimeType(); }
#line 5570 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 218:
#line 890 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< BuiltinType > () = DurationType(); }
#line 5576 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 219:
#line 891 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< BuiltinType > () = EmbeddedPDVType(); }
#line 5582 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 220:
#line 892 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< BuiltinType > () = yystack_[0].value.as< EnumeratedType > (); }
#line 5588 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 221:
#line 893 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< BuiltinType > () = ExternalType(); }
#line 5594 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 222:
#line 894 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< BuiltinType > () = GeneralizedTimeType(); }
#line 5600 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 223:
#line 895 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< BuiltinType > () = InstanceOfType(); }
#line 5606 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 224:
#line 896 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< BuiltinType > () = IntegerType(); }
#line 5612 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 225:
#line 897 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< BuiltinType > () = IRIType(); }
#line 5618 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 226:
#line 898 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< BuiltinType > () = NullType(); }
#line 5624 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 227:
#line 899 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< BuiltinType > () = ObjectClassFieldType(); }
#line 5630 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 228:
#line 900 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< BuiltinType > () = ObjectDescriptorType(); }
#line 5636 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 229:
#line 901 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< BuiltinType > () = ObjectIdentifierType(); }
#line 5642 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 230:
#line 902 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< BuiltinType > () = OctetStringType(); }
#line 5648 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 231:
#line 903 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< BuiltinType > () = RealType(); }
#line 5654 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 232:
#line 904 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< BuiltinType > () = RelativeIRIType(); }
#line 5660 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 233:
#line 905 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< BuiltinType > () = RelativeOIDType(); }
#line 5666 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 234:
#line 906 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< BuiltinType > () = yystack_[0].value.as< SequenceType > (); }
#line 5672 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 235:
#line 907 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< BuiltinType > () = yystack_[0].value.as< SequenceOfType > (); }
#line 5678 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 236:
#line 908 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< BuiltinType > () = yystack_[0].value.as< SetType > (); }
#line 5684 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 237:
#line 909 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< BuiltinType > () = yystack_[0].value.as< SetOfType > (); }
#line 5690 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 238:
#line 910 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< BuiltinType > () = yystack_[0].value.as< PrefixedType > (); }
#line 5696 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 239:
#line 911 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< BuiltinType > () = TimeType(); }
#line 5702 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 240:
#line 912 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< BuiltinType > () = TimeOfDayType(); }
#line 5708 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 241:
#line 913 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< BuiltinType > () = UTCTimeType(); }
#line 5714 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 242:
#line 917 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< NamedType > () = NamedType{ yystack_[1].value.as< std::string > (), yystack_[0].value.as< Type > () }; }
#line 5720 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 243:
#line 921 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { std::cout << std::string("Unhandled field: BooleanValue\n"); }
#line 5726 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 244:
#line 923 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { std::cout << std::string("Unhandled field: IRIValue\n"); }
#line 5732 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 245:
#line 925 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { std::cout << std::string("Unhandled field: ASN_NULL\n"); }
#line 5738 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 246:
#line 927 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { std::cout << std::string("Unhandled field: TimeValue\n"); }
#line 5744 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 247:
#line 929 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { std::cout << std::string("Unhandled field: bstring\n"); }
#line 5750 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 248:
#line 931 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { std::cout << std::string("Unhandled field: hstring\n"); }
#line 5756 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 249:
#line 933 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< Value > ().value_selection = yystack_[0].value.as< std::string > (); }
#line 5762 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 250:
#line 935 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { std::cout << std::string("Unhandled field: CONTAINING\n"); }
#line 5768 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 251:
#line 937 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< Value > ().value_selection = yystack_[0].value.as< std::string > (); }
#line 5774 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 252:
#line 939 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< Value > ().value_selection = yystack_[0].value.as< std::string > (); }
#line 5780 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 253:
#line 941 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< Value > ().value_selection = NamedNumber{yystack_[3].value.as< std::string > (), yystack_[1].value.as< long long > ()}; }
#line 5786 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 255:
#line 944 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< Value > ().value_selection = yystack_[0].value.as< long long > (); }
#line 5792 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 256:
#line 946 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< Value > ().value_selection = yystack_[0].value.as< double > (); }
#line 5798 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 257:
#line 948 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { std::cout << std::string("Unhandled field: ValueCommaListChoice\n"); }
#line 5804 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 258:
#line 950 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { std::cout << std::string("Unhandled field: ValueCommaListChoice\n"); }
#line 5810 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 259:
#line 954 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< Value > ().value_selection = yystack_[1].value.as< std::vector<Value> > (); }
#line 5816 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 260:
#line 956 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { std::cout << std::string("Unhandled field: ValueChoice\n"); }
#line 5822 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 261:
#line 958 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { std::cout << std::string("Unhandled field: OPTIONAL\n"); }
#line 5828 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 262:
#line 960 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { std::cout << std::string("Unhandled field: ValueCommaListChoice\n"); }
#line 5834 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 267:
#line 972 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< std::vector<Value> > ().push_back(yystack_[0].value.as< Value > ()); }
#line 5840 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 268:
#line 974 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< std::vector<Value> > () = yystack_[1].value.as< std::vector<Value> > (); yylhs.value.as< std::vector<Value> > ().push_back(yystack_[0].value.as< Value > ()); }
#line 5846 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 276:
#line 997 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< NamedNumber > () = NamedNumber{ yystack_[3].value.as< std::string > (), yystack_[1].value.as< long long > () }; }
#line 5852 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 277:
#line 999 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< NamedNumber > () = NamedNumber{ yystack_[3].value.as< std::string > (), 0 }; }
#line 5858 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 278:
#line 1003 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< long long > () = yystack_[0].value.as< long long > (); }
#line 5864 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 279:
#line 1005 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< long long > () = -yystack_[0].value.as< long long > (); }
#line 5870 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 280:
#line 1009 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< EnumeratedType > () = yystack_[1].value.as< EnumeratedType > (); }
#line 5876 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 281:
#line 1013 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< EnumeratedType > () = yystack_[0].value.as< EnumeratedType > ();
      yylhs.value.as< EnumeratedType > ().accept_anything = false; }
#line 5883 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 282:
#line 1016 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< EnumeratedType > () = yystack_[3].value.as< EnumeratedType > ();
      yylhs.value.as< EnumeratedType > ().accept_anything = true; }
#line 5890 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 283:
#line 1019 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< EnumeratedType > () = yystack_[5].value.as< EnumeratedType > ();
      yylhs.value.as< EnumeratedType > ().accept_anything = true;
      yylhs.value.as< EnumeratedType > ().enum_values.insert(yylhs.value.as< EnumeratedType > ().enum_values.end(), yystack_[0].value.as< EnumeratedType > ().enum_values.begin(), yystack_[0].value.as< EnumeratedType > ().enum_values.end()); }
#line 5898 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 285:
#line 1026 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< EnumeratedType > ().enum_values.push_back(yystack_[0].value.as< EnumerationValue > ()); }
#line 5904 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 286:
#line 1028 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< EnumeratedType > () = yystack_[2].value.as< EnumeratedType > (); yylhs.value.as< EnumeratedType > ().enum_values.push_back(yystack_[0].value.as< EnumerationValue > ()); }
#line 5910 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 287:
#line 1032 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< EnumerationValue > ().name  = yystack_[0].value.as< std::string > (); }
#line 5916 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 288:
#line 1034 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< EnumerationValue > ().name  = yystack_[0].value.as< NamedNumber > ().name;
      yylhs.value.as< EnumerationValue > ().value = yystack_[0].value.as< NamedNumber > ().number; }
#line 5923 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 298:
#line 1074 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< SequenceType > () = SequenceType(); }
#line 5929 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 299:
#line 1076 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< SequenceType > () = SequenceType{yystack_[1].value.as< ComponentTypeList > ()}; }
#line 5935 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 300:
#line 1084 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< ComponentTypeList > () = yystack_[0].value.as< ComponentTypeList > (); }
#line 5941 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 301:
#line 1088 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< ComponentTypeList > () = yystack_[0].value.as< ComponentTypeList > (); }
#line 5947 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 302:
#line 1090 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< ComponentTypeList > () = yystack_[2].value.as< ComponentTypeList > (); }
#line 5953 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 303:
#line 1092 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< ComponentTypeList > () = yystack_[4].value.as< ComponentTypeList > (); yylhs.value.as< ComponentTypeList > ().insert(yylhs.value.as< ComponentTypeList > ().end(), yystack_[0].value.as< ComponentTypeList > ().begin(), yystack_[0].value.as< ComponentTypeList > ().end()); }
#line 5959 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 304:
#line 1094 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< ComponentTypeList > () = yystack_[6].value.as< ComponentTypeList > (); yylhs.value.as< ComponentTypeList > ().insert(yylhs.value.as< ComponentTypeList > ().end(), yystack_[2].value.as< ComponentTypeList > ().begin(), yystack_[2].value.as< ComponentTypeList > ().end()); }
#line 5965 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 305:
#line 1096 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< ComponentTypeList > () = yystack_[0].value.as< ComponentTypeList > (); }
#line 5971 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 306:
#line 1098 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< ComponentTypeList > () = yystack_[2].value.as< ComponentTypeList > (); }
#line 5977 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 307:
#line 1100 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< ComponentTypeList > () = {}; }
#line 5983 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 308:
#line 1102 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< ComponentTypeList > () = {}; }
#line 5989 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 309:
#line 1106 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< ComponentTypeList > () = ComponentTypeList{yystack_[0].value.as< ComponentType > ()}; }
#line 5995 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 310:
#line 1108 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yystack_[2].value.as< ComponentTypeList > ().push_back(yystack_[0].value.as< ComponentType > ()); yylhs.value.as< ComponentTypeList > () = yystack_[2].value.as< ComponentTypeList > (); }
#line 6001 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 311:
#line 1112 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< ComponentType > () = ComponentType{yystack_[0].value.as< NamedType > (), false, absl::nullopt}; }
#line 6007 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 312:
#line 1114 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< ComponentType > () = ComponentType{yystack_[1].value.as< NamedType > (), true, absl::nullopt}; }
#line 6013 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 313:
#line 1116 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< ComponentType > () = ComponentType{yystack_[2].value.as< NamedType > (), false, yystack_[0].value.as< Value > ()}; }
#line 6019 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 315:
#line 1129 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< SequenceOfType > () = SequenceOfType{ false, nullptr, std::make_shared<Type>(yystack_[0].value.as< Type > ()) }; }
#line 6025 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 316:
#line 1131 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< SequenceOfType > () = SequenceOfType{ true, std::make_shared<NamedType>(yystack_[0].value.as< NamedType > ()), nullptr }; }
#line 6031 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 317:
#line 1135 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< SetType > () = SetType{}; }
#line 6037 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 318:
#line 1137 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< SetType > () = SetType{yystack_[1].value.as< ComponentTypeList > ()}; }
#line 6043 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 319:
#line 1141 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< SetOfType > () = SetOfType{ false, nullptr, std::make_shared<Type>(yystack_[0].value.as< Type > ()) }; }
#line 6049 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 320:
#line 1143 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< SetOfType > () = SetOfType{ true, std::make_shared<NamedType>(yystack_[0].value.as< NamedType > ()), nullptr }; }
#line 6055 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 321:
#line 1147 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< ChoiceType > () = ChoiceType{ yystack_[1].value.as< std::vector<NamedType> > () }; }
#line 6061 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 322:
#line 1151 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< std::vector<NamedType> > () = yystack_[0].value.as< std::vector<NamedType> > (); }
#line 6067 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 323:
#line 1155 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< std::vector<NamedType> > () = yystack_[0].value.as< std::vector<NamedType> > (); }
#line 6073 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 324:
#line 1157 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< std::vector<NamedType> > () = yystack_[2].value.as< std::vector<NamedType> > (); }
#line 6079 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 325:
#line 1161 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< std::vector<NamedType> > () = std::vector<NamedType> { yystack_[0].value.as< NamedType > () }; }
#line 6085 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 326:
#line 1163 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yystack_[2].value.as< std::vector<NamedType> > ().push_back( yystack_[0].value.as< NamedType > () ); yylhs.value.as< std::vector<NamedType> > () = yystack_[2].value.as< std::vector<NamedType> > (); }
#line 6091 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 328:
#line 1173 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< PrefixedType > () = PrefixedType(yystack_[0].value.as< TaggedType > ()); }
#line 6097 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 329:
#line 1177 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< TaggedType > () = TaggedType{ yystack_[1].value.as< Tag > (), TaggingMode::automatic, yystack_[0].value.as< Type > () }; }
#line 6103 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 330:
#line 1179 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< TaggedType > () = TaggedType{ yystack_[2].value.as< Tag > (), TaggingMode::implicit, yystack_[0].value.as< Type > () }; }
#line 6109 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 331:
#line 1181 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< TaggedType > () = TaggedType{ yystack_[2].value.as< Tag > (), TaggingMode::explicit_, yystack_[0].value.as< Type > () }; }
#line 6115 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 332:
#line 1185 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< Tag > () = Tag{ yystack_[2].value.as< Class > (), yystack_[1].value.as< int > () }; }
#line 6121 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 335:
#line 1193 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< int > () = yystack_[0].value.as< long long > (); }
#line 6127 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 337:
#line 1198 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< Class > () = Class::universal; }
#line 6133 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 338:
#line 1200 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< Class > () = Class::application; }
#line 6139 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 339:
#line 1202 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< Class > () = Class::private_; }
#line 6145 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 340:
#line 1204 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< Class > () = Class::context_specific; }
#line 6151 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 342:
#line 1217 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< std::vector<ObjectIdComponentValue> > () = yystack_[1].value.as< std::vector<ObjectIdComponentValue> > (); std::reverse(yylhs.value.as< std::vector<ObjectIdComponentValue> > ().begin(), yylhs.value.as< std::vector<ObjectIdComponentValue> > ().end()); }
#line 6157 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 343:
#line 1219 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< std::vector<ObjectIdComponentValue> > () = yystack_[1].value.as< std::vector<ObjectIdComponentValue> > (); std::reverse(yylhs.value.as< std::vector<ObjectIdComponentValue> > ().begin(), yylhs.value.as< std::vector<ObjectIdComponentValue> > ().end()); }
#line 6163 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 344:
#line 1223 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< std::vector<ObjectIdComponentValue> > ().push_back(yystack_[0].value.as< ObjectIdComponentValue > ()); }
#line 6169 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 345:
#line 1225 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< std::vector<ObjectIdComponentValue> > () = yystack_[0].value.as< std::vector<ObjectIdComponentValue> > (); yylhs.value.as< std::vector<ObjectIdComponentValue> > ().push_back(yystack_[1].value.as< ObjectIdComponentValue > ()); }
#line 6175 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 346:
#line 1229 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< ObjectIdComponentValue > () = yystack_[0].value.as< ObjectIdComponentValue > (); }
#line 6181 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 347:
#line 1231 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< ObjectIdComponentValue > () = yystack_[0].value.as< ObjectIdComponentValue > (); }
#line 6187 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 348:
#line 1233 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< ObjectIdComponentValue > () = yystack_[0].value.as< ObjectIdComponentValue > (); }
#line 6193 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 349:
#line 1237 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< ObjectIdComponentValue > ().name = yystack_[0].value.as< std::string > (); }
#line 6199 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 350:
#line 1241 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< ObjectIdComponentValue > ().value = yystack_[0].value.as< long long > (); }
#line 6205 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 352:
#line 1246 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< ObjectIdComponentValue > () = yystack_[1].value.as< ObjectIdComponentValue > (); yylhs.value.as< ObjectIdComponentValue > ().name = yystack_[3].value.as< std::string > (); }
#line 6211 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 480:
#line 1531 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< std::string > () = yystack_[0].value.as< std::string > (); }
#line 6217 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 481:
#line 1535 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< std::string > () = yystack_[0].value.as< std::string > (); }
#line 6223 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 482:
#line 1539 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< std::string > () = yystack_[0].value.as< std::string > (); }
#line 6229 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 483:
#line 1543 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< std::string > () = yystack_[0].value.as< std::string > (); }
#line 6235 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;

  case 484:
#line 1547 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:859
    { yylhs.value.as< std::string > () = yystack_[0].value.as< std::string > (); }
#line 6241 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
    break;


#line 6245 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:859
            default:
              break;
            }
        }
      catch (const syntax_error& yyexc)
        {
          error (yyexc);
          YYERROR;
        }
      YY_SYMBOL_PRINT ("-> $$ =", yylhs);
      yypop_ (yylen);
      yylen = 0;
      YY_STACK_PRINT ();

      // Shift the result of the reduction.
      yypush_ (YY_NULLPTR, yylhs);
    }
    goto yynewstate;

  /*--------------------------------------.
  | yyerrlab -- here on detecting error.  |
  `--------------------------------------*/
  yyerrlab:
    // If not already recovering from an error, report this error.
    if (!yyerrstatus_)
      {
        ++yynerrs_;
        error (yyla.location, yysyntax_error_ (yystack_[0].state, yyla));
      }


    yyerror_range[1].location = yyla.location;
    if (yyerrstatus_ == 3)
      {
        /* If just tried and failed to reuse lookahead token after an
           error, discard it.  */

        // Return failure if at end of input.
        if (yyla.type_get () == yyeof_)
          YYABORT;
        else if (!yyla.empty ())
          {
            yy_destroy_ ("Error: discarding", yyla);
            yyla.clear ();
          }
      }

    // Else will try to reuse lookahead token after shifting the error token.
    goto yyerrlab1;


  /*---------------------------------------------------.
  | yyerrorlab -- error raised explicitly by YYERROR.  |
  `---------------------------------------------------*/
  yyerrorlab:

    /* Pacify compilers like GCC when the user code never invokes
       YYERROR and the label yyerrorlab therefore never appears in user
       code.  */
    if (false)
      goto yyerrorlab;
    yyerror_range[1].location = yystack_[yylen - 1].location;
    /* Do not reclaim the symbols of the rule whose action triggered
       this YYERROR.  */
    yypop_ (yylen);
    yylen = 0;
    goto yyerrlab1;

  /*-------------------------------------------------------------.
  | yyerrlab1 -- common code for both syntax error and YYERROR.  |
  `-------------------------------------------------------------*/
  yyerrlab1:
    yyerrstatus_ = 3;   // Each real token shifted decrements this.
    {
      stack_symbol_type error_token;
      for (;;)
        {
          yyn = yypact_[yystack_[0].state];
          if (!yy_pact_value_is_default_ (yyn))
            {
              yyn += yyterror_;
              if (0 <= yyn && yyn <= yylast_ && yycheck_[yyn] == yyterror_)
                {
                  yyn = yytable_[yyn];
                  if (0 < yyn)
                    break;
                }
            }

          // Pop the current state because it cannot handle the error token.
          if (yystack_.size () == 1)
            YYABORT;

          yyerror_range[1].location = yystack_[0].location;
          yy_destroy_ ("Error: popping", yystack_[0]);
          yypop_ ();
          YY_STACK_PRINT ();
        }

      yyerror_range[2].location = yyla.location;
      YYLLOC_DEFAULT (error_token.location, yyerror_range, 2);

      // Shift the error token.
      error_token.state = yyn;
      yypush_ ("Shifting", error_token);
    }
    goto yynewstate;

    // Accept.
  yyacceptlab:
    yyresult = 0;
    goto yyreturn;

    // Abort.
  yyabortlab:
    yyresult = 1;
    goto yyreturn;

  yyreturn:
    if (!yyla.empty ())
      yy_destroy_ ("Cleanup: discarding lookahead", yyla);

    /* Do not reclaim the symbols of the rule whose action triggered
       this YYABORT or YYACCEPT.  */
    yypop_ (yylen);
    while (1 < yystack_.size ())
      {
        yy_destroy_ ("Cleanup: popping", yystack_[0]);
        yypop_ ();
      }

    return yyresult;
  }
    catch (...)
      {
        YYCDEBUG << "Exception caught: cleaning lookahead and stack"
                 << std::endl;
        // Do not try to display the values of the reclaimed symbols,
        // as their printer might throw an exception.
        if (!yyla.empty ())
          yy_destroy_ (YY_NULLPTR, yyla);

        while (1 < yystack_.size ())
          {
            yy_destroy_ (YY_NULLPTR, yystack_[0]);
            yypop_ ();
          }
        throw;
      }
  }

  void
  asn1_parser::error (const syntax_error& yyexc)
  {
    error (yyexc.location, yyexc.what());
  }

  // Generate an error message.
  std::string
  asn1_parser::yysyntax_error_ (state_type yystate, const symbol_type& yyla) const
  {
    // Number of reported tokens (one for the "unexpected", one per
    // "expected").
    size_t yycount = 0;
    // Its maximum.
    enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
    // Arguments of yyformat.
    char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];

    /* There are many possibilities here to consider:
       - If this state is a consistent state with a default action, then
         the only way this function was invoked is if the default action
         is an error action.  In that case, don't check for expected
         tokens because there are none.
       - The only way there can be no lookahead present (in yyla) is
         if this state is a consistent state with a default action.
         Thus, detecting the absence of a lookahead is sufficient to
         determine that there is no unexpected or expected token to
         report.  In that case, just report a simple "syntax error".
       - Don't assume there isn't a lookahead just because this state is
         a consistent state with a default action.  There might have
         been a previous inconsistent state, consistent state with a
         non-default action, or user semantic action that manipulated
         yyla.  (However, yyla is currently not documented for users.)
       - Of course, the expected token list depends on states to have
         correct lookahead information, and it depends on the parser not
         to perform extra reductions after fetching a lookahead from the
         scanner and before detecting a syntax error.  Thus, state
         merging (from LALR or IELR) and default reductions corrupt the
         expected token list.  However, the list is correct for
         canonical LR with one exception: it will still contain any
         token that will not be accepted due to an error action in a
         later state.
    */
    if (!yyla.empty ())
      {
        int yytoken = yyla.type_get ();
        yyarg[yycount++] = yytname_[yytoken];
        int yyn = yypact_[yystate];
        if (!yy_pact_value_is_default_ (yyn))
          {
            /* Start YYX at -YYN if negative to avoid negative indexes in
               YYCHECK.  In other words, skip the first -YYN actions for
               this state because they are default actions.  */
            int yyxbegin = yyn < 0 ? -yyn : 0;
            // Stay within bounds of both yycheck and yytname.
            int yychecklim = yylast_ - yyn + 1;
            int yyxend = yychecklim < yyntokens_ ? yychecklim : yyntokens_;
            for (int yyx = yyxbegin; yyx < yyxend; ++yyx)
              if (yycheck_[yyx + yyn] == yyx && yyx != yyterror_
                  && !yy_table_value_is_error_ (yytable_[yyx + yyn]))
                {
                  if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
                    {
                      yycount = 1;
                      break;
                    }
                  else
                    yyarg[yycount++] = yytname_[yyx];
                }
          }
      }

    char const* yyformat = YY_NULLPTR;
    switch (yycount)
      {
#define YYCASE_(N, S)                         \
        case N:                               \
          yyformat = S;                       \
        break
        YYCASE_(0, YY_("syntax error"));
        YYCASE_(1, YY_("syntax error, unexpected %s"));
        YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
        YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
        YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
        YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
#undef YYCASE_
      }

    std::string yyres;
    // Argument number.
    size_t yyi = 0;
    for (char const* yyp = yyformat; *yyp; ++yyp)
      if (yyp[0] == '%' && yyp[1] == 's' && yyi < yycount)
        {
          yyres += yytnamerr_ (yyarg[yyi++]);
          ++yyp;
        }
      else
        yyres += *yyp;
    return yyres;
  }


  const short int asn1_parser::yypact_ninf_ = -744;

  const short int asn1_parser::yytable_ninf_ = -484;

  const short int
  asn1_parser::yypact_[] =
  {
     -76,  -744,    82,   -76,    38,   -32,  -744,  -744,    94,    27,
    -744,    -6,  -744,    63,    21,  -744,  -744,   156,    27,  -744,
    -744,  -744,   186,   191,  -744,  -744,    52,   212,   220,   304,
    -744,  -744,   375,   241,   246,  -744,  -744,  -744,   324,   282,
     281,  -744,  -744,  -744,   241,   284,  -744,   393,  -744,   246,
    -744,   288,  -744,     3,  -744,   360,   292,  -744,  -744,   294,
     306,  -744,  -744,   315,  -744,   390,   200,    13,  -744,  -744,
     200,   327,  -744,   309,   200,  -744,   -22,   178,   553,   305,
    -744,  -744,  -744,  -744,  -744,  -744,  -744,  -744,    13,  -744,
    -744,  -744,   204,  1900,  -744,  -744,  -744,  -744,  -744,   -76,
    -744,   329,  -744,  2197,   317,  -744,  -744,  -744,  -744,  -744,
     105,   318,  -744,  -744,   308,  -744,  1999,   389,   337,  -744,
    2098,  -744,   321,  -744,  -744,   364,  -744,  -744,   365,   346,
    -744,  -744,  -744,   380,   348,  -744,  -744,  -744,  -744,  -744,
     386,   351,  -744,  -744,   407,  -744,   378,  -744,  -744,  -744,
    -744,  -744,   -24,   214,  -744,  -744,  -744,  -744,  -744,  -744,
    -744,  -744,  -744,   465,   173,  -744,  -744,  -744,  2494,   347,
    -744,  -744,   369,  -744,  -744,   370,    33,  -744,  -744,  -744,
    -744,  -744,  -744,  -744,  -744,  -744,  -744,  -744,  -744,  -744,
    -744,  -744,  -744,  2296,  -744,  -744,  -744,  -744,  -744,  -744,
    -744,  -744,  -744,  -744,  -744,  -744,  -744,  -744,  -744,  -744,
      11,   366,   357,   359,  -744,   -37,   384,  -744,   139,  -744,
     358,  -744,   361,   377,     6,   357,   383,   356,  -744,   371,
    -744,   377,   388,  2494,   387,    43,   372,   394,  -744,   373,
    -744,   108,   105,   373,  -744,  -744,  2494,   377,   101,  1111,
     420,   433,  2494,   195,   435,   437,   391,    17,   159,   396,
     398,  2197,  -744,   718,  -744,  2494,  2494,   377,   398,  2494,
     398,    24,    54,  -744,  -744,  -744,   218,  1801,   105,   171,
    -744,  -744,  -744,  -744,  -744,  -744,  -744,  2197,   200,    16,
    -744,  -744,   305,  1234,  -744,   377,   388,   718,  -744,   373,
    -744,   403,  -744,   392,  2494,   399,  -744,   411,   400,  -744,
     414,  -744,   198,  -744,   414,   377,  -744,  2395,  -744,   454,
     405,  -744,    15,   421,  -744,   408,  -744,  -744,  -744,  -744,
    -744,  -744,  -744,   489,   271,   508,  2494,   512,  -744,   377,
    -744,  -744,   718,   539,  -744,   326,  1357,   558,   208,   427,
     442,  -744,  -744,  -744,  -744,   377,  -744,  -744,  -744,   399,
    -744,  -744,   430,  -744,   -48,   -44,   -40,   -28,  -744,   489,
     511,  -744,   275,  -744,  2494,  -744,   447,   443,  -744,  -744,
    -744,  -744,  -744,  -744,  2494,  2494,   377,  -744,  -744,   449,
    2494,  2494,  -744,  -744,  -744,  -744,    70,   718,    47,  -744,
    -744,  -744,  -744,  -744,  -744,   434,  -744,   452,   377,  -744,
    -744,  -744,  -744,  -744,   718,  -744,   718,  -744,   441,   221,
    -744,   259,   444,   438,  -744,  -744,  -744,  -744,   448,   377,
     377,   434,   377,   434,  -744,  -744,  -744,   369,    54,  -744,
    -744,   455,    54,  -744,  -744,  -744,   459,   463,   450,  2494,
    -744,    25,  -744,    36,   148,    40,   470,   384,  -744,  -744,
     863,  -744,  -744,  -744,  -744,  -744,   453,   456,   469,   458,
    -744,   259,   243,  -744,   471,  -744,   133,   377,  1697,  -744,
    -744,   140,    32,  -744,   373,  2494,    -5,   718,  -744,  -744,
       1,  1474,  -744,   474,     8,   718,  -744,   259,  -744,   377,
     475,   477,  -744,   457,   478,   480,  -744,  -744,  1474,  -744,
    -744,  1474,  -744,   377,   612,  -744,   377,  -744,   377,  -744,
    -744,   377,  -744,   377,  -744,  -744,  -744,   479,   259,   398,
    -744,   259,   259,   680,   604,   718,   718,   718,   718,   718,
    -744,  -744,   488,  -744,  -744,    79,   466,   377,    16,  -744,
    -744,   718,  -744,  -744,  -744,    36,  -744,  -744,  -744,   513,
    -744,  -744,  -744,  -744,  -744,  -744,   495,  -744,  -744,   364,
    -744,  -744,  -744,   365,   346,  -744,  -744,  -744,  -744,   718,
    -744,  -744,  -744,  -744,  -744,   380,  -744,  -744,  -744,   348,
    -744,  -744,  -744,  -744,  -744,  -744,  -744,  -744,  -744,  -744,
    -744,   542,   386,  -744,   351,  -744,  -744,  -744,  -744,  -744,
     407,   378,  -744,  -744,  -744,  -744,  -744,  -744,  -744,  -744,
    -744,  -744,  -744,   -24,   214,  -744,  -744,  -744,  -744,  -744,
    -744,  -744,  -744,  -744,  -744,  -744,  -744,  -744,  -744,   247,
     226,  1591,  -744,   486,   987,  -744,  -744,   481,   377,   259,
    -744,   602,  1357,  -744,   505,  -744,   373,    88,  -744,  -744,
    -744,   -45,  -744,  -744,    19,   490,   399,  -744,   502,   503,
    -744,   377,  -744,   494,   259,   497,  -744,  -744,  2197,   592,
     259,  -744,  -744,   144,  -744,  -744,  -744,  -744,   238,   254,
    -744,  -744,   498,   -40,  -744,  -744,  -744,    45,  -744,  -744,
    -744,  -744,  -744,  -744,  -744,  -744,   259,   509,   259,   259,
     259,   259,   259,  -744,   510,  -744,  -744,   259,  -744,   514,
    -744,   495,   208,  -744,   491,  -744,  -744,  -744,  -744,   504,
    -744,   515,   516,   718,    18,   507,  -744,  -744,   103,     0,
     520,   499,   522,   316,   718,   524,   523,   525,   377,   521,
     527,  -744,  -744,   457,  1357,  -744,  -744,  -744,  2980,  -744,
     526,  1357,  -744,  -744,   259,   373,  -744,   529,   700,  -744,
     259,   373,  -744,   373,  -744,  -744,    44,   521,   373,   373,
    -744,  -744,  -744,  -744,  -744,  -744,  -744,  -744,  -744,  -744,
    -744,  -744,  -744,  -744,  -744,  -744,  -744,  -744,  -744,  -744,
    -744,  -744,  -744,  -744,  -744,  -744,  -744,  -744,  -744,  -744,
    2980,  -744,  2740,  -744,  -744,  -744,  2620,  -744,  -744,  -744,
     530,   211,   863,  -744,   259,   528,  -744,  -744,  -744,  -744,
    -744,  -744,   527,  -744,  2860,  -744,  -744,  -744,  -744,   373,
    -744,   259,  -744,  -744
  };

  const unsigned short int
  asn1_parser::yydefact_[] =
  {
       0,   483,     0,     2,     0,   144,     1,     3,   155,     0,
     141,   142,   143,     0,   159,   152,   481,     0,   147,   150,
     151,   149,   349,     0,   146,   154,     0,     0,     0,   161,
     145,   148,     0,     0,   358,   158,   156,   157,     0,     0,
       0,   359,   360,   356,     0,     0,   160,     0,   153,   358,
     355,   166,   357,   168,   140,   170,     0,   480,   482,     0,
     167,   180,   182,   183,   185,     0,   172,     0,   165,   164,
       0,     0,     4,     0,   171,   173,     0,     0,   484,     0,
     191,   192,    89,    90,    91,    92,    93,    94,   162,   186,
     188,   189,     0,     0,    98,   181,   184,   169,   174,     0,
      11,     0,    10,     0,   484,    13,     6,     8,    99,    14,
       0,     0,     7,   190,     0,   187,     0,   484,     0,    77,
       0,    78,     0,    62,   297,     0,   372,   269,     0,     0,
     366,   368,   369,     0,     0,   363,   222,   373,   374,   375,
       0,   272,   376,   377,     0,   228,     0,   354,   378,   289,
     353,   361,     0,     0,   380,   379,   364,   367,   381,   241,
     382,   383,   384,   334,   481,   111,    61,   227,     0,     0,
     211,   223,     0,   209,   195,   193,     0,   207,   213,   224,
     220,   231,   212,   230,   226,   234,   235,   236,   237,   215,
     210,   238,   328,     0,   229,   233,   225,   232,   219,   221,
     239,   216,   240,   217,   218,   214,   370,   371,   208,   387,
     194,     0,     0,     0,   175,   179,     0,   110,     0,   103,
       0,   107,   106,   109,   183,   185,     0,     0,   480,     0,
      12,   205,     0,     0,     0,     0,     0,   290,   385,     0,
     362,     0,     0,     0,   341,   296,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   340,     0,     0,
       0,     0,   198,     0,   386,     0,     0,   329,     0,     0,
       0,     0,     0,   176,   177,   178,    33,     0,     0,     0,
      16,    18,    19,    20,    21,    22,   102,     0,     0,     0,
     484,     9,     0,     0,    80,    95,     0,     0,    79,     0,
     325,     0,   322,   323,     0,   476,   288,     0,   281,   285,
     287,   113,     0,   274,     0,   315,   316,     0,   453,     0,
     307,   298,   311,     0,   300,   301,   309,   278,   441,   435,
     436,   437,   365,     0,   297,     0,     0,     0,   271,     0,
     443,   450,     0,     0,   270,     0,     0,     0,   438,   439,
     127,   398,   118,   119,   120,   454,   432,   440,   434,   476,
     397,   399,   400,   403,   405,     0,   407,     0,   410,     0,
     413,   421,   423,   424,     0,   425,     0,   445,   427,   428,
     426,   429,   430,   431,     0,     0,   319,   320,   317,     0,
       0,     0,   333,   338,   339,   337,     0,     0,     0,    23,
      24,    25,    26,    27,    28,   112,   202,     0,   201,   256,
     247,   248,   249,   245,     0,   261,     0,   254,   251,   252,
     257,   206,   262,   260,   243,   255,   244,   246,     0,   331,
     330,    87,   327,    88,    63,   203,   350,     0,   351,   197,
     116,     0,   344,   346,   347,   348,   349,   196,     0,     0,
      31,    44,    30,    39,    35,    48,    50,     0,   104,   105,
       0,    64,   100,    65,    66,    67,     0,    84,     0,    82,
     101,    97,     0,   292,     0,   321,     0,   242,     0,   284,
     280,     0,     0,   273,     0,     0,     0,     0,   312,   299,
       0,     0,   406,     0,   137,     0,   455,   473,   474,     0,
       0,     0,   279,     0,     0,     0,   418,   417,     0,   420,
     419,     0,   414,   442,     0,   446,   390,   394,   391,   395,
     318,   388,   392,   389,   393,   335,   336,     0,    96,     0,
     200,   250,   267,     0,     0,     0,     0,     0,     0,     0,
     199,   351,     0,   342,   345,     0,     0,    32,     0,    42,
      41,     0,    37,    40,    34,    39,    47,    46,    45,     0,
      15,    17,   486,   487,   488,   489,   245,   491,   492,   493,
     372,   269,   496,   497,   498,   499,   500,   501,   502,   503,
     366,   368,   506,   507,   369,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   363,   271,   520,   521,   522,   523,
     524,     0,   526,   527,   272,   529,   530,   531,   532,   533,
     534,   535,   536,   354,   261,   539,   540,   541,   542,   543,
     289,   353,   361,   547,   548,   549,   550,   551,   552,   553,
     364,   367,   270,   557,   558,   559,   560,   561,    60,   251,
     252,     0,    73,     0,     0,    71,    74,   227,    75,    76,
      59,     0,     0,    81,     0,   291,     0,     0,   324,   326,
     478,     0,   477,   475,   196,     0,   476,   286,     0,     0,
     275,   314,   308,   305,   313,   302,   310,   416,   126,     0,
     138,   458,   456,     0,   457,   459,   460,   422,     0,     0,
     129,   396,   401,   408,   411,   433,   452,     0,   438,   439,
     451,   444,   447,   332,    29,   259,   268,     0,   263,   258,
     265,   264,   266,   343,     0,   204,    43,    38,    36,     0,
     525,   245,   251,    69,     0,    70,    72,    85,   404,    83,
     293,     0,     0,     0,     0,   282,   277,   276,     0,     0,
     110,     0,     0,   109,     0,     0,     0,   463,   468,   134,
     131,   135,   128,     0,     0,   448,   253,   352,     0,    49,
       0,     0,   294,   295,   479,     0,   306,   303,     0,   121,
     139,     0,   461,     0,   467,   465,   472,   134,     0,     0,
     130,   402,   490,   493,   494,   495,   497,   498,   503,   504,
     505,   508,   509,   513,   518,   519,   526,   528,   534,   535,
     537,   538,   544,   545,   546,   547,   548,   554,   555,   556,
       0,   485,     0,    51,    54,    53,     0,    57,    68,    86,
     283,     0,     0,   123,   122,     0,   464,   470,   471,   469,
     466,   133,   132,   136,     0,     5,    52,    56,    58,     0,
     304,    76,   462,    55
  };

  const short int
  asn1_parser::yypgoto_[] =
  {
    -744,   645,  -744,  -744,  -102,  -744,  -744,  -744,   550,  -744,
    -744,   210,  -274,   158,  -744,  -744,  -744,  -744,   115,  -744,
    -744,  -744,  -744,  -744,  -744,  -132,  -743,  -744,  -744,  -744,
    -449,  -279,  -744,  -526,  -744,  -744,  -744,  -744,  -744,    37,
      30,  -744,  -744,   601,  -179,  -744,   -75,  -744,  -744,  -744,
    -744,  -744,   355,  -744,  -744,  -744,   404,  -744,     5,  -744,
    -744,  -744,  -744,  -744,  -744,  -744,  -744,  -744,  -744,   -59,
     -82,   -81,  -744,  -744,  -744,  -744,  -744,  -744,   684,  -744,
     666,  -744,  -744,  -744,  -744,  -744,  -744,  -744,  -744,  -744,
    -744,   629,  -744,  -744,   654,   639,   -77,  -744,   623,  -744,
    -270,  -744,  -744,   276,  -744,  -744,  -744,  -744,  -744,   -88,
    -744,  -187,    22,  -744,  -744,  -744,  -744,  -174,  -744,  -744,
    -214,  -207,  -744,  -744,   -51,  -469,  -744,  -744,  -744,    59,
    -744,  -744,  -744,   464,  -744,  -462,  -465,  -744,  -744,  -744,
    -744,  -744,  -744,  -744,  -744,  -744,  -744,  -744,  -744,  -744,
    -744,  -744,  -744,   -25,  -744,   302,   182,  -744,  -744,  -744,
     705,  -744,   669,   687,  -744,  -744,  -744,  -744,  -156,  -744,
    -744,  -744,  -744,  -744,  -744,  -744,  -744,  -744,  -139,  -744,
    -744,  -744,   440,  -493,  -192,  -744,  -744,   227,  -744,   225,
    -744,   374,  -744,  -744,   248,  -744,  -484,  -744,  -744,  -744,
    -744,  -744,  -744,    41,  -136,  -744,  -744,  -744,  -744,  -744,
    -744,  -744,  -355,  -744,  -744,  -744,  -744,  -744,  -744,  -338,
    -744,   117,    -9,   -47,     4,   -21,  -744
  };

  const short int
  asn1_parser::yydefgoto_[] =
  {
      -1,     2,     3,   759,   105,   106,   107,    79,   108,   109,
     279,   280,   404,   405,   281,   452,   555,   282,   553,   283,
     284,   550,   285,   558,   560,   812,   813,   814,   815,   816,
     817,   165,   166,   462,   463,   464,   643,   465,   644,   645,
     646,   118,   119,    80,   294,   468,   167,    81,    82,    83,
      84,    85,   110,    86,    87,   218,   219,   220,   221,   169,
     170,   171,   172,   437,   351,   352,   742,   353,   689,   690,
     778,   750,   354,    65,     4,    10,    11,    12,    17,    18,
      19,    20,    14,    29,    39,    54,    55,    59,    67,    73,
      74,    75,   214,   273,    76,    61,    62,    88,    89,   173,
     541,   174,   439,   262,   407,   175,   440,    90,    91,   355,
     177,   322,   649,   422,   423,   533,   178,   424,   179,   312,
     306,   425,   180,   307,   308,   309,   181,   182,   472,   473,
     183,   184,   185,   323,   324,   325,   326,   186,   187,   188,
     189,   301,   302,   303,   190,   191,   192,   193,   257,   527,
     396,   194,   274,   441,   442,   443,   444,   445,   195,   196,
     426,    34,    45,    43,   197,   198,   199,   200,   427,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   264,   359,
     360,   361,   362,   727,   728,   364,   365,   366,   367,   368,
     369,   492,   508,   511,   370,   371,   372,   373,   374,   375,
     376,   701,   377,   702,   378,   379,   380,   381,   682,   684,
     685,   686,   746,   747,   775,   776,   830,   382,   383,   479,
     663,   210,   211,   212,   259,   112,   650
  };

  const short int
  asn1_parser::yytable_[] =
  {
      22,   217,   438,   453,     5,   176,    64,     5,   226,    22,
     461,   642,   667,   250,   254,   223,   251,   255,   234,    64,
      93,   504,   716,    64,   673,   676,   222,    64,   231,   313,
     700,    15,   235,    56,    77,  -412,   327,   123,   319,   434,
      99,    93,   357,   319,   319,   434,    94,   509,   393,   327,
     328,   329,   300,   330,    26,   331,   225,   363,   436,   316,
     679,   246,  -409,   487,   332,   387,   506,    94,   434,   836,
     350,     1,   827,   548,   525,   356,   247,   695,    27,   249,
     258,   111,     6,   436,   551,   272,   357,     8,   556,    28,
       9,   836,   731,   358,   733,  -409,   122,   213,   248,   507,
     249,   363,   488,   215,  -412,   267,   338,   213,   318,    13,
     394,    58,   549,    70,   111,   672,   510,   470,   229,   356,
     213,   675,   696,   552,   213,    23,   526,   557,    71,   395,
    -194,   828,   249,  -115,   100,   829,    25,   358,   460,   357,
     311,  -117,   268,    16,   319,   295,   319,   268,    16,    16,
      57,    58,   263,   344,   501,   270,    35,   249,   315,   406,
      78,    58,   297,     1,   386,    57,    58,   249,   275,   347,
      63,    78,   356,   408,   451,    16,   455,   429,   430,     1,
      58,   432,   347,    63,    92,   217,   641,    63,   420,   454,
     358,    63,   698,   699,    57,   642,   114,   517,   519,   223,
     496,     1,   164,   522,   524,    92,   291,   100,   660,   121,
     222,   459,   668,   700,   102,   291,   477,     1,    58,   101,
     224,   320,   420,   766,   321,   447,     1,    58,   305,   477,
     304,   121,   310,   100,   314,     1,    58,   317,   319,   304,
     225,    64,   823,   317,   304,   101,   111,   100,   494,    16,
     291,    16,   104,   658,   319,   704,    16,    41,    42,   554,
     666,   781,   286,   446,   745,   213,   449,   420,   819,   461,
     670,   662,   249,   676,   287,   669,   448,   767,   397,    30,
     111,    16,   111,   249,   357,   421,   513,   102,    16,   659,
     474,   213,    16,   466,   456,  -482,   516,   518,  -482,   252,
     103,   357,   521,   523,   357,   450,   457,   357,  -482,  -482,
      32,    21,  -482,   102,   247,   320,    36,   356,   388,   471,
      21,   483,   420,   116,    37,   104,   103,   102,   735,    33,
    -480,   840,  -480,   484,   356,   358,   253,   356,   249,   420,
     356,   420,  -163,    16,  -480,   534,    53,    57,    58,   447,
     534,   117,   358,   298,  -481,   358,   676,  -482,   358,    16,
     681,   547,  -482,    38,   497,   104,   655,   838,   499,   500,
     667,  -480,   648,   642,   749,   317,   317,   752,   656,    15,
     428,   317,   317,  -480,    44,   647,    16,   732,   435,   753,
     661,   447,  -433,    46,   535,   447,  -449,   671,   536,  -433,
     448,    47,   537,  -449,   224,    63,    48,   276,   277,   298,
    -480,   278,   420,   542,   428,    50,   825,   544,   826,   528,
     420,   399,   400,   401,   402,   403,   431,    51,   433,   446,
      66,   664,    68,   446,    69,   447,   531,    71,   532,  -124,
     249,    70,   448,  -480,    72,   357,   448,   120,   168,    97,
      96,   216,    57,  -483,   227,   228,   232,   236,   420,   428,
     420,   420,   420,   420,   420,   237,   238,   304,   239,   240,
     241,   242,   310,   243,   244,   314,   420,   304,   356,   245,
     256,   304,   665,   260,   250,   254,   448,   251,   255,   461,
     357,   261,  -114,   270,   269,   271,   358,   288,   447,   715,
    -108,   249,   289,   290,   420,   384,   296,   292,  -480,   674,
     293,  -480,  -480,  -480,   428,   435,   299,   680,   385,    78,
     390,    16,   391,   356,  -480,  -480,   475,   476,  -480,   478,
     392,   428,   398,   428,   480,   481,  -480,  -480,   482,   485,
     486,   358,   837,   490,   489,   491,   493,   357,   641,   448,
     495,   498,   466,   648,   357,   706,   648,   708,   709,   710,
     711,   712,   502,  -482,   503,   505,   647,  -415,   514,   647,
     529,   515,   520,   717,  -480,   530,   740,  -480,   543,   538,
     356,   539,  -480,   545,   268,  -117,   546,   356,   559,   651,
     743,   652,   653,   654,  -480,   657,   678,   683,   358,   688,
     692,   531,   687,   691,   428,   358,   703,  -480,   707,   774,
     447,   713,   428,   720,    58,   719,   327,   328,   329,  -297,
     330,   724,   331,   434,  -257,   729,   734,   736,   737,   738,
     744,   332,   739,   754,   756,   757,   758,   760,   768,   761,
     762,   763,   765,  -125,   695,   769,   772,   474,     7,   818,
     428,   842,   428,   428,   428,   428,   428,   777,   420,   771,
     773,   448,  -480,   779,   821,   839,   230,   561,   428,   420,
     718,   723,  -480,   338,   748,  -480,  -480,  -480,   834,   751,
     113,   726,   213,   741,   327,   409,   410,   715,   411,   696,
     412,   458,  -480,   420,   780,   831,   428,   832,    40,   332,
    -480,  -480,    31,    98,   327,   409,   410,    60,   411,    95,
     412,   115,   413,   540,   820,   730,    24,   389,    52,   332,
     344,   123,   327,   409,   410,   414,   411,   714,   412,   304,
     304,    49,   413,   469,   648,   693,   694,   332,   755,   677,
     697,   338,     0,   512,     0,   414,     0,   647,     0,   347,
     413,     0,     0,     0,     0,   764,   310,     0,     0,   698,
     699,   338,   748,   414,   748,     0,   770,   415,     0,   751,
     833,     0,   466,     0,     0,     0,     0,     0,     0,   338,
       0,     0,     0,     0,     0,     0,     0,   415,   344,     0,
     824,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   416,   705,     0,   415,     0,     0,   344,     0,
       0,    23,   304,     0,     0,     0,     0,   347,     0,   417,
       0,     0,   822,     0,     0,     0,   344,   418,   419,     0,
     310,    23,     0,     0,     0,     0,     0,   347,     0,   417,
     416,     0,     0,     0,   841,     0,     0,   722,   419,    23,
     428,   435,     0,     0,     0,   347,     0,   417,     0,     0,
       0,   428,     0,     0,     0,   418,   419,   327,   409,   410,
       0,   411,     0,   412,     0,     0,     0,     0,     0,     0,
       0,     0,   332,     0,   123,   428,   399,   400,   401,   402,
     403,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   136,   137,   138,   139,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   142,
     606,   607,   608,   609,   143,   610,   145,   611,   612,   613,
     614,   615,   616,   617,   618,   148,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   154,   629,   155,   630,
     631,   632,   633,   634,   635,   636,   158,   159,   160,   161,
     162,   637,     0,     0,     0,   416,     0,     0,     0,   163,
       0,   327,   409,   410,    23,   411,     0,   412,   638,     0,
     347,     0,   417,     0,     0,     0,   332,     0,   123,     0,
     639,   640,     0,     0,     0,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     136,   137,   138,   139,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   142,   606,   607,   608,   609,   143,   610,
     145,   611,   612,   613,   614,   615,   616,   617,   618,   148,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     154,   629,   155,   630,   631,   632,   633,   634,   635,   636,
     158,   159,   160,   161,   162,   637,     0,     0,     0,   416,
     725,     0,     0,   163,     0,   327,   328,   329,    23,   330,
       0,   331,   638,     0,   347,     0,   417,     0,     0,     0,
     332,     0,   123,     0,   639,   640,     0,     0,     0,     0,
       0,   333,     0,   334,     0,     0,   125,   126,   127,     0,
     128,   129,     0,     0,     0,   335,   336,   130,   131,     0,
       0,   132,   133,   337,     0,     0,   134,     0,     0,     0,
       0,   135,   338,   339,   136,   137,   138,   139,     0,     0,
       0,     0,   340,   140,     0,   141,     0,   142,     0,   341,
       0,     0,   143,   144,   145,   146,     0,   147,     0,   342,
       0,     0,     0,   148,     0,   149,   150,   151,   152,   153,
     343,   247,     0,     0,   154,     0,   155,   156,   157,   344,
       0,     0,     0,     0,   158,   159,   160,   161,   162,   345,
       0,     0,     0,   293,     0,   346,     0,   163,   327,   328,
     329,     0,   330,     0,   331,     0,     0,     0,   347,     0,
       0,     0,     0,   332,     0,   123,     0,     0,   348,   349,
       0,     0,     0,     0,   333,     0,   334,     0,     0,   125,
     126,   127,     0,   128,   129,     0,     0,     0,     0,     0,
     130,   131,     0,     0,   132,   133,     0,     0,     0,   134,
       0,     0,     0,     0,   135,   338,   339,   136,   137,   138,
     139,     0,     0,     0,     0,   340,   140,     0,   141,     0,
     142,     0,   341,     0,     0,   143,   144,   145,   146,     0,
     147,     0,   342,     0,     0,     0,   148,     0,   149,   150,
     151,   152,   153,   343,   247,     0,     0,   154,     0,   155,
     156,   157,   344,     0,     0,     0,     0,   158,   159,   160,
     161,   162,   345,     0,   467,     0,     0,     0,   346,     0,
     163,   327,   328,   329,     0,   330,     0,   331,     0,     0,
       0,   347,     0,     0,     0,     0,   332,     0,   123,     0,
       0,   348,   349,     0,     0,     0,     0,   333,     0,   334,
       0,     0,   125,   126,   127,     0,   128,   129,     0,     0,
       0,     0,     0,   130,   131,     0,     0,   132,   133,     0,
       0,     0,   134,     0,     0,     0,     0,   135,   338,   339,
     136,   137,   138,   139,     0,     0,     0,     0,   340,   140,
       0,   141,     0,   142,     0,   341,     0,     0,   143,   144,
     145,   146,     0,   147,     0,   342,     0,     0,     0,   148,
       0,   149,   150,   151,   152,   153,   343,   247,     0,     0,
     154,     0,   155,   156,   157,   344,     0,     0,     0,     0,
     158,   159,   160,   161,   162,   345,     0,     0,   327,   328,
     329,   346,   330,   163,   331,     0,     0,     0,     0,     0,
       0,     0,     0,   332,   347,   123,     0,     0,     0,     0,
       0,     0,     0,     0,   348,   349,   334,     0,     0,   125,
     126,   127,     0,   128,   129,     0,     0,     0,     0,     0,
     130,   131,     0,     0,   132,   133,     0,     0,     0,   134,
       0,     0,     0,     0,   135,   338,   339,   136,   137,   138,
     139,     0,     0,     0,     0,   340,   140,     0,   141,     0,
     142,     0,   341,     0,     0,   143,   144,   145,   146,     0,
     147,     0,   342,     0,     0,     0,   148,     0,   149,   150,
     151,   152,   153,   343,   247,     0,     0,   154,     0,   155,
     156,   157,   344,     0,     0,     0,     0,   158,   159,   160,
     161,   162,   345,     0,     0,   327,   409,   410,   346,   411,
     163,   412,     0,     0,     0,     0,     0,     0,     0,     0,
     332,   347,   123,     0,     0,     0,     0,     0,     0,     0,
       0,   348,   349,   721,     0,     0,   125,   126,   127,     0,
     128,   129,     0,     0,     0,     0,   414,   130,   131,     0,
       0,   132,   133,     0,     0,     0,   134,     0,     0,     0,
       0,   135,   338,     0,   136,   137,   138,   139,     0,     0,
       0,     0,     0,   140,     0,   141,     0,   142,     0,     0,
       0,     0,   143,   144,   145,   146,     0,   147,   415,     0,
       0,     0,     0,   148,     0,   149,   150,   151,   152,   153,
       0,     0,     0,     0,   154,     0,   155,   156,   157,   344,
       0,   327,     0,     0,   158,   159,   160,   161,   162,     0,
       0,     0,     0,   416,     0,     0,     0,   163,   123,     0,
       0,     0,    23,     0,     0,     0,     0,     0,   347,   124,
     417,     0,   125,   126,   127,     0,   128,   129,   722,   640,
       0,     0,     0,   130,   131,     0,     0,   132,   133,     0,
       0,     0,   134,     0,     0,     0,     0,   135,     0,     0,
     136,   137,   138,   139,     0,     0,     0,     0,     0,   140,
       0,   141,     0,   142,     0,     0,     0,     0,   143,   144,
     145,   146,     0,   147,     0,     0,     0,     0,     0,   148,
       0,   149,   150,   151,   152,   153,     0,     0,     0,     0,
     154,     0,   155,   156,   157,     0,     0,     0,     0,     0,
     158,   159,   160,   161,   162,     0,     0,     0,     0,     0,
       0,     0,   123,   163,   399,   400,   401,   402,   403,     0,
       0,     0,     0,   124,   347,     0,   125,   126,   127,     0,
     128,   129,     0,     0,   228,   164,     0,   130,   131,     0,
       0,   132,   133,     0,     0,     0,   134,     0,     0,     0,
       0,   135,     0,     0,   136,   137,   138,   139,     0,     0,
       0,     0,     0,   140,     0,   141,     0,   142,     0,     0,
       0,     0,   143,   144,   145,   146,     0,   147,     0,     0,
       0,     0,     0,   148,     0,   149,   150,   151,   152,   153,
       0,     0,     0,     0,   154,     0,   155,   156,   157,     0,
       0,     0,     0,     0,   158,   159,   160,   161,   162,     0,
       0,   123,     0,     0,     0,     0,     0,   163,     0,   100,
       0,     0,   124,     0,     0,   125,   126,   127,     0,   128,
     129,   101,     0,     0,     0,     0,   130,   131,   228,   164,
     132,   133,     0,     0,     0,   134,     0,     0,     0,     0,
     135,     0,     0,   136,   137,   138,   139,     0,     0,     0,
       0,     0,   140,     0,   141,     0,   142,     0,     0,     0,
       0,   143,   144,   145,   146,     0,   147,     0,     0,     0,
       0,     0,   148,     0,   149,   150,   151,   152,   153,     0,
       0,     0,     0,   154,     0,   155,   156,   157,     0,   102,
       0,     0,     0,   158,   159,   160,   161,   162,     0,     0,
     123,     0,   103,     0,     0,     0,   163,     0,   100,     0,
       0,   124,     0,     0,   125,   126,   127,     0,   128,   129,
     101,     0,     0,     0,     0,   130,   131,   117,   164,   132,
     133,     0,     0,     0,   134,     0,     0,     0,     0,   135,
       0,     0,   136,   137,   138,   139,     0,     0,     0,     0,
       0,   140,     0,   141,     0,   142,     0,     0,     0,     0,
     143,   144,   145,   146,     0,   147,     0,     0,     0,     0,
       0,   148,     0,   149,   150,   151,   152,   153,     0,     0,
       0,     0,   154,     0,   155,   156,   157,     0,   102,     0,
       0,     0,   158,   159,   160,   161,   162,     0,     0,   123,
       0,     0,     0,     0,     0,   163,     0,   100,     0,     0,
     124,     0,     0,   125,   126,   127,     0,   128,   129,     0,
       0,     0,     0,     0,   130,   131,   117,   164,   132,   133,
       0,     0,     0,   134,     0,     0,     0,     0,   135,     0,
       0,   136,   137,   138,   139,     0,     0,     0,     0,     0,
     140,     0,   141,     0,   142,     0,     0,     0,     0,   143,
     144,   145,   146,     0,   147,     0,     0,     0,     0,     0,
     148,     0,   149,   150,   151,   152,   153,     0,     0,     0,
       0,   154,     0,   155,   156,   157,     0,   102,     0,     0,
       0,   158,   159,   160,   161,   162,     0,   233,   123,     0,
       0,     0,     0,     0,   163,     0,   100,     0,     0,   124,
       0,     0,   125,   126,   127,     0,   128,   129,     0,     0,
       0,     0,     0,   130,   131,   117,   164,   132,   133,     0,
       0,     0,   134,     0,     0,     0,     0,   135,     0,     0,
     136,   137,   138,   139,     0,     0,     0,     0,     0,   140,
       0,   141,     0,   142,     0,     0,     0,     0,   143,   144,
     145,   146,     0,   147,     0,     0,     0,     0,     0,   148,
       0,   149,   150,   151,   152,   153,     0,     0,     0,     0,
     154,     0,   155,   156,   157,     0,   102,     0,     0,     0,
     158,   159,   160,   161,   162,     0,     0,   123,     0,     0,
       0,     0,     0,   163,     0,     0,     0,     0,   124,     0,
       0,   125,   126,   127,     0,   128,   129,     0,     0,     0,
       0,     0,   130,   131,   117,   164,   132,   133,     0,     0,
       0,   134,     0,   265,     0,     0,   135,     0,     0,   136,
     137,   138,   139,     0,   266,     0,     0,     0,   140,     0,
     141,     0,   142,     0,     0,     0,     0,   143,   144,   145,
     146,     0,   147,     0,     0,     0,     0,     0,   148,     0,
     149,   150,   151,   152,   153,     0,     0,     0,     0,   154,
       0,   155,   156,   157,     0,     0,     0,     0,     0,   158,
     159,   160,   161,   162,     0,     0,   123,     0,     0,     0,
       0,     0,   163,     0,     0,     0,     0,   124,     0,     0,
     125,   126,   127,     0,   128,   129,     0,     0,     0,     0,
       0,   130,   131,   228,   164,   132,   133,     0,     0,     0,
     134,     0,     0,     0,     0,   135,     0,     0,   136,   137,
     138,   139,     0,     0,     0,     0,     0,   140,     0,   141,
       0,   142,     0,     0,     0,     0,   143,   144,   145,   146,
       0,   147,     0,     0,     0,     0,     0,   148,     0,   149,
     150,   151,   152,   153,     0,     0,     0,     0,   154,     0,
     155,   156,   157,     0,     0,     0,     0,     0,   158,   159,
     160,   161,   162,     0,     0,   123,     0,     0,     0,     0,
       0,   163,     0,   269,     0,     0,   124,     0,     0,   125,
     126,   127,     0,   128,   129,     0,     0,     0,     0,     0,
     130,   131,   228,   164,   132,   133,     0,     0,     0,   134,
       0,     0,     0,     0,   135,     0,     0,   136,   137,   138,
     139,     0,     0,     0,     0,     0,   140,     0,   141,     0,
     142,     0,     0,     0,     0,   143,   144,   145,   146,     0,
     147,     0,     0,     0,     0,     0,   148,     0,   149,   150,
     151,   152,   153,     0,     0,     0,     0,   154,     0,   155,
     156,   157,     0,     0,     0,     0,     0,   158,   159,   160,
     161,   162,     0,     0,     0,     0,     0,     0,     0,     0,
     163,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   228,   164,   399,   400,   401,   402,   403,   562,   563,
     564,   565,   782,   567,   568,   783,   784,   785,   572,   786,
     787,   575,   576,   577,   578,   788,   789,   790,   582,   583,
     791,   792,   586,   587,   588,   793,   590,   591,   592,   593,
     794,   795,   596,     0,     0,     0,     0,   597,   598,   599,
     600,   601,   796,   603,   797,   605,     0,   606,   607,   608,
     609,     0,   798,     0,   799,   612,   800,   801,   615,   616,
     617,   618,     0,   619,   802,   803,   804,   805,   806,   625,
     626,   627,   628,     0,   629,     0,   807,   808,   809,   633,
     634,   635,   636,     0,     0,     0,     0,     0,   637,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   638,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   811,   562,   563,
     564,   565,   782,   567,   568,   783,   784,   785,   572,   786,
     787,   575,   576,   577,   578,   788,   789,   790,   582,   583,
     791,   792,   586,   587,   588,   793,   590,   591,   592,   593,
     794,   795,   596,     0,     0,     0,     0,   597,   598,   599,
     600,   601,   796,   603,   797,   605,     0,   606,   607,   608,
     609,     0,   798,     0,   799,   612,   800,   801,   615,   616,
     617,   618,     0,   619,   802,   803,   804,   805,   806,   625,
     626,   627,   628,     0,   629,     0,   807,   808,   809,   633,
     634,   635,   636,     0,     0,     0,     0,     0,   637,     0,
       0,     0,     0,   835,     0,     0,   810,     0,     0,     0,
       0,     0,     0,     0,     0,   638,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   811,   562,   563,
     564,   565,   782,   567,   568,   783,   784,   785,   572,   786,
     787,   575,   576,   577,   578,   788,   789,   790,   582,   583,
     791,   792,   586,   587,   588,   793,   590,   591,   592,   593,
     794,   795,   596,     0,     0,     0,     0,   597,   598,   599,
     600,   601,   796,   603,   797,   605,     0,   606,   607,   608,
     609,     0,   798,     0,   799,   612,   800,   801,   615,   616,
     617,   618,     0,   619,   802,   803,   804,   805,   806,   625,
     626,   627,   628,     0,   629,     0,   807,   808,   809,   633,
     634,   635,   636,     0,     0,     0,     0,     0,   637,     0,
       0,     0,     0,     0,     0,     0,   810,   843,     0,     0,
       0,     0,     0,     0,     0,   638,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   811,   562,   563,
     564,   565,   782,   567,   568,   783,   784,   785,   572,   786,
     787,   575,   576,   577,   578,   788,   789,   790,   582,   583,
     791,   792,   586,   587,   588,   793,   590,   591,   592,   593,
     794,   795,   596,     0,     0,     0,     0,   597,   598,   599,
     600,   601,   796,   603,   797,   605,     0,   606,   607,   608,
     609,     0,   798,     0,   799,   612,   800,   801,   615,   616,
     617,   618,     0,   619,   802,   803,   804,   805,   806,   625,
     626,   627,   628,     0,   629,     0,   807,   808,   809,   633,
     634,   635,   636,     0,     0,     0,     0,     0,   637,     0,
       0,     0,     0,     0,     0,     0,   810,     0,     0,     0,
       0,     0,     0,     0,     0,   638,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   811
  };

  const short int
  asn1_parser::yycheck_[] =
  {
       9,   103,   272,   277,     0,    93,    53,     3,   110,    18,
     289,   460,   481,   152,   153,   103,   152,   153,   120,    66,
      67,   359,   548,    70,   486,   490,   103,    74,   116,   243,
     514,     4,   120,    30,    21,    75,     4,    21,    43,    21,
      62,    88,   249,    43,    43,    21,    67,    75,    31,     4,
       5,     6,   239,     8,    33,    10,   103,   249,     4,   246,
      52,    85,   110,    48,    19,   252,   110,    88,    21,   812,
     249,   147,    28,    48,     4,   249,   100,    32,    57,   124,
     168,    77,     0,     4,    48,   122,   293,    49,    48,    68,
     122,   834,     4,   249,   139,   143,    92,    93,   122,   143,
     124,   293,    87,    99,   144,   193,    61,   103,   247,    15,
      93,   148,    87,   135,   110,   120,   144,   296,   114,   293,
     116,   120,    77,    87,   120,   131,   396,    87,   122,   112,
     124,    87,   124,   122,    29,    91,    73,   293,   122,   346,
     242,   122,   136,   148,    43,   233,    43,   136,   148,   148,
     147,   148,   119,   108,   346,   136,   104,   124,   246,   261,
     147,   148,   119,   147,   252,   147,   148,   124,   215,   137,
      53,   147,   346,   261,   276,   148,   278,   265,   266,   147,
     148,   269,   137,    66,    67,   287,   460,    70,   263,   277,
     346,    74,   147,   148,   147,   644,    79,   384,   385,   287,
     339,   147,   148,   390,   391,    88,   227,    29,   478,    92,
     287,   288,   482,   697,   109,   236,   304,   147,   148,    41,
     103,   120,   297,   120,   123,   272,   147,   148,   120,   317,
     239,   114,   241,    29,   243,   147,   148,   246,    43,   248,
     287,   288,   768,   252,   253,    41,   242,    29,   336,   148,
     271,   148,   147,   120,    43,   529,   148,    16,    17,   111,
     120,   754,   123,   272,   120,   261,    48,   342,   761,   548,
     484,   478,   124,   738,   135,   482,   272,   739,   119,   123,
     276,   148,   278,   124,   491,   263,   374,   109,   148,   476,
     299,   287,   148,   289,   123,   122,   384,   385,   125,    85,
     122,   508,   390,   391,   511,    87,   135,   514,   135,   136,
     124,     9,   139,   109,   100,   120,   104,   491,   123,   297,
      18,   123,   397,   119,   104,   147,   122,   109,   666,   138,
     122,   120,   124,   135,   508,   491,   122,   511,   124,   414,
     514,   416,    54,   148,   136,   124,    58,   147,   148,   396,
     124,   147,   508,   236,   128,   511,   821,   136,   514,   148,
     499,   449,   136,    59,   342,   147,   123,   816,    42,    43,
     839,   124,   460,   822,   136,   384,   385,   123,   135,     4,
     263,   390,   391,   136,   138,   460,   148,   657,   271,   135,
     478,   438,   121,    69,   135,   442,   121,   485,   139,   128,
     396,   119,   143,   128,   287,   288,   125,    23,    24,   292,
      21,    27,   487,   438,   297,   131,   771,   442,   773,   397,
     495,    23,    24,    25,    26,    27,   268,    34,   270,   438,
      70,   478,   140,   442,   140,   482,   414,   122,   416,   123,
     124,   135,   438,    54,    54,   652,   442,    92,    93,   140,
     123,   122,   147,   136,   136,   147,   119,   136,   533,   342,
     535,   536,   537,   538,   539,   101,   101,   476,   122,    89,
     122,    85,   481,   122,    67,   484,   551,   486,   652,   101,
      15,   490,   478,   136,   623,   624,   482,   623,   624,   768,
     697,   122,   122,   136,   128,   136,   652,   139,   545,   546,
     139,   124,   119,   147,   579,    85,   119,   136,   119,   487,
     122,   122,   123,   124,   397,   398,   122,   495,    85,   147,
      85,   148,    85,   697,   135,   136,   123,   135,   139,   130,
     139,   414,   136,   416,   123,   135,   147,   148,   124,    85,
     135,   697,   816,   135,   123,    56,    38,   754,   822,   545,
      38,    12,   548,   641,   761,   533,   644,   535,   536,   537,
     538,   539,     4,   136,   122,   135,   641,    56,   121,   644,
     136,   128,   123,   551,    21,   123,   678,   136,   123,   135,
     754,   143,    29,   124,   136,   122,   136,   761,   118,   136,
     678,   135,   123,   135,    41,   124,   122,   122,   754,   142,
     120,   579,   125,   125,   487,   761,   127,    54,     4,   748,
     657,   123,   495,    71,   148,   102,     4,     5,     6,   124,
       8,   135,    10,    21,   143,   120,   136,   125,   125,   135,
      38,    19,   135,   135,   125,   125,   122,   146,   139,   135,
     125,   125,   135,   123,    32,   123,   123,   656,     3,   123,
     533,   123,   535,   536,   537,   538,   539,   136,   733,   135,
     135,   657,   109,   136,   135,   135,   116,   457,   551,   744,
     555,   641,   119,    61,   683,   122,   123,   124,   810,   688,
      79,   644,   678,   678,     4,     5,     6,   734,     8,    77,
      10,   287,   139,   768,   753,   777,   579,   778,    32,    19,
     147,   148,    18,    74,     4,     5,     6,    53,     8,    70,
      10,    88,    32,   437,   765,   656,    11,   253,    49,    19,
     108,    21,     4,     5,     6,    45,     8,   545,    10,   738,
     739,    44,    32,   293,   822,   508,   511,    19,   697,   491,
     128,    61,    -1,   369,    -1,    45,    -1,   822,    -1,   137,
      32,    -1,    -1,    -1,    -1,   733,   765,    -1,    -1,   147,
     148,    61,   771,    45,   773,    -1,   744,    87,    -1,   778,
     779,    -1,   768,    -1,    -1,    -1,    -1,    -1,    -1,    61,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    87,   108,    -1,
     768,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   122,   123,    -1,    87,    -1,    -1,   108,    -1,
      -1,   131,   821,    -1,    -1,    -1,    -1,   137,    -1,   139,
      -1,    -1,   122,    -1,    -1,    -1,   108,   147,   148,    -1,
     839,   131,    -1,    -1,    -1,    -1,    -1,   137,    -1,   139,
     122,    -1,    -1,    -1,   822,    -1,    -1,   147,   148,   131,
     733,   734,    -1,    -1,    -1,   137,    -1,   139,    -1,    -1,
      -1,   744,    -1,    -1,    -1,   147,   148,     4,     5,     6,
      -1,     8,    -1,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    -1,    21,   768,    23,    24,    25,    26,
      27,    28,    29,    30,    31,    32,    33,    34,    35,    36,
      37,    38,    39,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    86,
      87,    88,    89,    90,    91,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   118,    -1,    -1,    -1,   122,    -1,    -1,    -1,   126,
      -1,     4,     5,     6,   131,     8,    -1,    10,   135,    -1,
     137,    -1,   139,    -1,    -1,    -1,    19,    -1,    21,    -1,
     147,   148,    -1,    -1,    -1,    28,    29,    30,    31,    32,
      33,    34,    35,    36,    37,    38,    39,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,    -1,    -1,    -1,   122,
     123,    -1,    -1,   126,    -1,     4,     5,     6,   131,     8,
      -1,    10,   135,    -1,   137,    -1,   139,    -1,    -1,    -1,
      19,    -1,    21,    -1,   147,   148,    -1,    -1,    -1,    -1,
      -1,    30,    -1,    32,    -1,    -1,    35,    36,    37,    -1,
      39,    40,    -1,    -1,    -1,    44,    45,    46,    47,    -1,
      -1,    50,    51,    52,    -1,    -1,    55,    -1,    -1,    -1,
      -1,    60,    61,    62,    63,    64,    65,    66,    -1,    -1,
      -1,    -1,    71,    72,    -1,    74,    -1,    76,    -1,    78,
      -1,    -1,    81,    82,    83,    84,    -1,    86,    -1,    88,
      -1,    -1,    -1,    92,    -1,    94,    95,    96,    97,    98,
      99,   100,    -1,    -1,   103,    -1,   105,   106,   107,   108,
      -1,    -1,    -1,    -1,   113,   114,   115,   116,   117,   118,
      -1,    -1,    -1,   122,    -1,   124,    -1,   126,     4,     5,
       6,    -1,     8,    -1,    10,    -1,    -1,    -1,   137,    -1,
      -1,    -1,    -1,    19,    -1,    21,    -1,    -1,   147,   148,
      -1,    -1,    -1,    -1,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    -1,    39,    40,    -1,    -1,    -1,    -1,    -1,
      46,    47,    -1,    -1,    50,    51,    -1,    -1,    -1,    55,
      -1,    -1,    -1,    -1,    60,    61,    62,    63,    64,    65,
      66,    -1,    -1,    -1,    -1,    71,    72,    -1,    74,    -1,
      76,    -1,    78,    -1,    -1,    81,    82,    83,    84,    -1,
      86,    -1,    88,    -1,    -1,    -1,    92,    -1,    94,    95,
      96,    97,    98,    99,   100,    -1,    -1,   103,    -1,   105,
     106,   107,   108,    -1,    -1,    -1,    -1,   113,   114,   115,
     116,   117,   118,    -1,   120,    -1,    -1,    -1,   124,    -1,
     126,     4,     5,     6,    -1,     8,    -1,    10,    -1,    -1,
      -1,   137,    -1,    -1,    -1,    -1,    19,    -1,    21,    -1,
      -1,   147,   148,    -1,    -1,    -1,    -1,    30,    -1,    32,
      -1,    -1,    35,    36,    37,    -1,    39,    40,    -1,    -1,
      -1,    -1,    -1,    46,    47,    -1,    -1,    50,    51,    -1,
      -1,    -1,    55,    -1,    -1,    -1,    -1,    60,    61,    62,
      63,    64,    65,    66,    -1,    -1,    -1,    -1,    71,    72,
      -1,    74,    -1,    76,    -1,    78,    -1,    -1,    81,    82,
      83,    84,    -1,    86,    -1,    88,    -1,    -1,    -1,    92,
      -1,    94,    95,    96,    97,    98,    99,   100,    -1,    -1,
     103,    -1,   105,   106,   107,   108,    -1,    -1,    -1,    -1,
     113,   114,   115,   116,   117,   118,    -1,    -1,     4,     5,
       6,   124,     8,   126,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,   137,    21,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   147,   148,    32,    -1,    -1,    35,
      36,    37,    -1,    39,    40,    -1,    -1,    -1,    -1,    -1,
      46,    47,    -1,    -1,    50,    51,    -1,    -1,    -1,    55,
      -1,    -1,    -1,    -1,    60,    61,    62,    63,    64,    65,
      66,    -1,    -1,    -1,    -1,    71,    72,    -1,    74,    -1,
      76,    -1,    78,    -1,    -1,    81,    82,    83,    84,    -1,
      86,    -1,    88,    -1,    -1,    -1,    92,    -1,    94,    95,
      96,    97,    98,    99,   100,    -1,    -1,   103,    -1,   105,
     106,   107,   108,    -1,    -1,    -1,    -1,   113,   114,   115,
     116,   117,   118,    -1,    -1,     4,     5,     6,   124,     8,
     126,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,   137,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   147,   148,    32,    -1,    -1,    35,    36,    37,    -1,
      39,    40,    -1,    -1,    -1,    -1,    45,    46,    47,    -1,
      -1,    50,    51,    -1,    -1,    -1,    55,    -1,    -1,    -1,
      -1,    60,    61,    -1,    63,    64,    65,    66,    -1,    -1,
      -1,    -1,    -1,    72,    -1,    74,    -1,    76,    -1,    -1,
      -1,    -1,    81,    82,    83,    84,    -1,    86,    87,    -1,
      -1,    -1,    -1,    92,    -1,    94,    95,    96,    97,    98,
      -1,    -1,    -1,    -1,   103,    -1,   105,   106,   107,   108,
      -1,     4,    -1,    -1,   113,   114,   115,   116,   117,    -1,
      -1,    -1,    -1,   122,    -1,    -1,    -1,   126,    21,    -1,
      -1,    -1,   131,    -1,    -1,    -1,    -1,    -1,   137,    32,
     139,    -1,    35,    36,    37,    -1,    39,    40,   147,   148,
      -1,    -1,    -1,    46,    47,    -1,    -1,    50,    51,    -1,
      -1,    -1,    55,    -1,    -1,    -1,    -1,    60,    -1,    -1,
      63,    64,    65,    66,    -1,    -1,    -1,    -1,    -1,    72,
      -1,    74,    -1,    76,    -1,    -1,    -1,    -1,    81,    82,
      83,    84,    -1,    86,    -1,    -1,    -1,    -1,    -1,    92,
      -1,    94,    95,    96,    97,    98,    -1,    -1,    -1,    -1,
     103,    -1,   105,   106,   107,    -1,    -1,    -1,    -1,    -1,
     113,   114,   115,   116,   117,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    21,   126,    23,    24,    25,    26,    27,    -1,
      -1,    -1,    -1,    32,   137,    -1,    35,    36,    37,    -1,
      39,    40,    -1,    -1,   147,   148,    -1,    46,    47,    -1,
      -1,    50,    51,    -1,    -1,    -1,    55,    -1,    -1,    -1,
      -1,    60,    -1,    -1,    63,    64,    65,    66,    -1,    -1,
      -1,    -1,    -1,    72,    -1,    74,    -1,    76,    -1,    -1,
      -1,    -1,    81,    82,    83,    84,    -1,    86,    -1,    -1,
      -1,    -1,    -1,    92,    -1,    94,    95,    96,    97,    98,
      -1,    -1,    -1,    -1,   103,    -1,   105,   106,   107,    -1,
      -1,    -1,    -1,    -1,   113,   114,   115,   116,   117,    -1,
      -1,    21,    -1,    -1,    -1,    -1,    -1,   126,    -1,    29,
      -1,    -1,    32,    -1,    -1,    35,    36,    37,    -1,    39,
      40,    41,    -1,    -1,    -1,    -1,    46,    47,   147,   148,
      50,    51,    -1,    -1,    -1,    55,    -1,    -1,    -1,    -1,
      60,    -1,    -1,    63,    64,    65,    66,    -1,    -1,    -1,
      -1,    -1,    72,    -1,    74,    -1,    76,    -1,    -1,    -1,
      -1,    81,    82,    83,    84,    -1,    86,    -1,    -1,    -1,
      -1,    -1,    92,    -1,    94,    95,    96,    97,    98,    -1,
      -1,    -1,    -1,   103,    -1,   105,   106,   107,    -1,   109,
      -1,    -1,    -1,   113,   114,   115,   116,   117,    -1,    -1,
      21,    -1,   122,    -1,    -1,    -1,   126,    -1,    29,    -1,
      -1,    32,    -1,    -1,    35,    36,    37,    -1,    39,    40,
      41,    -1,    -1,    -1,    -1,    46,    47,   147,   148,    50,
      51,    -1,    -1,    -1,    55,    -1,    -1,    -1,    -1,    60,
      -1,    -1,    63,    64,    65,    66,    -1,    -1,    -1,    -1,
      -1,    72,    -1,    74,    -1,    76,    -1,    -1,    -1,    -1,
      81,    82,    83,    84,    -1,    86,    -1,    -1,    -1,    -1,
      -1,    92,    -1,    94,    95,    96,    97,    98,    -1,    -1,
      -1,    -1,   103,    -1,   105,   106,   107,    -1,   109,    -1,
      -1,    -1,   113,   114,   115,   116,   117,    -1,    -1,    21,
      -1,    -1,    -1,    -1,    -1,   126,    -1,    29,    -1,    -1,
      32,    -1,    -1,    35,    36,    37,    -1,    39,    40,    -1,
      -1,    -1,    -1,    -1,    46,    47,   147,   148,    50,    51,
      -1,    -1,    -1,    55,    -1,    -1,    -1,    -1,    60,    -1,
      -1,    63,    64,    65,    66,    -1,    -1,    -1,    -1,    -1,
      72,    -1,    74,    -1,    76,    -1,    -1,    -1,    -1,    81,
      82,    83,    84,    -1,    86,    -1,    -1,    -1,    -1,    -1,
      92,    -1,    94,    95,    96,    97,    98,    -1,    -1,    -1,
      -1,   103,    -1,   105,   106,   107,    -1,   109,    -1,    -1,
      -1,   113,   114,   115,   116,   117,    -1,   119,    21,    -1,
      -1,    -1,    -1,    -1,   126,    -1,    29,    -1,    -1,    32,
      -1,    -1,    35,    36,    37,    -1,    39,    40,    -1,    -1,
      -1,    -1,    -1,    46,    47,   147,   148,    50,    51,    -1,
      -1,    -1,    55,    -1,    -1,    -1,    -1,    60,    -1,    -1,
      63,    64,    65,    66,    -1,    -1,    -1,    -1,    -1,    72,
      -1,    74,    -1,    76,    -1,    -1,    -1,    -1,    81,    82,
      83,    84,    -1,    86,    -1,    -1,    -1,    -1,    -1,    92,
      -1,    94,    95,    96,    97,    98,    -1,    -1,    -1,    -1,
     103,    -1,   105,   106,   107,    -1,   109,    -1,    -1,    -1,
     113,   114,   115,   116,   117,    -1,    -1,    21,    -1,    -1,
      -1,    -1,    -1,   126,    -1,    -1,    -1,    -1,    32,    -1,
      -1,    35,    36,    37,    -1,    39,    40,    -1,    -1,    -1,
      -1,    -1,    46,    47,   147,   148,    50,    51,    -1,    -1,
      -1,    55,    -1,    57,    -1,    -1,    60,    -1,    -1,    63,
      64,    65,    66,    -1,    68,    -1,    -1,    -1,    72,    -1,
      74,    -1,    76,    -1,    -1,    -1,    -1,    81,    82,    83,
      84,    -1,    86,    -1,    -1,    -1,    -1,    -1,    92,    -1,
      94,    95,    96,    97,    98,    -1,    -1,    -1,    -1,   103,
      -1,   105,   106,   107,    -1,    -1,    -1,    -1,    -1,   113,
     114,   115,   116,   117,    -1,    -1,    21,    -1,    -1,    -1,
      -1,    -1,   126,    -1,    -1,    -1,    -1,    32,    -1,    -1,
      35,    36,    37,    -1,    39,    40,    -1,    -1,    -1,    -1,
      -1,    46,    47,   147,   148,    50,    51,    -1,    -1,    -1,
      55,    -1,    -1,    -1,    -1,    60,    -1,    -1,    63,    64,
      65,    66,    -1,    -1,    -1,    -1,    -1,    72,    -1,    74,
      -1,    76,    -1,    -1,    -1,    -1,    81,    82,    83,    84,
      -1,    86,    -1,    -1,    -1,    -1,    -1,    92,    -1,    94,
      95,    96,    97,    98,    -1,    -1,    -1,    -1,   103,    -1,
     105,   106,   107,    -1,    -1,    -1,    -1,    -1,   113,   114,
     115,   116,   117,    -1,    -1,    21,    -1,    -1,    -1,    -1,
      -1,   126,    -1,   128,    -1,    -1,    32,    -1,    -1,    35,
      36,    37,    -1,    39,    40,    -1,    -1,    -1,    -1,    -1,
      46,    47,   147,   148,    50,    51,    -1,    -1,    -1,    55,
      -1,    -1,    -1,    -1,    60,    -1,    -1,    63,    64,    65,
      66,    -1,    -1,    -1,    -1,    -1,    72,    -1,    74,    -1,
      76,    -1,    -1,    -1,    -1,    81,    82,    83,    84,    -1,
      86,    -1,    -1,    -1,    -1,    -1,    92,    -1,    94,    95,
      96,    97,    98,    -1,    -1,    -1,    -1,   103,    -1,   105,
     106,   107,    -1,    -1,    -1,    -1,    -1,   113,   114,   115,
     116,   117,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     126,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   147,   148,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    33,    34,    35,    36,    37,    38,    39,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    -1,    -1,    -1,    -1,    67,    68,    69,
      70,    71,    72,    73,    74,    75,    -1,    77,    78,    79,
      80,    -1,    82,    -1,    84,    85,    86,    87,    88,    89,
      90,    91,    -1,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,    -1,   104,    -1,   106,   107,   108,   109,
     110,   111,   112,    -1,    -1,    -1,    -1,    -1,   118,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   147,    28,    29,
      30,    31,    32,    33,    34,    35,    36,    37,    38,    39,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    -1,    -1,    -1,    -1,    67,    68,    69,
      70,    71,    72,    73,    74,    75,    -1,    77,    78,    79,
      80,    -1,    82,    -1,    84,    85,    86,    87,    88,    89,
      90,    91,    -1,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,    -1,   104,    -1,   106,   107,   108,   109,
     110,   111,   112,    -1,    -1,    -1,    -1,    -1,   118,    -1,
      -1,    -1,    -1,   123,    -1,    -1,   126,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   147,    28,    29,
      30,    31,    32,    33,    34,    35,    36,    37,    38,    39,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    -1,    -1,    -1,    -1,    67,    68,    69,
      70,    71,    72,    73,    74,    75,    -1,    77,    78,    79,
      80,    -1,    82,    -1,    84,    85,    86,    87,    88,    89,
      90,    91,    -1,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,    -1,   104,    -1,   106,   107,   108,   109,
     110,   111,   112,    -1,    -1,    -1,    -1,    -1,   118,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   147,    28,    29,
      30,    31,    32,    33,    34,    35,    36,    37,    38,    39,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    -1,    -1,    -1,    -1,    67,    68,    69,
      70,    71,    72,    73,    74,    75,    -1,    77,    78,    79,
      80,    -1,    82,    -1,    84,    85,    86,    87,    88,    89,
      90,    91,    -1,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,    -1,   104,    -1,   106,   107,   108,   109,
     110,   111,   112,    -1,    -1,    -1,    -1,    -1,   118,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   126,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   147
  };

  const unsigned short int
  asn1_parser::yystos_[] =
  {
       0,   147,   152,   153,   225,   375,     0,   152,    49,   122,
     226,   227,   228,    15,   233,     4,   148,   229,   230,   231,
     232,   306,   373,   131,   311,    73,    33,    57,    68,   234,
     123,   229,   124,   138,   312,   104,   104,   104,    59,   235,
     231,    16,    17,   314,   138,   313,    69,   119,   125,   314,
     131,    34,   313,    58,   236,   237,    30,   147,   148,   238,
     245,   246,   247,   372,   374,   224,    70,   239,   140,   140,
     135,   122,    54,   240,   241,   242,   245,    21,   147,   158,
     194,   198,   199,   200,   201,   202,   204,   205,   248,   249,
     258,   259,   372,   374,   376,   246,   123,   140,   242,    62,
      29,    41,   109,   122,   147,   155,   156,   157,   159,   160,
     203,   375,   376,   194,   372,   249,   119,   147,   192,   193,
     203,   372,   375,    21,    32,    35,    36,    37,    39,    40,
      46,    47,    50,    51,    55,    60,    63,    64,    65,    66,
      72,    74,    76,    81,    82,    83,    84,    86,    92,    94,
      95,    96,    97,    98,   103,   105,   106,   107,   113,   114,
     115,   116,   117,   126,   148,   182,   183,   197,   203,   210,
     211,   212,   213,   250,   252,   256,   260,   261,   267,   269,
     273,   277,   278,   281,   282,   283,   288,   289,   290,   291,
     295,   296,   297,   298,   302,   309,   310,   315,   316,   317,
     318,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     372,   373,   374,   375,   243,   375,   122,   155,   206,   207,
     208,   209,   247,   260,   372,   374,   155,   136,   147,   375,
     159,   260,   119,   119,   155,   260,   136,   101,   101,   122,
      89,   122,    85,   122,    67,   101,    85,   100,   122,   124,
     329,   355,    85,   122,   329,   355,    15,   299,   260,   375,
     136,   122,   254,   119,   329,    57,    68,   260,   136,   128,
     136,   136,   122,   244,   303,   374,    23,    24,    27,   161,
     162,   165,   168,   170,   171,   173,   123,   135,   139,   119,
     147,   376,   136,   122,   195,   260,   119,   119,   372,   122,
     262,   292,   293,   294,   373,   120,   271,   274,   275,   276,
     373,   155,   270,   271,   373,   260,   262,   373,   329,    43,
     120,   123,   262,   284,   285,   286,   287,     4,     5,     6,
       8,    10,    19,    30,    32,    44,    45,    52,    61,    62,
      71,    78,    88,    99,   108,   118,   124,   137,   147,   148,
     195,   215,   216,   218,   223,   260,   268,   272,   319,   330,
     331,   332,   333,   335,   336,   337,   338,   339,   340,   341,
     345,   346,   347,   348,   349,   350,   351,   353,   355,   356,
     357,   358,   368,   369,    85,    85,   260,   262,   123,   284,
      85,    85,   139,    31,    93,   112,   301,   119,   136,    23,
      24,    25,    26,    27,   163,   164,   155,   255,   260,     5,
       6,     8,    10,    32,    45,    87,   122,   139,   147,   148,
     197,   263,   264,   265,   268,   272,   311,   319,   372,   260,
     260,   164,   260,   164,    21,   372,     4,   214,   251,   253,
     257,   304,   305,   306,   307,   308,   373,   374,   375,    48,
      87,   155,   166,   163,   260,   155,   123,   135,   207,   247,
     122,   182,   184,   185,   186,   188,   375,   120,   196,   333,
     195,   263,   279,   280,   373,   123,   135,   260,   130,   370,
     123,   135,   124,   123,   135,    85,   135,    48,    87,   123,
     135,    56,   342,    38,   260,    38,   329,   263,    12,    42,
      43,   335,     4,   122,   370,   135,   110,   143,   343,    75,
     144,   344,   342,   260,   121,   128,   260,   262,   260,   262,
     123,   260,   262,   260,   262,     4,   251,   300,   263,   136,
     123,   263,   263,   266,   124,   135,   139,   143,   135,   143,
     254,   251,   304,   123,   304,   124,   136,   260,    48,    87,
     172,    48,    87,   169,   111,   167,    48,    87,   174,   118,
     175,   162,    28,    29,    30,    31,    32,    33,    34,    35,
      36,    37,    38,    39,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    67,    68,    69,
      70,    71,    72,    73,    74,    75,    77,    78,    79,    80,
      82,    84,    85,    86,    87,    88,    89,    90,    91,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   104,
     106,   107,   108,   109,   110,   111,   112,   118,   135,   147,
     148,   163,   181,   187,   189,   190,   191,   197,   260,   263,
     377,   136,   135,   123,   135,   123,   135,   124,   120,   262,
     251,   260,   272,   371,   374,   375,   120,   276,   251,   272,
     271,   260,   120,   286,   263,   120,   287,   345,   122,    52,
     263,   329,   359,   122,   360,   361,   362,   125,   142,   219,
     220,   125,   120,   338,   340,    32,    77,   128,   147,   148,
     347,   352,   354,   127,   163,   123,   263,     4,   263,   263,
     263,   263,   263,   123,   307,   374,   184,   263,   169,   102,
      71,    32,   147,   191,   135,   123,   190,   334,   335,   120,
     280,     4,   251,   139,   136,   370,   125,   125,   135,   135,
     155,   209,   217,   260,    38,   120,   363,   364,   373,   136,
     222,   373,   123,   135,   135,   354,   125,   125,   122,   154,
     146,   135,   125,   125,   263,   135,   120,   286,   139,   123,
     263,   135,   123,   135,   329,   365,   366,   136,   221,   136,
     220,   334,    32,    35,    36,    37,    39,    40,    45,    46,
      47,    50,    51,    55,    60,    61,    72,    74,    82,    84,
      86,    87,    94,    95,    96,    97,    98,   106,   107,   108,
     126,   147,   176,   177,   178,   179,   180,   181,   123,   334,
     275,   135,   122,   184,   263,   363,   363,    28,    87,    91,
     367,   221,   222,   373,   176,   123,   177,   163,   181,   135,
     120,   263,   123,   127
  };

  const unsigned short int
  asn1_parser::yyr1_[] =
  {
       0,   151,   152,   152,   153,   154,   155,   155,   155,   156,
     157,   157,   158,   159,   159,   160,   161,   161,   162,   162,
     162,   162,   162,   163,   163,   163,   163,   163,   164,   164,
     165,   166,   166,   166,   167,   167,   168,   169,   169,   169,
     170,   171,   172,   172,   172,   173,   174,   174,   174,   175,
     175,   176,   176,   177,   177,   178,   179,   180,   180,   181,
     181,   182,   182,   183,   184,   184,   185,   185,   186,   187,
     188,   189,   189,   190,   190,   191,   191,   192,   192,   193,
     194,   195,   196,   196,   196,   196,   196,   197,   197,   198,
     198,   198,   198,   198,   198,   199,   200,   201,   202,   203,
     204,   205,   203,   206,   206,   207,   207,   208,   208,   209,
     209,   210,   211,   212,   213,   213,   214,   214,   215,   215,
     215,   216,   217,   217,   217,   217,   217,   218,   218,   219,
     219,   220,   220,   221,   221,   222,   222,   223,   223,   223,
     224,   225,   226,   226,   226,   227,   228,   229,   229,   230,
     230,   230,   231,   232,   233,   233,   234,   234,   234,   234,
     235,   235,   236,   236,   237,   237,   237,   238,   238,   239,
     239,   240,   240,   241,   241,   242,   243,   244,   244,   244,
     245,   245,   246,   247,   247,   247,   248,   248,   249,   249,
     249,   249,   249,   250,   250,   250,   251,   251,   252,   253,
     254,   255,   255,   256,   257,   258,   259,   260,   260,   260,
     260,   260,   261,   261,   261,   261,   261,   261,   261,   261,
     261,   261,   261,   261,   261,   261,   261,   261,   261,   261,
     261,   261,   261,   261,   261,   261,   261,   261,   261,   261,
     261,   261,   262,   263,   263,   263,   263,   263,   263,   263,
     263,   263,   263,   263,   263,   263,   263,   263,   263,   263,
     263,   263,   263,   264,   264,   265,   265,   266,   266,   267,
     268,   268,   269,   269,   270,   270,   271,   271,   272,   272,
     273,   274,   274,   274,   274,   275,   275,   276,   276,   277,
     278,   278,   279,   279,   280,   280,   281,   282,   283,   283,
     284,   285,   285,   285,   285,   285,   285,   285,   285,   286,
     286,   287,   287,   287,   287,   288,   288,   289,   289,   290,
     290,   291,   292,   293,   293,   294,   294,   295,   296,   297,
     297,   297,   298,   299,   299,   300,   300,   301,   301,   301,
     301,   302,   303,   303,   304,   304,   305,   305,   305,   306,
     307,   307,   308,   309,   310,   311,   312,   313,   313,   314,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   324,   325,   325,   325,   325,   325,   325,   325,   325,
     325,   325,   325,   325,   325,   326,   327,   327,   328,   328,
     328,   328,   328,   328,   328,   328,   329,   330,   330,   331,
     332,   332,   332,   333,   334,   335,   335,   336,   336,   337,
     338,   338,   339,   340,   340,   341,   342,   343,   343,   344,
     344,   345,   345,   346,   346,   346,   346,   346,   346,   346,
     346,   346,   347,   347,   347,   347,   347,   347,   347,   347,
     347,   347,   348,   349,   350,   351,   351,   352,   352,   353,
     353,   354,   354,   355,   356,   357,   358,   358,   359,   360,
     360,   361,   362,   363,   363,   364,   365,   366,   366,   367,
     367,   367,   367,   368,   369,   370,   370,   371,   371,   371,
     372,   373,   374,   375,   376,   377,   377,   377,   377,   377,
     377,   377,   377,   377,   377,   377,   377,   377,   377,   377,
     377,   377,   377,   377,   377,   377,   377,   377,   377,   377,
     377,   377,   377,   377,   377,   377,   377,   377,   377,   377,
     377,   377,   377,   377,   377,   377,   377,   377,   377,   377,
     377,   377,   377,   377,   377,   377,   377,   377,   377,   377,
     377,   377,   377,   377,   377,   377,   377,   377,   377,   377,
     377,   377,   377,   377,   377,   377,   377,   377,   377,   377,
     377,   377
  };

  const unsigned char
  asn1_parser::yyr2_[] =
  {
       0,     2,     1,     2,    10,     3,     1,     1,     1,     3,
       1,     1,     3,     1,     1,     5,     1,     3,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       2,     1,     2,     0,     1,     0,     4,     1,     2,     0,
       3,     3,     1,     2,     0,     3,     1,     1,     0,     3,
       0,     1,     2,     1,     1,     3,     2,     1,     2,     1,
       1,     1,     1,     3,     1,     1,     1,     1,     5,     2,
       3,     1,     2,     1,     1,     1,     1,     1,     1,     3,
       4,     3,     1,     3,     1,     3,     5,     3,     3,     1,
       1,     1,     1,     1,     1,     4,     5,     5,     1,     1,
       5,     5,     3,     1,     3,     3,     1,     1,     1,     1,
       1,     1,     3,     3,     1,     1,     1,     1,     1,     1,
       1,     5,     3,     3,     1,     1,     0,     1,     4,     1,
       3,     2,     4,     2,     0,     1,     3,     2,     3,     5,
       0,     2,     1,     1,     0,     3,     2,     1,     2,     1,
       1,     1,     1,     4,     2,     0,     2,     2,     2,     0,
       2,     0,     3,     0,     3,     3,     0,     1,     0,     3,
       0,     1,     0,     1,     2,     3,     2,     1,     1,     0,
       1,     3,     1,     1,     3,     1,     1,     2,     1,     1,
       2,     1,     1,     1,     1,     1,     1,     1,     2,     2,
       3,     1,     1,     3,     3,     3,     4,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     2,     1,     1,     1,     1,     1,     1,     1,
       2,     1,     1,     4,     1,     1,     1,     1,     3,     3,
       1,     1,     1,     3,     3,     3,     3,     1,     2,     1,
       1,     1,     1,     4,     1,     3,     4,     4,     1,     2,
       4,     1,     4,     6,     2,     1,     3,     1,     1,     1,
       2,     5,     1,     3,     4,     4,     2,     1,     3,     4,
       1,     1,     3,     5,     7,     3,     5,     1,     3,     1,
       3,     1,     2,     3,     3,     3,     3,     3,     4,     3,
       3,     4,     1,     1,     3,     1,     3,     3,     1,     2,
       3,     3,     5,     2,     0,     1,     1,     1,     1,     1,
       0,     2,     3,     4,     1,     2,     1,     1,     1,     1,
       1,     1,     4,     1,     1,     4,     2,     3,     0,     1,
       1,     1,     2,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     2,     2,     1,     4,     4,
       4,     4,     4,     4,     4,     4,     4,     1,     1,     1,
       1,     3,     5,     1,     1,     1,     2,     1,     3,     1,
       1,     3,     1,     1,     2,     1,     2,     1,     1,     1,
       1,     1,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     2,     1,     3,     1,     2,     1,     2,     1,
       1,     1,     1,     2,     1,     2,     3,     3,     1,     1,
       1,     3,     5,     1,     3,     2,     2,     1,     0,     1,
       1,     1,     0,     2,     2,     2,     0,     1,     1,     3,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     2,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1
  };



  // YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
  // First, the terminals, then, starting at \a yyntokens_, nonterminals.
  const char*
  const asn1_parser::yytname_[] =
  {
  "END_OF_FILE", "error", "$undefined", "comment", "number", "realnumber",
  "bstring", "xmlbstring", "hstring", "xmlhstring", "cstring",
  "xmlcstring", "simplestring", "xmltstring", "psname",
  "encodingreference", "integerUnicodeLabel", "non-integerUnicodeLabel",
  "extended-true", "tstring", "extended-false", "objectreference",
  "objectsetreference", "typefieldreference", "valuefieldreference",
  "valuesetfieldreference", "objectfieldreference",
  "objectsetfieldreference", "ABSENT", "ABSTRACT_SYNTAX", "ALL",
  "APPLICATION", "ASN_NULL", "AUTOMATIC", "BEGIN", "BIT", "BMPString",
  "BOOLEAN", "BY", "CHARACTER", "CHOICE", "CLASS", "COMPONENT",
  "COMPONENTS", "CONSTRAINED", "CONTAINING", "DATE", "DATE_TIME",
  "DEFAULT", "DEFINITIONS", "DURATION", "EMBEDDED", "ENCODED",
  "ENCODING_CONTROL", "END", "ENUMERATED", "EXCEPT", "EXPLICIT", "EXPORTS",
  "EXTENSIBILITY", "EXTERNAL", "FALSE", "FROM", "GeneralizedTime",
  "GeneralString", "GraphicString", "IA5String", "IDENTIFIER", "IMPLICIT",
  "IMPLIED", "IMPORTS", "\"INCLUDES\"", "INSTANCE", "INSTRUCTIONS",
  "INTEGER", "INTERSECTION", "ISO646String", "MAX", "MIN",
  "MINUS_INFINITY", "NOT_A_NUMBER", "NumericString", "OBJECT",
  "ObjectDescriptor", "OCTET", "OF", "OID_IRI", "OPTIONAL", "PATTERN",
  "PDV", "PLUS_INFINITY", "PRESENT", "PrintableString", "PRIVATE", "REAL",
  "RELATIVE_OID", "RELATIVE_OID_IRI", "SEQUENCE", "SET", "SETTINGS",
  "SIZE", "STRING", "SYNTAX", "T61String", "TAGS", "TeletexString", "TIME",
  "TIME_OF_DAY", "TRUE", "TYPE_IDENTIFIER", "UNION", "UNIQUE", "UNIVERSAL",
  "UniversalString", "UTCTime", "UTF8String", "VideotexString",
  "VisibleString", "WITH", "\"::=\"", "\"...\"", "\"..\"", "\"{\"",
  "\"}\"", "\"(\"", "\")\"", "\"[\"", "\"]\"", "\"<\"", "\">\"", "\"!\"",
  "\"\\\"\"", "\"&\"", "\"'\"", "\"*\"", "\",\"", "\".\"", "\"-\"",
  "\"/\"", "\":\"", "\";\"", "\"=\"", "\"@\"", "\"|\"", "\"^\"", "PLUS",
  "STAR", "GENERIC_IDENTIFIER_UPPERCASE", "GENERIC_IDENTIFIER_LOWERCASE",
  "GENERIC_INTEGER", "xmlasn1typename", "$accept", "ModuleDefinitionList",
  "ModuleDefinition", "SyntaxList", "DefinedObjectClass",
  "ExternalObjectClassReference", "UsefulObjectClassReference",
  "ObjectClassAssignment", "ObjectClass", "ObjectClassDefn",
  "FieldSpecList", "FieldSpec", "FieldName", "FieldNameList",
  "TypeFieldSpec", "TypeOptionalitySpec", "OptionalUnique",
  "FixedTypeValueFieldSpec", "ValueOptionalitySpec",
  "VariableTypeValueFieldSpec", "ObjectFieldSpec", "ObjectOptionalitySpec",
  "ObjectSetFieldSpec", "ObjectSetOptionalitySpec", "WithSyntaxSpec",
  "TokenOrGroupSpecList", "TokenOrGroupSpec", "OptionalGroup",
  "RequiredToken", "LiteralList", "Literal", "DefinedObject",
  "ExternalObjectReference", "Object", "ObjectDefn", "DefaultSyntax",
  "FieldSetting", "DefinedSyntax", "DefinedSyntaxList",
  "DefinedSyntaxToken", "Setting", "DefinedObjectSet",
  "ExternalObjectSetReference", "ObjectSetAssignment", "ObjectSet",
  "ObjectSetSpec", "ObjectClassFieldType", "ParameterizedAssignment",
  "ParameterizedTypeAssignment", "ParameterizedValueAssignment",
  "ParameterizedValueSetTypeAssignment",
  "ParameterizedObjectClassAssignment", "ParameterList",
  "ParameterizedObjectAssignment", "ParameterizedObjectSetAssignment",
  "ParameterSeries", "Parameter", "ParamGovernor", "Governor",
  "ReferencedObjects", "TypeFromObject", "InstanceOfType",
  "SimpleDefinedType", "SimpleDefinedValue", "GeneralConstraint",
  "UserDefinedConstraint", "UserDefinedConstraintParameter",
  "TableConstraint", "AtNotationList", "AtNotation", "Level",
  "ComponentIdList", "ContentsConstraint", "EncodingControlSections",
  "ModuleIdentifier", "DefinitiveIdentification", "DefinitiveOID",
  "DefinitiveOIDandIRI", "DefinitiveObjIdComponentList",
  "DefinitiveObjIdComponent", "DefinitiveNumberForm",
  "DefinitiveNameAndNumberForm", "EncodingReferenceDefault", "TagDefault",
  "ExtensionDefault", "ModuleBody", "Exports", "SymbolsExported",
  "Imports", "SymbolsImported", "SymbolsFromModuleList",
  "SymbolsFromModule", "GlobalModuleReference", "AssignedIdentifier",
  "SymbolList", "Symbol", "Reference", "AssignmentList", "Assignment",
  "DefinedType", "DefinedValue", "ParameterizedType", "ParameterizedValue",
  "ActualParameterList", "ActualParameter", "ExternalTypeReference",
  "ExternalValueReference", "TypeAssignment", "ValueAssignment", "Type",
  "BuiltinType", "NamedType", "Value", "ValueCommaListChoice",
  "ValueChoice", "SequenceOfValues", "BooleanType", "BooleanValue",
  "IntegerType", "NamedNumberList", "NamedNumber", "SignedNumber",
  "EnumeratedType", "Enumerations", "Enumeration", "EnumerationItem",
  "RealType", "BitStringType", "NamedBitList", "NamedBit",
  "OctetStringType", "NullType", "SequenceType", "ComponentTypeLists",
  "RootComponentTypeList", "ComponentTypeList", "ComponentType",
  "SequenceOfType", "SetType", "SetOfType", "ChoiceType",
  "AlternativeTypeLists", "RootAlternativeTypeList", "AlternativeTypeList",
  "SelectionType", "PrefixedType", "TaggedType", "Tag",
  "EncodingReference", "ClassNumber", "Class", "ObjectIdentifierType",
  "ObjectIdentifierValue", "ObjIdComponentsList", "ObjIdComponents",
  "NameForm", "NumberForm", "NameAndNumberForm", "RelativeOIDType",
  "IRIType", "IRIValue", "FirstArcIdentifier", "SubsequentArcIdentifier",
  "ArcIdentifier", "RelativeIRIType", "EmbeddedPDVType", "ExternalType",
  "TimeType", "TimeValue", "DateType", "TimeOfDayType", "DateTimeType",
  "DurationType", "CharacterStringType", "RestrictedCharacterStringType",
  "UnrestrictedCharacterStringType", "ConstrainedType",
  "TypeWithConstraint", "Constraint", "ConstraintSpec",
  "SubtypeConstraint", "ElementSetSpecs", "RootElementSetSpec",
  "AdditionalElementSetSpec", "ElementSetSpec", "Unions", "UElems",
  "Intersections", "IElems", "IntersectionElements", "Elems", "Exclusions",
  "UnionMark", "IntersectionMark", "Elements", "SubtypeElements",
  "SingleValue", "ContainedSubtype", "Includes", "ValueRange",
  "LowerEndpoint", "UpperEndpoint", "LowerEndValue", "UpperEndValue",
  "SizeConstraint", "TypeConstraint", "PermittedAlphabet",
  "InnerTypeConstraints", "SingleTypeConstraint",
  "MultipleTypeConstraints", "FullSpecification", "PartialSpecification",
  "TypeConstraints", "NamedConstraint", "ComponentConstraint",
  "ValueConstraint", "PresenceConstraint", "PatternConstraint",
  "PropertySettings", "ExceptionSpec", "ExceptionIdentification",
  "typereference", "identifier", "valuereference", "modulereference",
  "objectclassreference", "word", YY_NULLPTR
  };

#if YYDEBUG
  const unsigned short int
  asn1_parser::yyrline_[] =
  {
       0,   282,   282,   283,   286,   301,   304,   305,   306,   309,
     312,   313,   316,   319,   320,   324,   327,   328,   331,   332,
     333,   334,   335,   338,   339,   340,   341,   342,   345,   346,
     349,   352,   353,   354,   357,   358,   361,   364,   365,   366,
     369,   372,   375,   376,   377,   380,   383,   384,   385,   391,
     392,   395,   396,   399,   400,   403,   406,   409,   410,   413,
     414,   417,   418,   421,   427,   428,   433,   434,   437,   440,
     443,   446,   447,   450,   451,   454,   455,   459,   460,   463,
     466,   469,   472,   473,   474,   475,   476,   485,   486,   492,
     494,   495,   496,   497,   498,   501,   505,   508,   511,   511,
     514,   517,   520,   524,   526,   530,   532,   536,   537,   540,
     541,   556,   568,   577,   584,   585,   589,   590,   593,   594,
     595,   598,   601,   602,   604,   605,   606,   609,   611,   615,
     616,   619,   620,   623,   624,   627,   628,   631,   632,   633,
     644,   652,   659,   660,   661,   664,   667,   671,   672,   676,
     677,   678,   681,   684,   688,   689,   692,   694,   696,   698,
     702,   703,   706,   708,   712,   713,   714,   717,   718,   721,
     723,   726,   728,   731,   733,   737,   741,   745,   746,   747,
     750,   752,   756,   760,   762,   764,   773,   775,   779,   781,
     783,   786,   787,   791,   792,   794,   800,   802,   805,   809,
     812,   816,   820,   830,   835,   860,   864,   871,   873,   875,
     877,   879,   884,   885,   886,   887,   888,   889,   890,   891,
     892,   893,   894,   895,   896,   897,   898,   899,   900,   901,
     902,   903,   904,   905,   906,   907,   908,   909,   910,   911,
     912,   913,   916,   920,   922,   924,   926,   928,   930,   932,
     934,   936,   938,   940,   942,   943,   945,   947,   949,   953,
     955,   957,   959,   963,   964,   967,   968,   971,   973,   981,
     984,   985,   988,   989,   992,   993,   996,   998,  1002,  1004,
    1008,  1012,  1015,  1018,  1022,  1025,  1027,  1031,  1033,  1041,
    1044,  1045,  1048,  1049,  1052,  1053,  1067,  1070,  1073,  1075,
    1083,  1087,  1089,  1091,  1093,  1095,  1097,  1099,  1101,  1105,
    1107,  1111,  1113,  1115,  1117,  1128,  1130,  1134,  1136,  1140,
    1142,  1146,  1150,  1154,  1156,  1160,  1162,  1169,  1172,  1176,
    1178,  1180,  1184,  1188,  1189,  1192,  1194,  1197,  1199,  1201,
    1203,  1213,  1216,  1218,  1222,  1224,  1228,  1230,  1232,  1236,
    1240,  1242,  1245,  1249,  1261,  1264,  1270,  1273,  1274,  1277,
    1278,  1281,  1287,  1294,  1300,  1303,  1306,  1309,  1312,  1315,
    1318,  1319,  1322,  1323,  1324,  1325,  1326,  1327,  1328,  1329,
    1330,  1331,  1332,  1333,  1334,  1338,  1341,  1342,  1345,  1346,
    1347,  1348,  1349,  1350,  1351,  1352,  1355,  1358,  1359,  1362,
    1365,  1366,  1367,  1370,  1373,  1376,  1377,  1380,  1381,  1384,
    1387,  1388,  1391,  1394,  1395,  1398,  1401,  1404,  1405,  1408,
    1409,  1412,  1414,  1417,  1418,  1419,  1420,  1421,  1422,  1423,
    1424,  1425,  1431,  1433,  1434,  1435,  1436,  1437,  1438,  1439,
    1440,  1441,  1444,  1447,  1450,  1453,  1454,  1457,  1458,  1461,
    1462,  1465,  1466,  1469,  1472,  1475,  1478,  1479,  1482,  1485,
    1486,  1489,  1492,  1495,  1496,  1499,  1502,  1505,  1506,  1509,
    1510,  1511,  1512,  1515,  1518,  1521,  1522,  1525,  1526,  1527,
    1530,  1534,  1538,  1542,  1546,  1550,  1551,  1552,  1553,  1554,
    1555,  1556,  1557,  1558,  1559,  1560,  1561,  1562,  1563,  1564,
    1565,  1566,  1567,  1568,  1569,  1570,  1571,  1572,  1573,  1574,
    1575,  1576,  1577,  1578,  1579,  1580,  1581,  1582,  1583,  1584,
    1585,  1586,  1587,  1588,  1589,  1590,  1591,  1592,  1593,  1594,
    1595,  1596,  1597,  1598,  1599,  1600,  1601,  1602,  1603,  1604,
    1605,  1606,  1607,  1608,  1609,  1610,  1611,  1612,  1613,  1614,
    1615,  1616,  1617,  1618,  1619,  1620,  1621,  1622,  1623,  1624,
    1625,  1626
  };

  // Print the state stack on the debug stream.
  void
  asn1_parser::yystack_print_ ()
  {
    *yycdebug_ << "Stack now";
    for (stack_type::const_iterator
           i = yystack_.begin (),
           i_end = yystack_.end ();
         i != i_end; ++i)
      *yycdebug_ << ' ' << i->state;
    *yycdebug_ << std::endl;
  }

  // Report on the debug stream that the rule \a yyrule is going to be reduced.
  void
  asn1_parser::yy_reduce_print_ (int yyrule)
  {
    unsigned int yylno = yyrline_[yyrule];
    int yynrhs = yyr2_[yyrule];
    // Print the symbols being reduced, and their result.
    *yycdebug_ << "Reducing stack by rule " << yyrule - 1
               << " (line " << yylno << "):" << std::endl;
    // The symbols being reduced.
    for (int yyi = 0; yyi < yynrhs; yyi++)
      YY_SYMBOL_PRINT ("   $" << yyi + 1 << " =",
                       yystack_[(yynrhs) - (yyi + 1)]);
  }
#endif // YYDEBUG



} // yy
#line 7793 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re" // lalr1.cc:1167
#line 1628 "/home/styler/git/fast_ber/src/compiler/asn_compiler.yacc" // lalr1.cc:1168



namespace yy {

    asn1_parser::symbol_type yylex(Context& context)
    {
        const char* start = context.cursor;
        const char* YYMARKER = nullptr;
        context.location.step();
        // Lexer

#line 7809 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
{
	char yych;
	unsigned int yyaccept = 0;
	yych = *context.cursor;
	switch (yych) {
	case 0x00:	goto yy2;
	case 0x08:
	case '\t':
	case '\v':
	case '\f':
	case ' ':	goto yy6;
	case '\n':	goto yy8;
	case '\r':	goto yy10;
	case '!':	goto yy11;
	case '"':	goto yy13;
	case '&':	goto yy15;
	case '(':	goto yy16;
	case ')':	goto yy18;
	case ',':	goto yy20;
	case '-':	goto yy22;
	case '.':	goto yy24;
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':	goto yy26;
	case ':':	goto yy29;
	case ';':	goto yy31;
	case '<':	goto yy33;
	case '@':	goto yy35;
	case 'A':	goto yy37;
	case 'B':	goto yy39;
	case 'C':	goto yy40;
	case 'D':	goto yy41;
	case 'E':	goto yy42;
	case 'F':	goto yy43;
	case 'G':	goto yy44;
	case 'H':
	case 'J':
	case 'K':
	case 'L':
	case 'Q':
	case 'X':
	case 'Y':
	case 'Z':	goto yy45;
	case 'I':	goto yy47;
	case 'M':	goto yy48;
	case 'N':	goto yy49;
	case 'O':	goto yy50;
	case 'P':	goto yy51;
	case 'R':	goto yy52;
	case 'S':	goto yy53;
	case 'T':	goto yy54;
	case 'U':	goto yy55;
	case 'V':	goto yy56;
	case 'W':	goto yy57;
	case '[':	goto yy58;
	case ']':	goto yy60;
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy62;
	case '{':	goto yy65;
	case '|':	goto yy67;
	case '}':	goto yy69;
	default:	goto yy4;
	}
yy2:
	++context.cursor;
#line 7919 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_END_OF_FILE(context.location); }
#line 7908 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy4:
	++context.cursor;
yy5:
#line 7944 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ throw(std::runtime_error(std::string("Unknown symbol!") + *start)); context.location.columns(context.cursor - start); return asn1_parser::symbol_type(asn1_parser::token_type(*start), context.location); }
#line 7914 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy6:
	++context.cursor;
#line 7923 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); context.location.columns(); return yylex(context); }
#line 7919 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy8:
	++context.cursor;
#line 7922 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); context.location.lines();   return yylex(context); }
#line 7924 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy10:
	yych = *++context.cursor;
	switch (yych) {
	case '\n':	goto yy8;
	default:	goto yy5;
	}
yy11:
	++context.cursor;
#line 7941 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_EXCLAMATION_MARK (context.location); }
#line 7935 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy13:
	yych = *++context.cursor;
	switch (yych) {
	case '"':	goto yy71;
	case '\\':	goto yy73;
	default:	goto yy13;
	}
yy15:
	yych = *++context.cursor;
	switch (yych) {
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':	goto yy75;
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy78;
	default:	goto yy5;
	}
yy16:
	++context.cursor;
#line 7931 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_OPEN_PARENTHESIS (context.location); }
#line 8004 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy18:
	++context.cursor;
#line 7932 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_CLOSE_PARENTHESIS (context.location); }
#line 8009 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy20:
	++context.cursor;
#line 7937 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_COMMA (context.location); }
#line 8014 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy22:
	yych = *++context.cursor;
	switch (yych) {
	case '-':	goto yy81;
	default:	goto yy23;
	}
yy23:
#line 7938 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_HYPHEN_MINUS (context.location); }
#line 8024 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy24:
	yych = *++context.cursor;
	switch (yych) {
	case '.':	goto yy84;
	default:	goto yy25;
	}
yy25:
#line 7939 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_FULL_STOP (context.location); }
#line 8034 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy26:
	yych = *++context.cursor;
	switch (yych) {
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':	goto yy26;
	default:	goto yy28;
	}
yy28:
#line 7910 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_number(std::stoll(std::string(start, context.cursor)), context.location); }
#line 8053 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy29:
	yyaccept = 0;
	yych = *(YYMARKER = ++context.cursor);
	switch (yych) {
	case ':':	goto yy86;
	default:	goto yy30;
	}
yy30:
#line 7935 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_COLON (context.location); }
#line 8064 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy31:
	++context.cursor;
#line 7936 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_SEMICOLON (context.location); }
#line 8069 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy33:
	++context.cursor;
#line 7942 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_LESS_THAN (context.location); }
#line 8074 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy35:
	++context.cursor;
#line 7943 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_AT (context.location); }
#line 8079 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy37:
	yych = *++context.cursor;
	switch (yych) {
	case 'B':	goto yy88;
	case 'L':	goto yy89;
	case 'P':	goto yy90;
	case 'U':	goto yy91;
	default:	goto yy46;
	}
yy38:
#line 7913 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_GENERIC_IDENTIFIER_UPPERCASE(santize_name(std::string(start, context.cursor)), context.location); }
#line 8092 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy39:
	yych = *++context.cursor;
	switch (yych) {
	case 'E':	goto yy92;
	case 'I':	goto yy93;
	case 'M':	goto yy94;
	case 'O':	goto yy95;
	case 'Y':	goto yy96;
	default:	goto yy46;
	}
yy40:
	yych = *++context.cursor;
	switch (yych) {
	case 'H':	goto yy98;
	case 'L':	goto yy99;
	case 'O':	goto yy100;
	default:	goto yy46;
	}
yy41:
	yych = *++context.cursor;
	switch (yych) {
	case 'A':	goto yy101;
	case 'E':	goto yy102;
	case 'U':	goto yy103;
	default:	goto yy46;
	}
yy42:
	yych = *++context.cursor;
	switch (yych) {
	case 'M':	goto yy104;
	case 'N':	goto yy105;
	case 'X':	goto yy106;
	default:	goto yy46;
	}
yy43:
	yych = *++context.cursor;
	switch (yych) {
	case 'A':	goto yy107;
	case 'R':	goto yy108;
	default:	goto yy46;
	}
yy44:
	yych = *++context.cursor;
	switch (yych) {
	case 'e':	goto yy109;
	case 'r':	goto yy110;
	default:	goto yy46;
	}
yy45:
	yych = *++context.cursor;
yy46:
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy38;
	}
yy47:
	yych = *++context.cursor;
	switch (yych) {
	case 'A':	goto yy111;
	case 'D':	goto yy112;
	case 'M':	goto yy113;
	case 'N':	goto yy114;
	case 'S':	goto yy115;
	default:	goto yy46;
	}
yy48:
	yych = *++context.cursor;
	switch (yych) {
	case 'A':	goto yy116;
	case 'I':	goto yy117;
	default:	goto yy46;
	}
yy49:
	yych = *++context.cursor;
	switch (yych) {
	case 'O':	goto yy118;
	case 'U':	goto yy119;
	case 'u':	goto yy120;
	default:	goto yy46;
	}
yy50:
	yych = *++context.cursor;
	switch (yych) {
	case 'B':	goto yy121;
	case 'C':	goto yy122;
	case 'F':	goto yy123;
	case 'I':	goto yy125;
	case 'P':	goto yy126;
	case 'b':	goto yy127;
	default:	goto yy46;
	}
yy51:
	yych = *++context.cursor;
	switch (yych) {
	case 'A':	goto yy128;
	case 'D':	goto yy129;
	case 'L':	goto yy130;
	case 'R':	goto yy131;
	case 'r':	goto yy132;
	default:	goto yy46;
	}
yy52:
	yych = *++context.cursor;
	switch (yych) {
	case 'E':	goto yy133;
	default:	goto yy46;
	}
yy53:
	yych = *++context.cursor;
	switch (yych) {
	case 'E':	goto yy134;
	case 'I':	goto yy135;
	case 'T':	goto yy136;
	case 'Y':	goto yy137;
	default:	goto yy46;
	}
yy54:
	yych = *++context.cursor;
	switch (yych) {
	case '6':	goto yy138;
	case 'A':	goto yy139;
	case 'I':	goto yy140;
	case 'R':	goto yy141;
	case 'Y':	goto yy142;
	case 'e':	goto yy143;
	default:	goto yy46;
	}
yy55:
	yych = *++context.cursor;
	switch (yych) {
	case 'N':	goto yy144;
	case 'T':	goto yy145;
	case 'n':	goto yy146;
	default:	goto yy46;
	}
yy56:
	yych = *++context.cursor;
	switch (yych) {
	case 'i':	goto yy147;
	default:	goto yy46;
	}
yy57:
	yych = *++context.cursor;
	switch (yych) {
	case 'I':	goto yy148;
	default:	goto yy46;
	}
yy58:
	++context.cursor;
#line 7933 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_OPEN_SQUARE_BRACKET (context.location); }
#line 8307 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy60:
	++context.cursor;
#line 7934 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_CLOSE_SQUARE_BRACKET (context.location); }
#line 8312 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy62:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy62;
	default:	goto yy64;
	}
yy64:
#line 7914 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_GENERIC_IDENTIFIER_LOWERCASE(santize_name(std::string(start, context.cursor)), context.location); }
#line 8385 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy65:
	++context.cursor;
#line 7929 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_OPEN_BRACE (context.location); }
#line 8390 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy67:
	++context.cursor;
#line 7940 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_VERTICAL_LINE (context.location); }
#line 8395 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy69:
	++context.cursor;
#line 7930 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_CLOSE_BRACE (context.location); }
#line 8400 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy71:
	++context.cursor;
#line 7912 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_cstring(std::string(start, context.cursor), context.location); }
#line 8405 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy73:
	yych = *++context.cursor;
	switch (yych) {
	case '\\':	goto yy73;
	default:	goto yy13;
	}
yy75:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy75;
	default:	goto yy77;
	}
yy77:
#line 7915 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_typefieldreference(santize_name(std::string(start, context.cursor)), context.location); }
#line 8484 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy78:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy78;
	default:	goto yy80;
	}
yy80:
#line 7916 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_valuefieldreference(santize_name(std::string(start, context.cursor)), context.location); }
#line 8557 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy81:
	yyaccept = 1;
	yych = *(YYMARKER = ++context.cursor);
	switch (yych) {
	case '\n':
	case '\r':	goto yy83;
	case '-':	goto yy149;
	default:	goto yy81;
	}
yy83:
#line 7906 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return yylex(context); }
#line 8570 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy84:
	yych = *++context.cursor;
	switch (yych) {
	case '.':	goto yy150;
	default:	goto yy85;
	}
yy85:
#line 7928 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_RANGE (context.location); }
#line 8580 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy86:
	yych = *++context.cursor;
	switch (yych) {
	case '=':	goto yy152;
	default:	goto yy87;
	}
yy87:
	context.cursor = YYMARKER;
	if (yyaccept == 0) {
		goto yy30;
	} else {
		goto yy83;
	}
yy88:
	yych = *++context.cursor;
	switch (yych) {
	case 'S':	goto yy154;
	default:	goto yy46;
	}
yy89:
	yych = *++context.cursor;
	switch (yych) {
	case 'L':	goto yy155;
	default:	goto yy46;
	}
yy90:
	yych = *++context.cursor;
	switch (yych) {
	case 'P':	goto yy157;
	default:	goto yy46;
	}
yy91:
	yych = *++context.cursor;
	switch (yych) {
	case 'T':	goto yy158;
	default:	goto yy46;
	}
yy92:
	yych = *++context.cursor;
	switch (yych) {
	case 'G':	goto yy159;
	default:	goto yy46;
	}
yy93:
	yych = *++context.cursor;
	switch (yych) {
	case 'T':	goto yy160;
	default:	goto yy46;
	}
yy94:
	yych = *++context.cursor;
	switch (yych) {
	case 'P':	goto yy162;
	default:	goto yy46;
	}
yy95:
	yych = *++context.cursor;
	switch (yych) {
	case 'O':	goto yy163;
	default:	goto yy46;
	}
yy96:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy97;
	}
yy97:
#line 7820 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_BY (context.location); }
#line 8714 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy98:
	yych = *++context.cursor;
	switch (yych) {
	case 'A':	goto yy164;
	case 'O':	goto yy165;
	default:	goto yy46;
	}
yy99:
	yych = *++context.cursor;
	switch (yych) {
	case 'A':	goto yy166;
	default:	goto yy46;
	}
yy100:
	yych = *++context.cursor;
	switch (yych) {
	case 'M':	goto yy167;
	case 'N':	goto yy168;
	default:	goto yy46;
	}
yy101:
	yych = *++context.cursor;
	switch (yych) {
	case 'T':	goto yy169;
	default:	goto yy46;
	}
yy102:
	yych = *++context.cursor;
	switch (yych) {
	case 'F':	goto yy170;
	default:	goto yy46;
	}
yy103:
	yych = *++context.cursor;
	switch (yych) {
	case 'R':	goto yy171;
	default:	goto yy46;
	}
yy104:
	yych = *++context.cursor;
	switch (yych) {
	case 'B':	goto yy172;
	default:	goto yy46;
	}
yy105:
	yych = *++context.cursor;
	switch (yych) {
	case 'C':	goto yy173;
	case 'D':	goto yy174;
	case 'U':	goto yy176;
	default:	goto yy46;
	}
yy106:
	yych = *++context.cursor;
	switch (yych) {
	case 'C':	goto yy177;
	case 'P':	goto yy178;
	case 'T':	goto yy179;
	default:	goto yy46;
	}
yy107:
	yych = *++context.cursor;
	switch (yych) {
	case 'L':	goto yy180;
	default:	goto yy46;
	}
yy108:
	yych = *++context.cursor;
	switch (yych) {
	case 'O':	goto yy181;
	default:	goto yy46;
	}
yy109:
	yych = *++context.cursor;
	switch (yych) {
	case 'n':	goto yy182;
	default:	goto yy46;
	}
yy110:
	yych = *++context.cursor;
	switch (yych) {
	case 'a':	goto yy183;
	default:	goto yy46;
	}
yy111:
	yych = *++context.cursor;
	switch (yych) {
	case '5':	goto yy184;
	default:	goto yy46;
	}
yy112:
	yych = *++context.cursor;
	switch (yych) {
	case 'E':	goto yy185;
	default:	goto yy46;
	}
yy113:
	yych = *++context.cursor;
	switch (yych) {
	case 'P':	goto yy186;
	default:	goto yy46;
	}
yy114:
	yych = *++context.cursor;
	switch (yych) {
	case 'C':	goto yy187;
	case 'S':	goto yy188;
	case 'T':	goto yy189;
	default:	goto yy46;
	}
yy115:
	yych = *++context.cursor;
	switch (yych) {
	case 'O':	goto yy190;
	default:	goto yy46;
	}
yy116:
	yych = *++context.cursor;
	switch (yych) {
	case 'X':	goto yy191;
	default:	goto yy46;
	}
yy117:
	yych = *++context.cursor;
	switch (yych) {
	case 'N':	goto yy193;
	default:	goto yy46;
	}
yy118:
	yych = *++context.cursor;
	switch (yych) {
	case 'T':	goto yy195;
	default:	goto yy46;
	}
yy119:
	yych = *++context.cursor;
	switch (yych) {
	case 'L':	goto yy196;
	default:	goto yy46;
	}
yy120:
	yych = *++context.cursor;
	switch (yych) {
	case 'm':	goto yy197;
	default:	goto yy46;
	}
yy121:
	yych = *++context.cursor;
	switch (yych) {
	case 'J':	goto yy198;
	default:	goto yy46;
	}
yy122:
	yych = *++context.cursor;
	switch (yych) {
	case 'T':	goto yy199;
	default:	goto yy46;
	}
yy123:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy124;
	}
yy124:
#line 7868 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_OF (context.location); }
#line 8945 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy125:
	yych = *++context.cursor;
	switch (yych) {
	case 'D':	goto yy200;
	default:	goto yy46;
	}
yy126:
	yych = *++context.cursor;
	switch (yych) {
	case 'T':	goto yy201;
	default:	goto yy46;
	}
yy127:
	yych = *++context.cursor;
	switch (yych) {
	case 'j':	goto yy202;
	default:	goto yy46;
	}
yy128:
	yych = *++context.cursor;
	switch (yych) {
	case 'T':	goto yy203;
	default:	goto yy46;
	}
yy129:
	yych = *++context.cursor;
	switch (yych) {
	case 'V':	goto yy204;
	default:	goto yy46;
	}
yy130:
	yych = *++context.cursor;
	switch (yych) {
	case 'U':	goto yy206;
	default:	goto yy46;
	}
yy131:
	yych = *++context.cursor;
	switch (yych) {
	case 'E':	goto yy207;
	case 'I':	goto yy208;
	default:	goto yy46;
	}
yy132:
	yych = *++context.cursor;
	switch (yych) {
	case 'i':	goto yy209;
	default:	goto yy46;
	}
yy133:
	yych = *++context.cursor;
	switch (yych) {
	case 'A':	goto yy210;
	case 'L':	goto yy211;
	default:	goto yy46;
	}
yy134:
	yych = *++context.cursor;
	switch (yych) {
	case 'Q':	goto yy212;
	case 'T':	goto yy213;
	default:	goto yy46;
	}
yy135:
	yych = *++context.cursor;
	switch (yych) {
	case 'Z':	goto yy215;
	default:	goto yy46;
	}
yy136:
	yych = *++context.cursor;
	switch (yych) {
	case 'R':	goto yy216;
	default:	goto yy46;
	}
yy137:
	yych = *++context.cursor;
	switch (yych) {
	case 'N':	goto yy217;
	default:	goto yy46;
	}
yy138:
	yych = *++context.cursor;
	switch (yych) {
	case '1':	goto yy218;
	default:	goto yy46;
	}
yy139:
	yych = *++context.cursor;
	switch (yych) {
	case 'G':	goto yy219;
	default:	goto yy46;
	}
yy140:
	yych = *++context.cursor;
	switch (yych) {
	case 'M':	goto yy220;
	default:	goto yy46;
	}
yy141:
	yych = *++context.cursor;
	switch (yych) {
	case 'U':	goto yy221;
	default:	goto yy46;
	}
yy142:
	yych = *++context.cursor;
	switch (yych) {
	case 'P':	goto yy222;
	default:	goto yy46;
	}
yy143:
	yych = *++context.cursor;
	switch (yych) {
	case 'l':	goto yy223;
	default:	goto yy46;
	}
yy144:
	yych = *++context.cursor;
	switch (yych) {
	case 'I':	goto yy224;
	default:	goto yy46;
	}
yy145:
	yych = *++context.cursor;
	switch (yych) {
	case 'C':	goto yy225;
	case 'F':	goto yy226;
	default:	goto yy46;
	}
yy146:
	yych = *++context.cursor;
	switch (yych) {
	case 'i':	goto yy227;
	default:	goto yy46;
	}
yy147:
	yych = *++context.cursor;
	switch (yych) {
	case 'd':	goto yy228;
	case 's':	goto yy229;
	default:	goto yy46;
	}
yy148:
	yych = *++context.cursor;
	switch (yych) {
	case 'T':	goto yy230;
	default:	goto yy46;
	}
yy149:
	yych = *++context.cursor;
	switch (yych) {
	case '\n':
	case '\r':	goto yy87;
	case '-':	goto yy231;
	default:	goto yy81;
	}
yy150:
	++context.cursor;
#line 7927 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_ELIPSIS (context.location); }
#line 9107 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy152:
	++context.cursor;
#line 7926 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_DEFINED_AS (context.location); }
#line 9112 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy154:
	yych = *++context.cursor;
	switch (yych) {
	case 'E':	goto yy233;
	case 'T':	goto yy234;
	default:	goto yy46;
	}
yy155:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy156;
	}
yy156:
#line 7813 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_ALL (context.location); }
#line 9192 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy157:
	yych = *++context.cursor;
	switch (yych) {
	case 'L':	goto yy235;
	default:	goto yy46;
	}
yy158:
	yych = *++context.cursor;
	switch (yych) {
	case 'O':	goto yy236;
	default:	goto yy46;
	}
yy159:
	yych = *++context.cursor;
	switch (yych) {
	case 'I':	goto yy237;
	default:	goto yy46;
	}
yy160:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy161;
	}
yy161:
#line 7817 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_BIT (context.location); }
#line 9283 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy162:
	yych = *++context.cursor;
	switch (yych) {
	case 'S':	goto yy238;
	default:	goto yy46;
	}
yy163:
	yych = *++context.cursor;
	switch (yych) {
	case 'L':	goto yy239;
	default:	goto yy46;
	}
yy164:
	yych = *++context.cursor;
	switch (yych) {
	case 'R':	goto yy240;
	default:	goto yy46;
	}
yy165:
	yych = *++context.cursor;
	switch (yych) {
	case 'I':	goto yy241;
	default:	goto yy46;
	}
yy166:
	yych = *++context.cursor;
	switch (yych) {
	case 'S':	goto yy242;
	default:	goto yy46;
	}
yy167:
	yych = *++context.cursor;
	switch (yych) {
	case 'P':	goto yy243;
	default:	goto yy46;
	}
yy168:
	yych = *++context.cursor;
	switch (yych) {
	case 'S':	goto yy244;
	case 'T':	goto yy245;
	default:	goto yy46;
	}
yy169:
	yych = *++context.cursor;
	switch (yych) {
	case 'E':	goto yy246;
	default:	goto yy46;
	}
yy170:
	yych = *++context.cursor;
	switch (yych) {
	case 'A':	goto yy248;
	case 'I':	goto yy249;
	default:	goto yy46;
	}
yy171:
	yych = *++context.cursor;
	switch (yych) {
	case 'A':	goto yy250;
	default:	goto yy46;
	}
yy172:
	yych = *++context.cursor;
	switch (yych) {
	case 'E':	goto yy251;
	default:	goto yy46;
	}
yy173:
	yych = *++context.cursor;
	switch (yych) {
	case 'O':	goto yy252;
	default:	goto yy46;
	}
yy174:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy175;
	}
yy175:
#line 7836 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_END (context.location); }
#line 9430 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy176:
	yych = *++context.cursor;
	switch (yych) {
	case 'M':	goto yy253;
	default:	goto yy46;
	}
yy177:
	yych = *++context.cursor;
	switch (yych) {
	case 'E':	goto yy254;
	default:	goto yy46;
	}
yy178:
	yych = *++context.cursor;
	switch (yych) {
	case 'L':	goto yy255;
	case 'O':	goto yy256;
	default:	goto yy46;
	}
yy179:
	yych = *++context.cursor;
	switch (yych) {
	case 'E':	goto yy257;
	default:	goto yy46;
	}
yy180:
	yych = *++context.cursor;
	switch (yych) {
	case 'S':	goto yy258;
	default:	goto yy46;
	}
yy181:
	yych = *++context.cursor;
	switch (yych) {
	case 'M':	goto yy259;
	default:	goto yy46;
	}
yy182:
	yych = *++context.cursor;
	switch (yych) {
	case 'e':	goto yy261;
	default:	goto yy46;
	}
yy183:
	yych = *++context.cursor;
	switch (yych) {
	case 'p':	goto yy262;
	default:	goto yy46;
	}
yy184:
	yych = *++context.cursor;
	switch (yych) {
	case 'S':	goto yy263;
	default:	goto yy46;
	}
yy185:
	yych = *++context.cursor;
	switch (yych) {
	case 'N':	goto yy264;
	default:	goto yy46;
	}
yy186:
	yych = *++context.cursor;
	switch (yych) {
	case 'L':	goto yy265;
	case 'O':	goto yy266;
	default:	goto yy46;
	}
yy187:
	yych = *++context.cursor;
	switch (yych) {
	case 'L':	goto yy267;
	default:	goto yy46;
	}
yy188:
	yych = *++context.cursor;
	switch (yych) {
	case 'T':	goto yy268;
	default:	goto yy46;
	}
yy189:
	yych = *++context.cursor;
	switch (yych) {
	case 'E':	goto yy269;
	default:	goto yy46;
	}
yy190:
	yych = *++context.cursor;
	switch (yych) {
	case '6':	goto yy270;
	default:	goto yy46;
	}
yy191:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy192;
	}
yy192:
#line 7859 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_MAX (context.location); }
#line 9595 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy193:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	case 'U':	goto yy271;
	default:	goto yy194;
	}
yy194:
#line 7860 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_MIN (context.location); }
#line 9668 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy195:
	yych = *++context.cursor;
	switch (yych) {
	case '-':	goto yy272;
	default:	goto yy46;
	}
yy196:
	yych = *++context.cursor;
	switch (yych) {
	case 'L':	goto yy273;
	default:	goto yy46;
	}
yy197:
	yych = *++context.cursor;
	switch (yych) {
	case 'e':	goto yy275;
	default:	goto yy46;
	}
yy198:
	yych = *++context.cursor;
	switch (yych) {
	case 'E':	goto yy276;
	default:	goto yy46;
	}
yy199:
	yych = *++context.cursor;
	switch (yych) {
	case 'E':	goto yy277;
	default:	goto yy46;
	}
yy200:
	yych = *++context.cursor;
	switch (yych) {
	case '_':	goto yy278;
	default:	goto yy46;
	}
yy201:
	yych = *++context.cursor;
	switch (yych) {
	case 'I':	goto yy279;
	default:	goto yy46;
	}
yy202:
	yych = *++context.cursor;
	switch (yych) {
	case 'e':	goto yy280;
	default:	goto yy46;
	}
yy203:
	yych = *++context.cursor;
	switch (yych) {
	case 'T':	goto yy281;
	default:	goto yy46;
	}
yy204:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy205;
	}
yy205:
#line 7872 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_PDV (context.location); }
#line 9795 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy206:
	yych = *++context.cursor;
	switch (yych) {
	case 'S':	goto yy282;
	default:	goto yy46;
	}
yy207:
	yych = *++context.cursor;
	switch (yych) {
	case 'S':	goto yy283;
	default:	goto yy46;
	}
yy208:
	yych = *++context.cursor;
	switch (yych) {
	case 'V':	goto yy284;
	default:	goto yy46;
	}
yy209:
	yych = *++context.cursor;
	switch (yych) {
	case 'n':	goto yy285;
	default:	goto yy46;
	}
yy210:
	yych = *++context.cursor;
	switch (yych) {
	case 'L':	goto yy286;
	default:	goto yy46;
	}
yy211:
	yych = *++context.cursor;
	switch (yych) {
	case 'A':	goto yy288;
	default:	goto yy46;
	}
yy212:
	yych = *++context.cursor;
	switch (yych) {
	case 'U':	goto yy289;
	default:	goto yy46;
	}
yy213:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	case 'T':	goto yy290;
	default:	goto yy214;
	}
yy214:
#line 7881 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_SET (context.location); }
#line 9910 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy215:
	yych = *++context.cursor;
	switch (yych) {
	case 'E':	goto yy291;
	default:	goto yy46;
	}
yy216:
	yych = *++context.cursor;
	switch (yych) {
	case 'I':	goto yy293;
	default:	goto yy46;
	}
yy217:
	yych = *++context.cursor;
	switch (yych) {
	case 'T':	goto yy294;
	default:	goto yy46;
	}
yy218:
	yych = *++context.cursor;
	switch (yych) {
	case 'S':	goto yy295;
	default:	goto yy46;
	}
yy219:
	yych = *++context.cursor;
	switch (yych) {
	case 'S':	goto yy296;
	default:	goto yy46;
	}
yy220:
	yych = *++context.cursor;
	switch (yych) {
	case 'E':	goto yy298;
	default:	goto yy46;
	}
yy221:
	yych = *++context.cursor;
	switch (yych) {
	case 'E':	goto yy300;
	default:	goto yy46;
	}
yy222:
	yych = *++context.cursor;
	switch (yych) {
	case 'E':	goto yy302;
	default:	goto yy46;
	}
yy223:
	yych = *++context.cursor;
	switch (yych) {
	case 'e':	goto yy303;
	default:	goto yy46;
	}
yy224:
	yych = *++context.cursor;
	switch (yych) {
	case 'O':	goto yy304;
	case 'Q':	goto yy305;
	case 'V':	goto yy306;
	default:	goto yy46;
	}
yy225:
	yych = *++context.cursor;
	switch (yych) {
	case 'T':	goto yy307;
	default:	goto yy46;
	}
yy226:
	yych = *++context.cursor;
	switch (yych) {
	case '8':	goto yy308;
	default:	goto yy46;
	}
yy227:
	yych = *++context.cursor;
	switch (yych) {
	case 'v':	goto yy309;
	default:	goto yy46;
	}
yy228:
	yych = *++context.cursor;
	switch (yych) {
	case 'e':	goto yy310;
	default:	goto yy46;
	}
yy229:
	yych = *++context.cursor;
	switch (yych) {
	case 'i':	goto yy311;
	default:	goto yy46;
	}
yy230:
	yych = *++context.cursor;
	switch (yych) {
	case 'H':	goto yy312;
	default:	goto yy46;
	}
yy231:
	++context.cursor;
#line 7905 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return yylex(context); }
#line 10013 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy233:
	yych = *++context.cursor;
	switch (yych) {
	case 'N':	goto yy314;
	default:	goto yy46;
	}
yy234:
	yych = *++context.cursor;
	switch (yych) {
	case 'R':	goto yy315;
	default:	goto yy46;
	}
yy235:
	yych = *++context.cursor;
	switch (yych) {
	case 'I':	goto yy316;
	default:	goto yy46;
	}
yy236:
	yych = *++context.cursor;
	switch (yych) {
	case 'M':	goto yy317;
	default:	goto yy46;
	}
yy237:
	yych = *++context.cursor;
	switch (yych) {
	case 'N':	goto yy318;
	default:	goto yy46;
	}
yy238:
	yych = *++context.cursor;
	switch (yych) {
	case 't':	goto yy320;
	default:	goto yy46;
	}
yy239:
	yych = *++context.cursor;
	switch (yych) {
	case 'E':	goto yy321;
	default:	goto yy46;
	}
yy240:
	yych = *++context.cursor;
	switch (yych) {
	case 'A':	goto yy322;
	default:	goto yy46;
	}
yy241:
	yych = *++context.cursor;
	switch (yych) {
	case 'C':	goto yy323;
	default:	goto yy46;
	}
yy242:
	yych = *++context.cursor;
	switch (yych) {
	case 'S':	goto yy324;
	default:	goto yy46;
	}
yy243:
	yych = *++context.cursor;
	switch (yych) {
	case 'O':	goto yy326;
	default:	goto yy46;
	}
yy244:
	yych = *++context.cursor;
	switch (yych) {
	case 'T':	goto yy327;
	default:	goto yy46;
	}
yy245:
	yych = *++context.cursor;
	switch (yych) {
	case 'A':	goto yy328;
	default:	goto yy46;
	}
yy246:
	yych = *++context.cursor;
	switch (yych) {
	case '-':	goto yy329;
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy247;
	}
yy247:
#line 7828 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_DATE (context.location); }
#line 10164 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy248:
	yych = *++context.cursor;
	switch (yych) {
	case 'U':	goto yy330;
	default:	goto yy46;
	}
yy249:
	yych = *++context.cursor;
	switch (yych) {
	case 'N':	goto yy331;
	default:	goto yy46;
	}
yy250:
	yych = *++context.cursor;
	switch (yych) {
	case 'T':	goto yy332;
	default:	goto yy46;
	}
yy251:
	yych = *++context.cursor;
	switch (yych) {
	case 'D':	goto yy333;
	default:	goto yy46;
	}
yy252:
	yych = *++context.cursor;
	switch (yych) {
	case 'D':	goto yy334;
	default:	goto yy46;
	}
yy253:
	yych = *++context.cursor;
	switch (yych) {
	case 'E':	goto yy335;
	default:	goto yy46;
	}
yy254:
	yych = *++context.cursor;
	switch (yych) {
	case 'P':	goto yy336;
	default:	goto yy46;
	}
yy255:
	yych = *++context.cursor;
	switch (yych) {
	case 'I':	goto yy337;
	default:	goto yy46;
	}
yy256:
	yych = *++context.cursor;
	switch (yych) {
	case 'R':	goto yy338;
	default:	goto yy46;
	}
yy257:
	yych = *++context.cursor;
	switch (yych) {
	case 'N':	goto yy339;
	case 'R':	goto yy340;
	default:	goto yy46;
	}
yy258:
	yych = *++context.cursor;
	switch (yych) {
	case 'E':	goto yy341;
	default:	goto yy46;
	}
yy259:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy260;
	}
yy260:
#line 7844 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_FROM (context.location); }
#line 10304 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy261:
	yych = *++context.cursor;
	switch (yych) {
	case 'r':	goto yy343;
	default:	goto yy46;
	}
yy262:
	yych = *++context.cursor;
	switch (yych) {
	case 'h':	goto yy344;
	default:	goto yy46;
	}
yy263:
	yych = *++context.cursor;
	switch (yych) {
	case 't':	goto yy345;
	default:	goto yy46;
	}
yy264:
	yych = *++context.cursor;
	switch (yych) {
	case 'T':	goto yy346;
	default:	goto yy46;
	}
yy265:
	yych = *++context.cursor;
	switch (yych) {
	case 'I':	goto yy347;
	default:	goto yy46;
	}
yy266:
	yych = *++context.cursor;
	switch (yych) {
	case 'R':	goto yy348;
	default:	goto yy46;
	}
yy267:
	yych = *++context.cursor;
	switch (yych) {
	case 'U':	goto yy349;
	default:	goto yy46;
	}
yy268:
	yych = *++context.cursor;
	switch (yych) {
	case 'A':	goto yy350;
	case 'R':	goto yy351;
	default:	goto yy46;
	}
yy269:
	yych = *++context.cursor;
	switch (yych) {
	case 'G':	goto yy352;
	case 'R':	goto yy353;
	default:	goto yy46;
	}
yy270:
	yych = *++context.cursor;
	switch (yych) {
	case '4':	goto yy354;
	default:	goto yy46;
	}
yy271:
	yych = *++context.cursor;
	switch (yych) {
	case 'S':	goto yy355;
	default:	goto yy46;
	}
yy272:
	yych = *++context.cursor;
	switch (yych) {
	case 'A':	goto yy356;
	default:	goto yy46;
	}
yy273:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy274;
	}
yy274:
#line 7863 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_ASN_NULL (context.location); }
#line 10451 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy275:
	yych = *++context.cursor;
	switch (yych) {
	case 'r':	goto yy357;
	default:	goto yy46;
	}
yy276:
	yych = *++context.cursor;
	switch (yych) {
	case 'C':	goto yy358;
	default:	goto yy46;
	}
yy277:
	yych = *++context.cursor;
	switch (yych) {
	case 'T':	goto yy359;
	default:	goto yy46;
	}
yy278:
	yych = *++context.cursor;
	switch (yych) {
	case 'I':	goto yy361;
	default:	goto yy46;
	}
yy279:
	yych = *++context.cursor;
	switch (yych) {
	case 'O':	goto yy362;
	default:	goto yy46;
	}
yy280:
	yych = *++context.cursor;
	switch (yych) {
	case 'c':	goto yy363;
	default:	goto yy46;
	}
yy281:
	yych = *++context.cursor;
	switch (yych) {
	case 'E':	goto yy364;
	default:	goto yy46;
	}
yy282:
	yych = *++context.cursor;
	switch (yych) {
	case '_':	goto yy365;
	default:	goto yy46;
	}
yy283:
	yych = *++context.cursor;
	switch (yych) {
	case 'E':	goto yy366;
	default:	goto yy46;
	}
yy284:
	yych = *++context.cursor;
	switch (yych) {
	case 'A':	goto yy367;
	default:	goto yy46;
	}
yy285:
	yych = *++context.cursor;
	switch (yych) {
	case 't':	goto yy368;
	default:	goto yy46;
	}
yy286:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy287;
	}
yy287:
#line 7877 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_REAL (context.location); }
#line 10590 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy288:
	yych = *++context.cursor;
	switch (yych) {
	case 'T':	goto yy369;
	default:	goto yy46;
	}
yy289:
	yych = *++context.cursor;
	switch (yych) {
	case 'E':	goto yy370;
	default:	goto yy46;
	}
yy290:
	yych = *++context.cursor;
	switch (yych) {
	case 'I':	goto yy371;
	default:	goto yy46;
	}
yy291:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy292;
	}
yy292:
#line 7883 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_SIZE (context.location); }
#line 10681 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy293:
	yych = *++context.cursor;
	switch (yych) {
	case 'N':	goto yy372;
	default:	goto yy46;
	}
yy294:
	yych = *++context.cursor;
	switch (yych) {
	case 'A':	goto yy373;
	default:	goto yy46;
	}
yy295:
	yych = *++context.cursor;
	switch (yych) {
	case 't':	goto yy374;
	default:	goto yy46;
	}
yy296:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy297;
	}
yy297:
#line 7887 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_TAGS (context.location); }
#line 10772 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy298:
	yych = *++context.cursor;
	switch (yych) {
	case '-':	goto yy375;
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy299;
	}
yy299:
#line 7889 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_TIME (context.location); }
#line 10845 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy300:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy301;
	}
yy301:
#line 7891 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_TRUE (context.location); }
#line 10918 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy302:
	yych = *++context.cursor;
	switch (yych) {
	case '-':	goto yy376;
	default:	goto yy46;
	}
yy303:
	yych = *++context.cursor;
	switch (yych) {
	case 't':	goto yy377;
	default:	goto yy46;
	}
yy304:
	yych = *++context.cursor;
	switch (yych) {
	case 'N':	goto yy378;
	default:	goto yy46;
	}
yy305:
	yych = *++context.cursor;
	switch (yych) {
	case 'U':	goto yy380;
	default:	goto yy46;
	}
yy306:
	yych = *++context.cursor;
	switch (yych) {
	case 'E':	goto yy381;
	default:	goto yy46;
	}
yy307:
	yych = *++context.cursor;
	switch (yych) {
	case 'i':	goto yy382;
	default:	goto yy46;
	}
yy308:
	yych = *++context.cursor;
	switch (yych) {
	case 'S':	goto yy383;
	default:	goto yy46;
	}
yy309:
	yych = *++context.cursor;
	switch (yych) {
	case 'e':	goto yy384;
	default:	goto yy46;
	}
yy310:
	yych = *++context.cursor;
	switch (yych) {
	case 'o':	goto yy385;
	default:	goto yy46;
	}
yy311:
	yych = *++context.cursor;
	switch (yych) {
	case 'b':	goto yy386;
	default:	goto yy46;
	}
yy312:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy313;
	}
yy313:
#line 7901 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_WITH (context.location); }
#line 11051 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy314:
	yych = *++context.cursor;
	switch (yych) {
	case 'T':	goto yy387;
	default:	goto yy46;
	}
yy315:
	yych = *++context.cursor;
	switch (yych) {
	case 'A':	goto yy389;
	default:	goto yy46;
	}
yy316:
	yych = *++context.cursor;
	switch (yych) {
	case 'C':	goto yy390;
	default:	goto yy46;
	}
yy317:
	yych = *++context.cursor;
	switch (yych) {
	case 'A':	goto yy391;
	default:	goto yy46;
	}
yy318:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy319;
	}
yy319:
#line 7816 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_BEGIN (context.location); }
#line 11148 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy320:
	yych = *++context.cursor;
	switch (yych) {
	case 'r':	goto yy392;
	default:	goto yy46;
	}
yy321:
	yych = *++context.cursor;
	switch (yych) {
	case 'A':	goto yy393;
	default:	goto yy46;
	}
yy322:
	yych = *++context.cursor;
	switch (yych) {
	case 'C':	goto yy394;
	default:	goto yy46;
	}
yy323:
	yych = *++context.cursor;
	switch (yych) {
	case 'E':	goto yy395;
	default:	goto yy46;
	}
yy324:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy325;
	}
yy325:
#line 7823 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_CLASS (context.location); }
#line 11245 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy326:
	yych = *++context.cursor;
	switch (yych) {
	case 'N':	goto yy397;
	default:	goto yy46;
	}
yy327:
	yych = *++context.cursor;
	switch (yych) {
	case 'R':	goto yy398;
	default:	goto yy46;
	}
yy328:
	yych = *++context.cursor;
	switch (yych) {
	case 'I':	goto yy399;
	default:	goto yy46;
	}
yy329:
	yych = *++context.cursor;
	switch (yych) {
	case 'T':	goto yy400;
	default:	goto yy46;
	}
yy330:
	yych = *++context.cursor;
	switch (yych) {
	case 'L':	goto yy401;
	default:	goto yy46;
	}
yy331:
	yych = *++context.cursor;
	switch (yych) {
	case 'I':	goto yy402;
	default:	goto yy46;
	}
yy332:
	yych = *++context.cursor;
	switch (yych) {
	case 'I':	goto yy403;
	default:	goto yy46;
	}
yy333:
	yych = *++context.cursor;
	switch (yych) {
	case 'D':	goto yy404;
	default:	goto yy46;
	}
yy334:
	yych = *++context.cursor;
	switch (yych) {
	case 'E':	goto yy405;
	case 'I':	goto yy406;
	default:	goto yy46;
	}
yy335:
	yych = *++context.cursor;
	switch (yych) {
	case 'R':	goto yy407;
	default:	goto yy46;
	}
yy336:
	yych = *++context.cursor;
	switch (yych) {
	case 'T':	goto yy408;
	default:	goto yy46;
	}
yy337:
	yych = *++context.cursor;
	switch (yych) {
	case 'C':	goto yy410;
	default:	goto yy46;
	}
yy338:
	yych = *++context.cursor;
	switch (yych) {
	case 'T':	goto yy411;
	default:	goto yy46;
	}
yy339:
	yych = *++context.cursor;
	switch (yych) {
	case 'S':	goto yy412;
	default:	goto yy46;
	}
yy340:
	yych = *++context.cursor;
	switch (yych) {
	case 'N':	goto yy413;
	default:	goto yy46;
	}
yy341:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy342;
	}
yy342:
#line 7843 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_FALSE (context.location); }
#line 11409 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy343:
	yych = *++context.cursor;
	switch (yych) {
	case 'a':	goto yy414;
	default:	goto yy46;
	}
yy344:
	yych = *++context.cursor;
	switch (yych) {
	case 'i':	goto yy415;
	default:	goto yy46;
	}
yy345:
	yych = *++context.cursor;
	switch (yych) {
	case 'r':	goto yy416;
	default:	goto yy46;
	}
yy346:
	yych = *++context.cursor;
	switch (yych) {
	case 'I':	goto yy417;
	default:	goto yy46;
	}
yy347:
	yych = *++context.cursor;
	switch (yych) {
	case 'C':	goto yy418;
	case 'E':	goto yy419;
	default:	goto yy46;
	}
yy348:
	yych = *++context.cursor;
	switch (yych) {
	case 'T':	goto yy420;
	default:	goto yy46;
	}
yy349:
	yych = *++context.cursor;
	switch (yych) {
	case 'D':	goto yy421;
	default:	goto yy46;
	}
yy350:
	yych = *++context.cursor;
	switch (yych) {
	case 'N':	goto yy422;
	default:	goto yy46;
	}
yy351:
	yych = *++context.cursor;
	switch (yych) {
	case 'U':	goto yy423;
	default:	goto yy46;
	}
yy352:
	yych = *++context.cursor;
	switch (yych) {
	case 'E':	goto yy424;
	default:	goto yy46;
	}
yy353:
	yych = *++context.cursor;
	switch (yych) {
	case 'S':	goto yy425;
	default:	goto yy46;
	}
yy354:
	yych = *++context.cursor;
	switch (yych) {
	case '6':	goto yy426;
	default:	goto yy46;
	}
yy355:
	yych = *++context.cursor;
	switch (yych) {
	case '-':	goto yy427;
	default:	goto yy46;
	}
yy356:
	yych = *++context.cursor;
	switch (yych) {
	case '-':	goto yy428;
	default:	goto yy46;
	}
yy357:
	yych = *++context.cursor;
	switch (yych) {
	case 'i':	goto yy429;
	default:	goto yy46;
	}
yy358:
	yych = *++context.cursor;
	switch (yych) {
	case 'T':	goto yy430;
	default:	goto yy46;
	}
yy359:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy360;
	}
yy360:
#line 7867 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_OCTET (context.location); }
#line 11579 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy361:
	yych = *++context.cursor;
	switch (yych) {
	case 'R':	goto yy432;
	default:	goto yy46;
	}
yy362:
	yych = *++context.cursor;
	switch (yych) {
	case 'N':	goto yy433;
	default:	goto yy46;
	}
yy363:
	yych = *++context.cursor;
	switch (yych) {
	case 't':	goto yy434;
	default:	goto yy46;
	}
yy364:
	yych = *++context.cursor;
	switch (yych) {
	case 'R':	goto yy435;
	default:	goto yy46;
	}
yy365:
	yych = *++context.cursor;
	switch (yych) {
	case 'I':	goto yy436;
	default:	goto yy46;
	}
yy366:
	yych = *++context.cursor;
	switch (yych) {
	case 'N':	goto yy437;
	default:	goto yy46;
	}
yy367:
	yych = *++context.cursor;
	switch (yych) {
	case 'T':	goto yy438;
	default:	goto yy46;
	}
yy368:
	yych = *++context.cursor;
	switch (yych) {
	case 'a':	goto yy439;
	default:	goto yy46;
	}
yy369:
	yych = *++context.cursor;
	switch (yych) {
	case 'I':	goto yy440;
	default:	goto yy46;
	}
yy370:
	yych = *++context.cursor;
	switch (yych) {
	case 'N':	goto yy441;
	default:	goto yy46;
	}
yy371:
	yych = *++context.cursor;
	switch (yych) {
	case 'N':	goto yy442;
	default:	goto yy46;
	}
yy372:
	yych = *++context.cursor;
	switch (yych) {
	case 'G':	goto yy443;
	default:	goto yy46;
	}
yy373:
	yych = *++context.cursor;
	switch (yych) {
	case 'X':	goto yy445;
	default:	goto yy46;
	}
yy374:
	yych = *++context.cursor;
	switch (yych) {
	case 'r':	goto yy447;
	default:	goto yy46;
	}
yy375:
	yych = *++context.cursor;
	switch (yych) {
	case 'O':	goto yy448;
	default:	goto yy46;
	}
yy376:
	yych = *++context.cursor;
	switch (yych) {
	case 'I':	goto yy449;
	default:	goto yy46;
	}
yy377:
	yych = *++context.cursor;
	switch (yych) {
	case 'e':	goto yy450;
	default:	goto yy46;
	}
yy378:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy379;
	}
yy379:
#line 7893 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_UNION (context.location); }
#line 11754 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy380:
	yych = *++context.cursor;
	switch (yych) {
	case 'E':	goto yy451;
	default:	goto yy46;
	}
yy381:
	yych = *++context.cursor;
	switch (yych) {
	case 'R':	goto yy453;
	default:	goto yy46;
	}
yy382:
	yych = *++context.cursor;
	switch (yych) {
	case 'm':	goto yy454;
	default:	goto yy46;
	}
yy383:
	yych = *++context.cursor;
	switch (yych) {
	case 't':	goto yy455;
	default:	goto yy46;
	}
yy384:
	yych = *++context.cursor;
	switch (yych) {
	case 'r':	goto yy456;
	default:	goto yy46;
	}
yy385:
	yych = *++context.cursor;
	switch (yych) {
	case 't':	goto yy457;
	default:	goto yy46;
	}
yy386:
	yych = *++context.cursor;
	switch (yych) {
	case 'l':	goto yy458;
	default:	goto yy46;
	}
yy387:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy388;
	}
yy388:
#line 7811 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_ABSENT (context.location); }
#line 11869 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy389:
	yych = *++context.cursor;
	switch (yych) {
	case 'C':	goto yy459;
	default:	goto yy46;
	}
yy390:
	yych = *++context.cursor;
	switch (yych) {
	case 'A':	goto yy460;
	default:	goto yy46;
	}
yy391:
	yych = *++context.cursor;
	switch (yych) {
	case 'T':	goto yy461;
	default:	goto yy46;
	}
yy392:
	yych = *++context.cursor;
	switch (yych) {
	case 'i':	goto yy462;
	default:	goto yy46;
	}
yy393:
	yych = *++context.cursor;
	switch (yych) {
	case 'N':	goto yy463;
	default:	goto yy46;
	}
yy394:
	yych = *++context.cursor;
	switch (yych) {
	case 'T':	goto yy465;
	default:	goto yy46;
	}
yy395:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy396;
	}
yy396:
#line 7822 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_CHOICE (context.location); }
#line 11978 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy397:
	yych = *++context.cursor;
	switch (yych) {
	case 'E':	goto yy466;
	default:	goto yy46;
	}
yy398:
	yych = *++context.cursor;
	switch (yych) {
	case 'A':	goto yy467;
	default:	goto yy46;
	}
yy399:
	yych = *++context.cursor;
	switch (yych) {
	case 'N':	goto yy468;
	default:	goto yy46;
	}
yy400:
	yych = *++context.cursor;
	switch (yych) {
	case 'I':	goto yy469;
	default:	goto yy46;
	}
yy401:
	yych = *++context.cursor;
	switch (yych) {
	case 'T':	goto yy470;
	default:	goto yy46;
	}
yy402:
	yych = *++context.cursor;
	switch (yych) {
	case 'T':	goto yy472;
	default:	goto yy46;
	}
yy403:
	yych = *++context.cursor;
	switch (yych) {
	case 'O':	goto yy473;
	default:	goto yy46;
	}
yy404:
	yych = *++context.cursor;
	switch (yych) {
	case 'E':	goto yy474;
	default:	goto yy46;
	}
yy405:
	yych = *++context.cursor;
	switch (yych) {
	case 'D':	goto yy475;
	default:	goto yy46;
	}
yy406:
	yych = *++context.cursor;
	switch (yych) {
	case 'N':	goto yy477;
	default:	goto yy46;
	}
yy407:
	yych = *++context.cursor;
	switch (yych) {
	case 'A':	goto yy478;
	default:	goto yy46;
	}
yy408:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy409;
	}
yy409:
#line 7838 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_EXCEPT (context.location); }
#line 12117 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy410:
	yych = *++context.cursor;
	switch (yych) {
	case 'I':	goto yy479;
	default:	goto yy46;
	}
yy411:
	yych = *++context.cursor;
	switch (yych) {
	case 'S':	goto yy480;
	default:	goto yy46;
	}
yy412:
	yych = *++context.cursor;
	switch (yych) {
	case 'I':	goto yy482;
	default:	goto yy46;
	}
yy413:
	yych = *++context.cursor;
	switch (yych) {
	case 'A':	goto yy483;
	default:	goto yy46;
	}
yy414:
	yych = *++context.cursor;
	switch (yych) {
	case 'l':	goto yy484;
	default:	goto yy46;
	}
yy415:
	yych = *++context.cursor;
	switch (yych) {
	case 'c':	goto yy485;
	default:	goto yy46;
	}
yy416:
	yych = *++context.cursor;
	switch (yych) {
	case 'i':	goto yy486;
	default:	goto yy46;
	}
yy417:
	yych = *++context.cursor;
	switch (yych) {
	case 'F':	goto yy487;
	default:	goto yy46;
	}
yy418:
	yych = *++context.cursor;
	switch (yych) {
	case 'I':	goto yy488;
	default:	goto yy46;
	}
yy419:
	yych = *++context.cursor;
	switch (yych) {
	case 'D':	goto yy489;
	default:	goto yy46;
	}
yy420:
	yych = *++context.cursor;
	switch (yych) {
	case 'S':	goto yy491;
	default:	goto yy46;
	}
yy421:
	yych = *++context.cursor;
	switch (yych) {
	case 'E':	goto yy493;
	default:	goto yy46;
	}
yy422:
	yych = *++context.cursor;
	switch (yych) {
	case 'C':	goto yy494;
	default:	goto yy46;
	}
yy423:
	yych = *++context.cursor;
	switch (yych) {
	case 'C':	goto yy495;
	default:	goto yy46;
	}
yy424:
	yych = *++context.cursor;
	switch (yych) {
	case 'R':	goto yy496;
	default:	goto yy46;
	}
yy425:
	yych = *++context.cursor;
	switch (yych) {
	case 'E':	goto yy498;
	default:	goto yy46;
	}
yy426:
	yych = *++context.cursor;
	switch (yych) {
	case 'S':	goto yy499;
	default:	goto yy46;
	}
yy427:
	yych = *++context.cursor;
	switch (yych) {
	case 'I':	goto yy500;
	default:	goto yy46;
	}
yy428:
	yych = *++context.cursor;
	switch (yych) {
	case 'N':	goto yy501;
	default:	goto yy46;
	}
yy429:
	yych = *++context.cursor;
	switch (yych) {
	case 'c':	goto yy502;
	default:	goto yy46;
	}
yy430:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy431;
	}
yy431:
#line 7865 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_OBJECT (context.location); }
#line 12310 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy432:
	yych = *++context.cursor;
	switch (yych) {
	case 'I':	goto yy503;
	default:	goto yy46;
	}
yy433:
	yych = *++context.cursor;
	switch (yych) {
	case 'A':	goto yy505;
	default:	goto yy46;
	}
yy434:
	yych = *++context.cursor;
	switch (yych) {
	case 'D':	goto yy506;
	default:	goto yy46;
	}
yy435:
	yych = *++context.cursor;
	switch (yych) {
	case 'N':	goto yy507;
	default:	goto yy46;
	}
yy436:
	yych = *++context.cursor;
	switch (yych) {
	case 'N':	goto yy509;
	default:	goto yy46;
	}
yy437:
	yych = *++context.cursor;
	switch (yych) {
	case 'T':	goto yy510;
	default:	goto yy46;
	}
yy438:
	yych = *++context.cursor;
	switch (yych) {
	case 'E':	goto yy512;
	default:	goto yy46;
	}
yy439:
	yych = *++context.cursor;
	switch (yych) {
	case 'b':	goto yy514;
	default:	goto yy46;
	}
yy440:
	yych = *++context.cursor;
	switch (yych) {
	case 'V':	goto yy515;
	default:	goto yy46;
	}
yy441:
	yych = *++context.cursor;
	switch (yych) {
	case 'C':	goto yy516;
	default:	goto yy46;
	}
yy442:
	yych = *++context.cursor;
	switch (yych) {
	case 'G':	goto yy517;
	default:	goto yy46;
	}
yy443:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy444;
	}
yy444:
#line 7884 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_STRING (context.location); }
#line 12449 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy445:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy446;
	}
yy446:
#line 7885 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_SYNTAX (context.location); }
#line 12522 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy447:
	yych = *++context.cursor;
	switch (yych) {
	case 'i':	goto yy518;
	default:	goto yy46;
	}
yy448:
	yych = *++context.cursor;
	switch (yych) {
	case 'F':	goto yy519;
	default:	goto yy46;
	}
yy449:
	yych = *++context.cursor;
	switch (yych) {
	case 'D':	goto yy520;
	default:	goto yy46;
	}
yy450:
	yych = *++context.cursor;
	switch (yych) {
	case 'x':	goto yy521;
	default:	goto yy46;
	}
yy451:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy452;
	}
yy452:
#line 7894 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_UNIQUE (context.location); }
#line 12619 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy453:
	yych = *++context.cursor;
	switch (yych) {
	case 'S':	goto yy522;
	default:	goto yy46;
	}
yy454:
	yych = *++context.cursor;
	switch (yych) {
	case 'e':	goto yy523;
	default:	goto yy46;
	}
yy455:
	yych = *++context.cursor;
	switch (yych) {
	case 'r':	goto yy525;
	default:	goto yy46;
	}
yy456:
	yych = *++context.cursor;
	switch (yych) {
	case 's':	goto yy526;
	default:	goto yy46;
	}
yy457:
	yych = *++context.cursor;
	switch (yych) {
	case 'e':	goto yy527;
	default:	goto yy46;
	}
yy458:
	yych = *++context.cursor;
	switch (yych) {
	case 'e':	goto yy528;
	default:	goto yy46;
	}
yy459:
	yych = *++context.cursor;
	switch (yych) {
	case 'T':	goto yy529;
	default:	goto yy46;
	}
yy460:
	yych = *++context.cursor;
	switch (yych) {
	case 'T':	goto yy530;
	default:	goto yy46;
	}
yy461:
	yych = *++context.cursor;
	switch (yych) {
	case 'I':	goto yy531;
	default:	goto yy46;
	}
yy462:
	yych = *++context.cursor;
	switch (yych) {
	case 'n':	goto yy532;
	default:	goto yy46;
	}
yy463:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy464;
	}
yy464:
#line 7819 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_BOOLEAN (context.location); }
#line 12752 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy465:
	yych = *++context.cursor;
	switch (yych) {
	case 'E':	goto yy533;
	default:	goto yy46;
	}
yy466:
	yych = *++context.cursor;
	switch (yych) {
	case 'N':	goto yy534;
	default:	goto yy46;
	}
yy467:
	yych = *++context.cursor;
	switch (yych) {
	case 'I':	goto yy535;
	default:	goto yy46;
	}
yy468:
	yych = *++context.cursor;
	switch (yych) {
	case 'I':	goto yy536;
	default:	goto yy46;
	}
yy469:
	yych = *++context.cursor;
	switch (yych) {
	case 'M':	goto yy537;
	default:	goto yy46;
	}
yy470:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy471;
	}
yy471:
#line 7830 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_DEFAULT (context.location); }
#line 12855 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy472:
	yych = *++context.cursor;
	switch (yych) {
	case 'I':	goto yy538;
	default:	goto yy46;
	}
yy473:
	yych = *++context.cursor;
	switch (yych) {
	case 'N':	goto yy539;
	default:	goto yy46;
	}
yy474:
	yych = *++context.cursor;
	switch (yych) {
	case 'D':	goto yy541;
	default:	goto yy46;
	}
yy475:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy476;
	}
yy476:
#line 7834 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_ENCODED (context.location); }
#line 12946 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy477:
	yych = *++context.cursor;
	switch (yych) {
	case 'G':	goto yy543;
	default:	goto yy46;
	}
yy478:
	yych = *++context.cursor;
	switch (yych) {
	case 'T':	goto yy544;
	default:	goto yy46;
	}
yy479:
	yych = *++context.cursor;
	switch (yych) {
	case 'T':	goto yy545;
	default:	goto yy46;
	}
yy480:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy481;
	}
yy481:
#line 7840 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_EXPORTS (context.location); }
#line 13037 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy482:
	yych = *++context.cursor;
	switch (yych) {
	case 'B':	goto yy547;
	default:	goto yy46;
	}
yy483:
	yych = *++context.cursor;
	switch (yych) {
	case 'L':	goto yy548;
	default:	goto yy46;
	}
yy484:
	yych = *++context.cursor;
	switch (yych) {
	case 'S':	goto yy550;
	case 'i':	goto yy551;
	default:	goto yy46;
	}
yy485:
	yych = *++context.cursor;
	switch (yych) {
	case 'S':	goto yy552;
	default:	goto yy46;
	}
yy486:
	yych = *++context.cursor;
	switch (yych) {
	case 'n':	goto yy553;
	default:	goto yy46;
	}
yy487:
	yych = *++context.cursor;
	switch (yych) {
	case 'I':	goto yy554;
	default:	goto yy46;
	}
yy488:
	yych = *++context.cursor;
	switch (yych) {
	case 'T':	goto yy555;
	default:	goto yy46;
	}
yy489:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy490;
	}
yy490:
#line 7851 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_IMPLIED (context.location); }
#line 13153 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy491:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy492;
	}
yy492:
#line 7852 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_IMPORTS (context.location); }
#line 13226 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy493:
	yych = *++context.cursor;
	switch (yych) {
	case 'S':	goto yy557;
	default:	goto yy46;
	}
yy494:
	yych = *++context.cursor;
	switch (yych) {
	case 'E':	goto yy559;
	default:	goto yy46;
	}
yy495:
	yych = *++context.cursor;
	switch (yych) {
	case 'T':	goto yy561;
	default:	goto yy46;
	}
yy496:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy497;
	}
yy497:
#line 7856 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_INTEGER (context.location); }
#line 13317 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy498:
	yych = *++context.cursor;
	switch (yych) {
	case 'C':	goto yy562;
	default:	goto yy46;
	}
yy499:
	yych = *++context.cursor;
	switch (yych) {
	case 't':	goto yy563;
	default:	goto yy46;
	}
yy500:
	yych = *++context.cursor;
	switch (yych) {
	case 'N':	goto yy564;
	default:	goto yy46;
	}
yy501:
	yych = *++context.cursor;
	switch (yych) {
	case 'U':	goto yy565;
	default:	goto yy46;
	}
yy502:
	yych = *++context.cursor;
	switch (yych) {
	case 'S':	goto yy566;
	default:	goto yy46;
	}
yy503:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy504;
	}
yy504:
#line 7869 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_OID_IRI (context.location); }
#line 13420 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy505:
	yych = *++context.cursor;
	switch (yych) {
	case 'L':	goto yy567;
	default:	goto yy46;
	}
yy506:
	yych = *++context.cursor;
	switch (yych) {
	case 'e':	goto yy569;
	default:	goto yy46;
	}
yy507:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy508;
	}
yy508:
#line 7871 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_PATTERN (context.location); }
#line 13505 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy509:
	yych = *++context.cursor;
	switch (yych) {
	case 'F':	goto yy570;
	default:	goto yy46;
	}
yy510:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy511;
	}
yy511:
#line 7874 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_PRESENT (context.location); }
#line 13584 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy512:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy513;
	}
yy513:
#line 7876 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_PRIVATE (context.location); }
#line 13657 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy514:
	yych = *++context.cursor;
	switch (yych) {
	case 'l':	goto yy571;
	default:	goto yy46;
	}
yy515:
	yych = *++context.cursor;
	switch (yych) {
	case 'E':	goto yy572;
	default:	goto yy46;
	}
yy516:
	yych = *++context.cursor;
	switch (yych) {
	case 'E':	goto yy573;
	default:	goto yy46;
	}
yy517:
	yych = *++context.cursor;
	switch (yych) {
	case 'S':	goto yy575;
	default:	goto yy46;
	}
yy518:
	yych = *++context.cursor;
	switch (yych) {
	case 'n':	goto yy577;
	default:	goto yy46;
	}
yy519:
	yych = *++context.cursor;
	switch (yych) {
	case '-':	goto yy578;
	default:	goto yy46;
	}
yy520:
	yych = *++context.cursor;
	switch (yych) {
	case 'E':	goto yy579;
	default:	goto yy46;
	}
yy521:
	yych = *++context.cursor;
	switch (yych) {
	case 'S':	goto yy580;
	default:	goto yy46;
	}
yy522:
	yych = *++context.cursor;
	switch (yych) {
	case 'A':	goto yy581;
	default:	goto yy46;
	}
yy523:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy524;
	}
yy524:
#line 7897 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_UTCTime (context.location); }
#line 13784 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy525:
	yych = *++context.cursor;
	switch (yych) {
	case 'i':	goto yy582;
	default:	goto yy46;
	}
yy526:
	yych = *++context.cursor;
	switch (yych) {
	case 'a':	goto yy583;
	default:	goto yy46;
	}
yy527:
	yych = *++context.cursor;
	switch (yych) {
	case 'x':	goto yy584;
	default:	goto yy46;
	}
yy528:
	yych = *++context.cursor;
	switch (yych) {
	case 'S':	goto yy585;
	default:	goto yy46;
	}
yy529:
	yych = *++context.cursor;
	switch (yych) {
	case '-':	goto yy586;
	default:	goto yy46;
	}
yy530:
	yych = *++context.cursor;
	switch (yych) {
	case 'I':	goto yy587;
	default:	goto yy46;
	}
yy531:
	yych = *++context.cursor;
	switch (yych) {
	case 'C':	goto yy588;
	default:	goto yy46;
	}
yy532:
	yych = *++context.cursor;
	switch (yych) {
	case 'g':	goto yy590;
	default:	goto yy46;
	}
yy533:
	yych = *++context.cursor;
	switch (yych) {
	case 'R':	goto yy592;
	default:	goto yy46;
	}
yy534:
	yych = *++context.cursor;
	switch (yych) {
	case 'T':	goto yy594;
	default:	goto yy46;
	}
yy535:
	yych = *++context.cursor;
	switch (yych) {
	case 'N':	goto yy596;
	default:	goto yy46;
	}
yy536:
	yych = *++context.cursor;
	switch (yych) {
	case 'N':	goto yy597;
	default:	goto yy46;
	}
yy537:
	yych = *++context.cursor;
	switch (yych) {
	case 'E':	goto yy598;
	default:	goto yy46;
	}
yy538:
	yych = *++context.cursor;
	switch (yych) {
	case 'O':	goto yy600;
	default:	goto yy46;
	}
yy539:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy540;
	}
yy540:
#line 7832 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_DURATION (context.location); }
#line 13941 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy541:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy542;
	}
yy542:
#line 7833 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_EMBEDDED (context.location); }
#line 14014 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy543:
	yych = *++context.cursor;
	switch (yych) {
	case '_':	goto yy601;
	default:	goto yy46;
	}
yy544:
	yych = *++context.cursor;
	switch (yych) {
	case 'E':	goto yy602;
	default:	goto yy46;
	}
yy545:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy546;
	}
yy546:
#line 7839 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_EXPLICIT (context.location); }
#line 14099 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy547:
	yych = *++context.cursor;
	switch (yych) {
	case 'I':	goto yy603;
	default:	goto yy46;
	}
yy548:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy549;
	}
yy549:
#line 7842 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_EXTERNAL (context.location); }
#line 14178 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy550:
	yych = *++context.cursor;
	switch (yych) {
	case 't':	goto yy604;
	default:	goto yy46;
	}
yy551:
	yych = *++context.cursor;
	switch (yych) {
	case 'z':	goto yy605;
	default:	goto yy46;
	}
yy552:
	yych = *++context.cursor;
	switch (yych) {
	case 't':	goto yy606;
	default:	goto yy46;
	}
yy553:
	yych = *++context.cursor;
	switch (yych) {
	case 'g':	goto yy607;
	default:	goto yy46;
	}
yy554:
	yych = *++context.cursor;
	switch (yych) {
	case 'E':	goto yy609;
	default:	goto yy46;
	}
yy555:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy556;
	}
yy556:
#line 7850 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_IMPLICIT (context.location); }
#line 14281 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy557:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy558;
	}
yy558:
#line 7853 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_INCLUDES (context.location); }
#line 14354 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy559:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy560;
	}
yy560:
#line 7854 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_INSTANCE (context.location); }
#line 14427 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy561:
	yych = *++context.cursor;
	switch (yych) {
	case 'I':	goto yy610;
	default:	goto yy46;
	}
yy562:
	yych = *++context.cursor;
	switch (yych) {
	case 'T':	goto yy611;
	default:	goto yy46;
	}
yy563:
	yych = *++context.cursor;
	switch (yych) {
	case 'r':	goto yy612;
	default:	goto yy46;
	}
yy564:
	yych = *++context.cursor;
	switch (yych) {
	case 'F':	goto yy613;
	default:	goto yy46;
	}
yy565:
	yych = *++context.cursor;
	switch (yych) {
	case 'M':	goto yy614;
	default:	goto yy46;
	}
yy566:
	yych = *++context.cursor;
	switch (yych) {
	case 't':	goto yy615;
	default:	goto yy46;
	}
yy567:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy568;
	}
yy568:
#line 7870 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_OPTIONAL (context.location); }
#line 14536 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy569:
	yych = *++context.cursor;
	switch (yych) {
	case 's':	goto yy616;
	default:	goto yy46;
	}
yy570:
	yych = *++context.cursor;
	switch (yych) {
	case 'I':	goto yy617;
	default:	goto yy46;
	}
yy571:
	yych = *++context.cursor;
	switch (yych) {
	case 'e':	goto yy618;
	default:	goto yy46;
	}
yy572:
	yych = *++context.cursor;
	switch (yych) {
	case '-':	goto yy619;
	default:	goto yy46;
	}
yy573:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy574;
	}
yy574:
#line 7880 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_SEQUENCE (context.location); }
#line 14633 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy575:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy576;
	}
yy576:
#line 7882 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_SETTINGS (context.location); }
#line 14706 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy577:
	yych = *++context.cursor;
	switch (yych) {
	case 'g':	goto yy620;
	default:	goto yy46;
	}
yy578:
	yych = *++context.cursor;
	switch (yych) {
	case 'D':	goto yy622;
	default:	goto yy46;
	}
yy579:
	yych = *++context.cursor;
	switch (yych) {
	case 'N':	goto yy623;
	default:	goto yy46;
	}
yy580:
	yych = *++context.cursor;
	switch (yych) {
	case 't':	goto yy624;
	default:	goto yy46;
	}
yy581:
	yych = *++context.cursor;
	switch (yych) {
	case 'L':	goto yy625;
	default:	goto yy46;
	}
yy582:
	yych = *++context.cursor;
	switch (yych) {
	case 'n':	goto yy627;
	default:	goto yy46;
	}
yy583:
	yych = *++context.cursor;
	switch (yych) {
	case 'l':	goto yy628;
	default:	goto yy46;
	}
yy584:
	yych = *++context.cursor;
	switch (yych) {
	case 'S':	goto yy629;
	default:	goto yy46;
	}
yy585:
	yych = *++context.cursor;
	switch (yych) {
	case 't':	goto yy630;
	default:	goto yy46;
	}
yy586:
	yych = *++context.cursor;
	switch (yych) {
	case 'S':	goto yy631;
	default:	goto yy46;
	}
yy587:
	yych = *++context.cursor;
	switch (yych) {
	case 'O':	goto yy632;
	default:	goto yy46;
	}
yy588:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy589;
	}
yy589:
#line 7815 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_AUTOMATIC (context.location); }
#line 14845 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy590:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy591;
	}
yy591:
#line 7818 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_BMPString (context.location); }
#line 14918 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy592:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy593;
	}
yy593:
#line 7821 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_CHARACTER (context.location); }
#line 14991 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy594:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	case 'S':	goto yy633;
	default:	goto yy595;
	}
yy595:
#line 7824 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_COMPONENT (context.location); }
#line 15064 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy596:
	yych = *++context.cursor;
	switch (yych) {
	case 'E':	goto yy635;
	default:	goto yy46;
	}
yy597:
	yych = *++context.cursor;
	switch (yych) {
	case 'G':	goto yy636;
	default:	goto yy46;
	}
yy598:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy599;
	}
yy599:
#line 7829 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_DATE_TIME (context.location); }
#line 15149 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy600:
	yych = *++context.cursor;
	switch (yych) {
	case 'N':	goto yy638;
	default:	goto yy46;
	}
yy601:
	yych = *++context.cursor;
	switch (yych) {
	case 'C':	goto yy639;
	default:	goto yy46;
	}
yy602:
	yych = *++context.cursor;
	switch (yych) {
	case 'D':	goto yy640;
	default:	goto yy46;
	}
yy603:
	yych = *++context.cursor;
	switch (yych) {
	case 'L':	goto yy642;
	default:	goto yy46;
	}
yy604:
	yych = *++context.cursor;
	switch (yych) {
	case 'r':	goto yy643;
	default:	goto yy46;
	}
yy605:
	yych = *++context.cursor;
	switch (yych) {
	case 'e':	goto yy644;
	default:	goto yy46;
	}
yy606:
	yych = *++context.cursor;
	switch (yych) {
	case 'r':	goto yy645;
	default:	goto yy46;
	}
yy607:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy608;
	}
yy608:
#line 7848 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_IA5String (context.location); }
#line 15264 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy609:
	yych = *++context.cursor;
	switch (yych) {
	case 'R':	goto yy646;
	default:	goto yy46;
	}
yy610:
	yych = *++context.cursor;
	switch (yych) {
	case 'O':	goto yy648;
	default:	goto yy46;
	}
yy611:
	yych = *++context.cursor;
	switch (yych) {
	case 'I':	goto yy649;
	default:	goto yy46;
	}
yy612:
	yych = *++context.cursor;
	switch (yych) {
	case 'i':	goto yy650;
	default:	goto yy46;
	}
yy613:
	yych = *++context.cursor;
	switch (yych) {
	case 'I':	goto yy651;
	default:	goto yy46;
	}
yy614:
	yych = *++context.cursor;
	switch (yych) {
	case 'B':	goto yy652;
	default:	goto yy46;
	}
yy615:
	yych = *++context.cursor;
	switch (yych) {
	case 'r':	goto yy653;
	default:	goto yy46;
	}
yy616:
	yych = *++context.cursor;
	switch (yych) {
	case 'c':	goto yy654;
	default:	goto yy46;
	}
yy617:
	yych = *++context.cursor;
	switch (yych) {
	case 'N':	goto yy655;
	default:	goto yy46;
	}
yy618:
	yych = *++context.cursor;
	switch (yych) {
	case 'S':	goto yy656;
	default:	goto yy46;
	}
yy619:
	yych = *++context.cursor;
	switch (yych) {
	case 'O':	goto yy657;
	default:	goto yy46;
	}
yy620:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy621;
	}
yy621:
#line 7886 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_T61String (context.location); }
#line 15403 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy622:
	yych = *++context.cursor;
	switch (yych) {
	case 'A':	goto yy658;
	default:	goto yy46;
	}
yy623:
	yych = *++context.cursor;
	switch (yych) {
	case 'T':	goto yy659;
	default:	goto yy46;
	}
yy624:
	yych = *++context.cursor;
	switch (yych) {
	case 'r':	goto yy660;
	default:	goto yy46;
	}
yy625:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy626;
	}
yy626:
#line 7895 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_UNIVERSAL (context.location); }
#line 15494 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy627:
	yych = *++context.cursor;
	switch (yych) {
	case 'g':	goto yy661;
	default:	goto yy46;
	}
yy628:
	yych = *++context.cursor;
	switch (yych) {
	case 'S':	goto yy663;
	default:	goto yy46;
	}
yy629:
	yych = *++context.cursor;
	switch (yych) {
	case 't':	goto yy664;
	default:	goto yy46;
	}
yy630:
	yych = *++context.cursor;
	switch (yych) {
	case 'r':	goto yy665;
	default:	goto yy46;
	}
yy631:
	yych = *++context.cursor;
	switch (yych) {
	case 'Y':	goto yy666;
	default:	goto yy46;
	}
yy632:
	yych = *++context.cursor;
	switch (yych) {
	case 'N':	goto yy667;
	default:	goto yy46;
	}
yy633:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy634;
	}
yy634:
#line 7825 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_COMPONENTS (context.location); }
#line 15603 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy635:
	yych = *++context.cursor;
	switch (yych) {
	case 'D':	goto yy669;
	default:	goto yy46;
	}
yy636:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy637;
	}
yy637:
#line 7827 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_CONTAINING (context.location); }
#line 15682 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy638:
	yych = *++context.cursor;
	switch (yych) {
	case 'S':	goto yy671;
	default:	goto yy46;
	}
yy639:
	yych = *++context.cursor;
	switch (yych) {
	case 'O':	goto yy673;
	default:	goto yy46;
	}
yy640:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy641;
	}
yy641:
#line 7837 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_ENUMERATED (context.location); }
#line 15767 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy642:
	yych = *++context.cursor;
	switch (yych) {
	case 'I':	goto yy674;
	default:	goto yy46;
	}
yy643:
	yych = *++context.cursor;
	switch (yych) {
	case 'i':	goto yy675;
	default:	goto yy46;
	}
yy644:
	yych = *++context.cursor;
	switch (yych) {
	case 'd':	goto yy676;
	default:	goto yy46;
	}
yy645:
	yych = *++context.cursor;
	switch (yych) {
	case 'i':	goto yy677;
	default:	goto yy46;
	}
yy646:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy647;
	}
yy647:
#line 7849 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_IDENTIFIER (context.location); }
#line 15864 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy648:
	yych = *++context.cursor;
	switch (yych) {
	case 'N':	goto yy678;
	default:	goto yy46;
	}
yy649:
	yych = *++context.cursor;
	switch (yych) {
	case 'O':	goto yy679;
	default:	goto yy46;
	}
yy650:
	yych = *++context.cursor;
	switch (yych) {
	case 'n':	goto yy680;
	default:	goto yy46;
	}
yy651:
	yych = *++context.cursor;
	switch (yych) {
	case 'N':	goto yy681;
	default:	goto yy46;
	}
yy652:
	yych = *++context.cursor;
	switch (yych) {
	case 'E':	goto yy682;
	default:	goto yy46;
	}
yy653:
	yych = *++context.cursor;
	switch (yych) {
	case 'i':	goto yy683;
	default:	goto yy46;
	}
yy654:
	yych = *++context.cursor;
	switch (yych) {
	case 'r':	goto yy684;
	default:	goto yy46;
	}
yy655:
	yych = *++context.cursor;
	switch (yych) {
	case 'I':	goto yy685;
	default:	goto yy46;
	}
yy656:
	yych = *++context.cursor;
	switch (yych) {
	case 't':	goto yy686;
	default:	goto yy46;
	}
yy657:
	yych = *++context.cursor;
	switch (yych) {
	case 'I':	goto yy687;
	default:	goto yy46;
	}
yy658:
	yych = *++context.cursor;
	switch (yych) {
	case 'Y':	goto yy688;
	default:	goto yy46;
	}
yy659:
	yych = *++context.cursor;
	switch (yych) {
	case 'I':	goto yy690;
	default:	goto yy46;
	}
yy660:
	yych = *++context.cursor;
	switch (yych) {
	case 'i':	goto yy691;
	default:	goto yy46;
	}
yy661:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy662;
	}
yy662:
#line 7898 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_UTF8String (context.location); }
#line 16015 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy663:
	yych = *++context.cursor;
	switch (yych) {
	case 't':	goto yy692;
	default:	goto yy46;
	}
yy664:
	yych = *++context.cursor;
	switch (yych) {
	case 'r':	goto yy693;
	default:	goto yy46;
	}
yy665:
	yych = *++context.cursor;
	switch (yych) {
	case 'i':	goto yy694;
	default:	goto yy46;
	}
yy666:
	yych = *++context.cursor;
	switch (yych) {
	case 'N':	goto yy695;
	default:	goto yy46;
	}
yy667:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy668;
	}
yy668:
#line 7814 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_APPLICATION (context.location); }
#line 16112 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy669:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy670;
	}
yy670:
#line 7826 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_CONSTRAINED (context.location); }
#line 16185 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy671:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy672;
	}
yy672:
#line 7831 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_DEFINITIONS (context.location); }
#line 16258 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy673:
	yych = *++context.cursor;
	switch (yych) {
	case 'N':	goto yy696;
	default:	goto yy46;
	}
yy674:
	yych = *++context.cursor;
	switch (yych) {
	case 'T':	goto yy697;
	default:	goto yy46;
	}
yy675:
	yych = *++context.cursor;
	switch (yych) {
	case 'n':	goto yy698;
	default:	goto yy46;
	}
yy676:
	yych = *++context.cursor;
	switch (yych) {
	case 'T':	goto yy699;
	default:	goto yy46;
	}
yy677:
	yych = *++context.cursor;
	switch (yych) {
	case 'n':	goto yy700;
	default:	goto yy46;
	}
yy678:
	yych = *++context.cursor;
	switch (yych) {
	case 'S':	goto yy701;
	default:	goto yy46;
	}
yy679:
	yych = *++context.cursor;
	switch (yych) {
	case 'N':	goto yy703;
	default:	goto yy46;
	}
yy680:
	yych = *++context.cursor;
	switch (yych) {
	case 'g':	goto yy705;
	default:	goto yy46;
	}
yy681:
	yych = *++context.cursor;
	switch (yych) {
	case 'I':	goto yy707;
	default:	goto yy46;
	}
yy682:
	yych = *++context.cursor;
	switch (yych) {
	case 'R':	goto yy708;
	default:	goto yy46;
	}
yy683:
	yych = *++context.cursor;
	switch (yych) {
	case 'n':	goto yy710;
	default:	goto yy46;
	}
yy684:
	yych = *++context.cursor;
	switch (yych) {
	case 'i':	goto yy711;
	default:	goto yy46;
	}
yy685:
	yych = *++context.cursor;
	switch (yych) {
	case 'T':	goto yy712;
	default:	goto yy46;
	}
yy686:
	yych = *++context.cursor;
	switch (yych) {
	case 'r':	goto yy713;
	default:	goto yy46;
	}
yy687:
	yych = *++context.cursor;
	switch (yych) {
	case 'D':	goto yy714;
	default:	goto yy46;
	}
yy688:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy689;
	}
yy689:
#line 7890 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_TIME_OF_DAY (context.location); }
#line 16421 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy690:
	yych = *++context.cursor;
	switch (yych) {
	case 'F':	goto yy716;
	default:	goto yy46;
	}
yy691:
	yych = *++context.cursor;
	switch (yych) {
	case 'n':	goto yy717;
	default:	goto yy46;
	}
yy692:
	yych = *++context.cursor;
	switch (yych) {
	case 'r':	goto yy718;
	default:	goto yy46;
	}
yy693:
	yych = *++context.cursor;
	switch (yych) {
	case 'i':	goto yy719;
	default:	goto yy46;
	}
yy694:
	yych = *++context.cursor;
	switch (yych) {
	case 'n':	goto yy720;
	default:	goto yy46;
	}
yy695:
	yych = *++context.cursor;
	switch (yych) {
	case 'T':	goto yy721;
	default:	goto yy46;
	}
yy696:
	yych = *++context.cursor;
	switch (yych) {
	case 'T':	goto yy722;
	default:	goto yy46;
	}
yy697:
	yych = *++context.cursor;
	switch (yych) {
	case 'Y':	goto yy723;
	default:	goto yy46;
	}
yy698:
	yych = *++context.cursor;
	switch (yych) {
	case 'g':	goto yy725;
	default:	goto yy46;
	}
yy699:
	yych = *++context.cursor;
	switch (yych) {
	case 'i':	goto yy727;
	default:	goto yy46;
	}
yy700:
	yych = *++context.cursor;
	switch (yych) {
	case 'g':	goto yy728;
	default:	goto yy46;
	}
yy701:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy702;
	}
yy702:
#line 7855 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_INSTRUCTIONS (context.location); }
#line 16560 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy703:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy704;
	}
yy704:
#line 7857 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_INTERSECTION (context.location); }
#line 16633 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy705:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy706;
	}
yy706:
#line 7858 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_ISO646String (context.location); }
#line 16706 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy707:
	yych = *++context.cursor;
	switch (yych) {
	case 'T':	goto yy730;
	default:	goto yy46;
	}
yy708:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy709;
	}
yy709:
#line 7862 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_NOT_A_NUMBER (context.location); }
#line 16785 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy710:
	yych = *++context.cursor;
	switch (yych) {
	case 'g':	goto yy731;
	default:	goto yy46;
	}
yy711:
	yych = *++context.cursor;
	switch (yych) {
	case 'p':	goto yy733;
	default:	goto yy46;
	}
yy712:
	yych = *++context.cursor;
	switch (yych) {
	case 'Y':	goto yy734;
	default:	goto yy46;
	}
yy713:
	yych = *++context.cursor;
	switch (yych) {
	case 'i':	goto yy736;
	default:	goto yy46;
	}
yy714:
	yych = *++context.cursor;
	switch (yych) {
	case '-':	goto yy737;
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy715;
	}
yy715:
#line 7878 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_RELATIVE_OID (context.location); }
#line 16882 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy716:
	yych = *++context.cursor;
	switch (yych) {
	case 'I':	goto yy738;
	default:	goto yy46;
	}
yy717:
	yych = *++context.cursor;
	switch (yych) {
	case 'g':	goto yy739;
	default:	goto yy46;
	}
yy718:
	yych = *++context.cursor;
	switch (yych) {
	case 'i':	goto yy741;
	default:	goto yy46;
	}
yy719:
	yych = *++context.cursor;
	switch (yych) {
	case 'n':	goto yy742;
	default:	goto yy46;
	}
yy720:
	yych = *++context.cursor;
	switch (yych) {
	case 'g':	goto yy743;
	default:	goto yy46;
	}
yy721:
	yych = *++context.cursor;
	switch (yych) {
	case 'A':	goto yy745;
	default:	goto yy46;
	}
yy722:
	yych = *++context.cursor;
	switch (yych) {
	case 'R':	goto yy746;
	default:	goto yy46;
	}
yy723:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy724;
	}
yy724:
#line 7841 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_EXTENSIBILITY (context.location); }
#line 16997 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy725:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy726;
	}
yy726:
#line 7846 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_GeneralString (context.location); }
#line 17070 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy727:
	yych = *++context.cursor;
	switch (yych) {
	case 'm':	goto yy747;
	default:	goto yy46;
	}
yy728:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy729;
	}
yy729:
#line 7847 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_GraphicString (context.location); }
#line 17149 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy730:
	yych = *++context.cursor;
	switch (yych) {
	case 'Y':	goto yy748;
	default:	goto yy46;
	}
yy731:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy732;
	}
yy732:
#line 7864 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_NumericString (context.location); }
#line 17228 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy733:
	yych = *++context.cursor;
	switch (yych) {
	case 't':	goto yy750;
	default:	goto yy46;
	}
yy734:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy735;
	}
yy735:
#line 7873 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_PLUS_INFINITY (context.location); }
#line 17307 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy736:
	yych = *++context.cursor;
	switch (yych) {
	case 'n':	goto yy751;
	default:	goto yy46;
	}
yy737:
	yych = *++context.cursor;
	switch (yych) {
	case 'I':	goto yy752;
	default:	goto yy46;
	}
yy738:
	yych = *++context.cursor;
	switch (yych) {
	case 'E':	goto yy753;
	default:	goto yy46;
	}
yy739:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy740;
	}
yy740:
#line 7888 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_TeletexString (context.location); }
#line 17398 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy741:
	yych = *++context.cursor;
	switch (yych) {
	case 'n':	goto yy754;
	default:	goto yy46;
	}
yy742:
	yych = *++context.cursor;
	switch (yych) {
	case 'g':	goto yy755;
	default:	goto yy46;
	}
yy743:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy744;
	}
yy744:
#line 7900 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_VisibleString (context.location); }
#line 17483 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy745:
	yych = *++context.cursor;
	switch (yych) {
	case 'X':	goto yy757;
	default:	goto yy46;
	}
yy746:
	yych = *++context.cursor;
	switch (yych) {
	case 'O':	goto yy759;
	default:	goto yy46;
	}
yy747:
	yych = *++context.cursor;
	switch (yych) {
	case 'e':	goto yy760;
	default:	goto yy46;
	}
yy748:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy749;
	}
yy749:
#line 7861 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_MINUS_INFINITY (context.location); }
#line 17574 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy750:
	yych = *++context.cursor;
	switch (yych) {
	case 'o':	goto yy762;
	default:	goto yy46;
	}
yy751:
	yych = *++context.cursor;
	switch (yych) {
	case 'g':	goto yy763;
	default:	goto yy46;
	}
yy752:
	yych = *++context.cursor;
	switch (yych) {
	case 'R':	goto yy765;
	default:	goto yy46;
	}
yy753:
	yych = *++context.cursor;
	switch (yych) {
	case 'R':	goto yy766;
	default:	goto yy46;
	}
yy754:
	yych = *++context.cursor;
	switch (yych) {
	case 'g':	goto yy768;
	default:	goto yy46;
	}
yy755:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy756;
	}
yy756:
#line 7899 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_VideotexString (context.location); }
#line 17677 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy757:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy758;
	}
yy758:
#line 7812 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_ABSTRACT_SYNTAX (context.location); }
#line 17750 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy759:
	yych = *++context.cursor;
	switch (yych) {
	case 'L':	goto yy770;
	default:	goto yy46;
	}
yy760:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy761;
	}
yy761:
#line 7845 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_GeneralizedTime (context.location); }
#line 17829 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy762:
	yych = *++context.cursor;
	switch (yych) {
	case 'r':	goto yy772;
	default:	goto yy46;
	}
yy763:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy764;
	}
yy764:
#line 7875 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_PrintableString (context.location); }
#line 17908 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy765:
	yych = *++context.cursor;
	switch (yych) {
	case 'I':	goto yy774;
	default:	goto yy46;
	}
yy766:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy767;
	}
yy767:
#line 7892 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_TYPE_IDENTIFIER (context.location); }
#line 17987 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy768:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy769;
	}
yy769:
#line 7896 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_UniversalString (context.location); }
#line 18060 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy770:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy771;
	}
yy771:
#line 7835 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_ENCODING_CONTROL (context.location); }
#line 18133 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy772:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy773;
	}
yy773:
#line 7866 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_ObjectDescriptor (context.location); }
#line 18206 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
yy774:
	yych = *++context.cursor;
	switch (yych) {
	case '-':
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy45;
	default:	goto yy775;
	}
yy775:
#line 7879 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"
	{ context.location.columns(context.cursor - start); return asn1_parser::make_RELATIVE_OID_IRI (context.location); }
#line 18279 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.hpp"
}
#line 7945 "/home/styler/git/build-fast_ber-Desktop_Qt_5_11_2_GCC_64bit-Debug/src/autogen/asn_compiler.re"

    }
}
